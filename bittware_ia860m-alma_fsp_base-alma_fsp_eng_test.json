{
    "drivers": {
        "sys_id_persona": {
            "driver": "sys_id_driver",
            "register_sets": {
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|E_PERSONA|E_SYS_ID|E_CSR"
                }
            }
        },
        "eng_test": {
            "driver": "alma_fsp_eng_test_driver",
            "register_sets": {
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|E_PERSONA|E_REG_BANK"
                }
            }
        },
        "sys_id_base": {
            "driver": "sys_id_driver",
            "register_sets": {
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|E_SYS_ID|E_CSR"
                }
            }
        },
        "seu_detection": {
            "driver": "seu_detection_driver",
            "register_sets": {
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|E_SEU_DETECTION|E_REG_BANK"
                }
            }
        },
        "hbm0": {
            "driver": "hbm_status_driver",
            "register_sets": {
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_HBM[0]|E_HBM_STATUS|E_HBM_STATUS_REG"
                }
            }
        },
        "hbm1": {
            "driver": "hbm_status_driver",
            "register_sets": {
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_HBM[1]|E_HBM_STATUS|E_HBM_STATUS_REG"
                }
            }
        },
        "eth1_3": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth0_3": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth2_3": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth0_1": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth2_1": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth2_0": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth1_2": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth0_0": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth2_2": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth0_2": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth1_1": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        },
        "eth1_0": {
            "driver": "ftile_ethernet_driver",
            "register_sets": {
                "xcvr1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE"
                },
                "xcvr0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE"
                },
                "fec3": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE"
                },
                "fec0": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE"
                },
                "fec2": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE"
                },
                "fec1": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE"
                },
                "csr": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE"
                },
                "hip": {
                    "$ref": "#/DeTrI/TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE"
                }
            }
        }
    },
    "RegisterSetDefinitions": {
        "ftile_ethernet.ftile_ethernet_ehip_reg_pkg": {
            "name": "Intel Agilex F-Tile 400GbE (ehip)",
            "mnemonic": "ftile_ethernet_ehip",
            "version": "24.2.0",
            "desc": [
                "For full documentation refer to the Intel Documentation for the IP core."
            ],
            "registers": {
                "phy_ehip_pcs_modes": {
                    "name": "PHY_EHIP_PCS_MODES",
                    "addressOffset": "0x48",
                    "desc": [
                        "EHIP PCS Mode Configuration ",
                        "Registers to control whether the TX and RX PCS use the 66b interface (skip encoder/decoder), and whether they use the scrambler and descrambler"
                    ],
                    "fields": {
                        "phy_sclr_frame_error": {
                            "name": "PHY_SCLR_FRAME_ERROR",
                            "bitOffset": 12,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Clear phy_frame_error bits ",
                                "1:Return all sticky frame error bits to 0"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_am_encoding_0": {
                    "name": "TX_AM_ENCODING_0",
                    "addressOffset": "0x50",
                    "desc": [
                        "Programmable Alignment Marker Encoding 0 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_0": {
                            "name": "AM_0",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 0."
                            ],
                            "reset": "0x907647"
                        }
                    }
                },
                "tx_am_encoding_1": {
                    "name": "TX_AM_ENCODING_1",
                    "addressOffset": "0x54",
                    "desc": [
                        "Programmable Alignment Marker Encoding 1 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_1": {
                            "name": "AM_1",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 1."
                            ],
                            "reset": "0xF0C4E6"
                        }
                    }
                },
                "tx_am_encoding_2": {
                    "name": "TX_AM_ENCODING_2",
                    "addressOffset": "0x58",
                    "desc": [
                        "Programmable Alignment Marker Encoding 2 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_2": {
                            "name": "AM_2",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 2."
                            ],
                            "reset": "0xC5659B"
                        }
                    }
                },
                "tx_am_encoding_3": {
                    "name": "TX_AM_ENCODING_3",
                    "addressOffset": "0x5c",
                    "desc": [
                        "Programmable Alignment Marker Encoding 3 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_3": {
                            "name": "AM_3",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 3."
                            ],
                            "reset": "0xA2793D"
                        }
                    }
                },
                "rx_am_encoding_0": {
                    "name": "RX_AM_ENCODING_0",
                    "addressOffset": "0x60",
                    "desc": [
                        "Programmable Alignment Marker Encoding 0 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_4": {
                            "name": "AM_4",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 0."
                            ],
                            "reset": "0x907647"
                        }
                    }
                },
                "rx_am_encoding_1": {
                    "name": "RX_AM_ENCODING_1",
                    "addressOffset": "0x64",
                    "desc": [
                        "Programmable Alignment Marker Encoding 1 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_5": {
                            "name": "AM_5",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 1."
                            ],
                            "reset": "0xF0C4E6"
                        }
                    }
                },
                "rx_am_encoding_2": {
                    "name": "RX_AM_ENCODING_2",
                    "addressOffset": "0x68",
                    "desc": [
                        "Programmable Alignment Marker Encoding 2 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_6": {
                            "name": "AM_6",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 2."
                            ],
                            "reset": "0xC5659B"
                        }
                    }
                },
                "rx_am_encoding_3": {
                    "name": "RX_AM_ENCODING_3",
                    "addressOffset": "0x6c",
                    "desc": [
                        "Programmable Alignment Marker Encoding 3 ",
                        "Defines the 24b encoding used for a single alignment marker. Only applies to 40GE and 50GE variants."
                    ],
                    "fields": {
                        "am_7": {
                            "name": "AM_7",
                            "bitOffset": 0,
                            "bitWidth": 24,
                            "access": "rw",
                            "desc": [
                                "",
                                "This code and its inverse are combined with a BIP value to create an alignment marked for the corresponding PCS Virtual lane 3."
                            ],
                            "reset": "0xA2793D"
                        }
                    }
                },
                "xus_timer_window": {
                    "name": "XUS_TIMER_WINDOW",
                    "addressOffset": "0x70",
                    "desc": [
                        "Timer Window for BER Measurements"
                    ],
                    "fields": {
                        "cycles": {
                            "name": "CYCLES",
                            "bitOffset": 0,
                            "bitWidth": 21,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the timer window for BER measurements in clock cycles."
                            ],
                            "reset": 201415
                        }
                    }
                },
                "ber_invalid_count": {
                    "name": "BER_INVALID_COUNT",
                    "addressOffset": "0x74",
                    "desc": [
                        "Hi-BER Frame Errors"
                    ],
                    "fields": {
                        "count_0": {
                            "name": "COUNT_0",
                            "bitOffset": 0,
                            "bitWidth": 7,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the BER count that triggers hi_ber."
                            ],
                            "reset": 97
                        }
                    }
                },
                "err_inj": {
                    "name": "ERR_INJ",
                    "addressOffset": "0x78",
                    "desc": [
                        "PCS Error Injection"
                    ],
                    "fields": {
                        "inj_err": {
                            "name": "INJ_ERR",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "rw",
                            "desc": [
                                "",
                                "Allows errors injection in the corresponding virtual lane. ",
                                "0->1:Flip bits to inject encoding errors in corresponding virtual lane ",
                                "0:Clear all error injection settings"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "phy_frame_error": {
                    "name": "PHY_FRAME_ERROR",
                    "addressOffset": "0x80",
                    "desc": [
                        "Frame Errors Detected"
                    ],
                    "fields": {
                        "frmerr": {
                            "name": "FRMERR",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "1:A frame error was detected on the corresponding physical lane. This bit is sticky, and must be cleared by asserting sclr_frame_error"
                            ]
                        }
                    }
                },
                "phy_rxpcs_status": {
                    "name": "PHY_RXPCS_STATUS",
                    "addressOffset": "0x84",
                    "desc": [
                        "RX PCS Status"
                    ],
                    "fields": {
                        "hi_ber": {
                            "name": "HI_BER",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "Status bits to monitor Hi-BER and PCS fully aligned. ",
                                "1:One or more virtual lanes are in the HI BER state defined in the Ethernet specification"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_aligned": {
                            "name": "RX_ALIGNED",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX PCS fully aligned ",
                                "1:The RX PCS is fully aligned and ready to start decoding data"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "am_lock": {
                    "name": "AM_LOCK",
                    "addressOffset": "0x88",
                    "desc": [
                        "Alignment Marker Lock Achieved"
                    ],
                    "fields": {
                        "am_lock": {
                            "name": "AM_LOCK",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "1: Indicates that Alignment Marker lock has been achieved."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "lanes_deskewed": {
                    "name": "LANES_DESKEWED",
                    "addressOffset": "0x8c",
                    "desc": [
                        "Change in RX PCS Deskew Status"
                    ],
                    "fields": {
                        "dskew_chng_1": {
                            "name": "DSKEW_CHNG_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "A status register asserted whenever there is a change to the deskewed status of the RX PCS. ",
                                "1:RX PCS went from deskewed to not deskewed, or from not deskewed to deskewed. Register clears on read."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "pcs_vlane_0": {
                    "name": "PCS_VLANE_0",
                    "addressOffset": "0x94",
                    "desc": [
                        "PCS Virtual Lane 0 Mapping ",
                        "Indicates the remote alignment markers that were received on virtual lanes 0 to 5."
                    ],
                    "fields": {
                        "vlane0": {
                            "name": "VLANE0",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 0."
                            ]
                        },
                        "vlane1": {
                            "name": "VLANE1",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 1."
                            ]
                        },
                        "vlane2": {
                            "name": "VLANE2",
                            "bitOffset": 10,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 2."
                            ]
                        },
                        "vlane3": {
                            "name": "VLANE3",
                            "bitOffset": 15,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 3."
                            ]
                        },
                        "vlane4": {
                            "name": "VLANE4",
                            "bitOffset": 20,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 4."
                            ]
                        },
                        "vlane5": {
                            "name": "VLANE5",
                            "bitOffset": 25,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 5."
                            ]
                        }
                    }
                },
                "pcs_vlane_1": {
                    "name": "PCS_VLANE_1",
                    "addressOffset": "0x98",
                    "desc": [
                        "PCS Virtual Lane 1 Mapping ",
                        "Indicates the remote alignment markers that were received on virtual lanes 6 to 11."
                    ],
                    "fields": {
                        "vlane6": {
                            "name": "VLANE6",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 6."
                            ]
                        },
                        "vlane7": {
                            "name": "VLANE7",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 7."
                            ]
                        },
                        "vlane8": {
                            "name": "VLANE8",
                            "bitOffset": 10,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 8."
                            ]
                        },
                        "vlane9": {
                            "name": "VLANE9",
                            "bitOffset": 15,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 9."
                            ]
                        },
                        "vlane10": {
                            "name": "VLANE10",
                            "bitOffset": 20,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 10."
                            ]
                        },
                        "vlane11": {
                            "name": "VLANE11",
                            "bitOffset": 25,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 11."
                            ]
                        }
                    }
                },
                "pcs_vlane_2": {
                    "name": "PCS_VLANE_2",
                    "addressOffset": "0x9c",
                    "desc": [
                        "PCS Virtual Lane 2 Mapping ",
                        "Indicates the remote alignment markers that were received on virtual lanes 12 to 17."
                    ],
                    "fields": {
                        "vlane12": {
                            "name": "VLANE12",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 12."
                            ]
                        },
                        "vlane13": {
                            "name": "VLANE13",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 13."
                            ]
                        },
                        "vlane14": {
                            "name": "VLANE14",
                            "bitOffset": 10,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 14."
                            ]
                        },
                        "vlane15": {
                            "name": "VLANE15",
                            "bitOffset": 15,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 15."
                            ]
                        },
                        "vlane16": {
                            "name": "VLANE16",
                            "bitOffset": 20,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 16."
                            ]
                        },
                        "vlane17": {
                            "name": "VLANE17",
                            "bitOffset": 25,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 17."
                            ]
                        }
                    }
                },
                "pcs_vlane_3": {
                    "name": "PCS_VLANE_3",
                    "addressOffset": "0xa0",
                    "desc": [
                        "PCS Virtual Lane 3 Mapping ",
                        "Indicates the remote alignment markers that were received on virtual lanes 18 to 19."
                    ],
                    "fields": {
                        "vlane18": {
                            "name": "VLANE18",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 18."
                            ]
                        },
                        "vlane19": {
                            "name": "VLANE19",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "Original virtual lane position of the data mapped to the PCS lane with this index 19."
                            ]
                        }
                    }
                },
                "bip_counter_0": {
                    "name": "BIP_COUNTER_0",
                    "addressOffset": "0xa4",
                    "desc": [
                        "BIP Counter 0"
                    ],
                    "fields": {
                        "count_1": {
                            "name": "COUNT_1",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_1": {
                    "name": "BIP_COUNTER_1",
                    "addressOffset": "0xa8",
                    "desc": [
                        "BIP Counter 1"
                    ],
                    "fields": {
                        "count_2": {
                            "name": "COUNT_2",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_2": {
                    "name": "BIP_COUNTER_2",
                    "addressOffset": "0xac",
                    "desc": [
                        "BIP Counter 2"
                    ],
                    "fields": {
                        "count_3": {
                            "name": "COUNT_3",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_3": {
                    "name": "BIP_COUNTER_3",
                    "addressOffset": "0xb0",
                    "desc": [
                        "BIP Counter 3"
                    ],
                    "fields": {
                        "count_4": {
                            "name": "COUNT_4",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_4": {
                    "name": "BIP_COUNTER_4",
                    "addressOffset": "0xb4",
                    "desc": [
                        "BIP Counter 4"
                    ],
                    "fields": {
                        "count_5": {
                            "name": "COUNT_5",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_5": {
                    "name": "BIP_COUNTER_5",
                    "addressOffset": "0xb8",
                    "desc": [
                        "BIP Counter 5"
                    ],
                    "fields": {
                        "count_6": {
                            "name": "COUNT_6",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_6": {
                    "name": "BIP_COUNTER_6",
                    "addressOffset": "0xbc",
                    "desc": [
                        "BIP Counter 6"
                    ],
                    "fields": {
                        "count_7": {
                            "name": "COUNT_7",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_7": {
                    "name": "BIP_COUNTER_7",
                    "addressOffset": "0xc0",
                    "desc": [
                        "BIP Counter 7"
                    ],
                    "fields": {
                        "count_8": {
                            "name": "COUNT_8",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_8": {
                    "name": "BIP_COUNTER_8",
                    "addressOffset": "0xc4",
                    "desc": [
                        "BIP Counter 8"
                    ],
                    "fields": {
                        "count_9": {
                            "name": "COUNT_9",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_9": {
                    "name": "BIP_COUNTER_9",
                    "addressOffset": "0xc8",
                    "desc": [
                        "BIP Counter 9"
                    ],
                    "fields": {
                        "count_10": {
                            "name": "COUNT_10",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_10": {
                    "name": "BIP_COUNTER_10",
                    "addressOffset": "0xcc",
                    "desc": [
                        "BIP Counter 10"
                    ],
                    "fields": {
                        "count_11": {
                            "name": "COUNT_11",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_11": {
                    "name": "BIP_COUNTER_11",
                    "addressOffset": "0xd0",
                    "desc": [
                        "BIP Counter 11"
                    ],
                    "fields": {
                        "count_12": {
                            "name": "COUNT_12",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_12": {
                    "name": "BIP_COUNTER_12",
                    "addressOffset": "0xd4",
                    "desc": [
                        "BIP Counter 12"
                    ],
                    "fields": {
                        "count_13": {
                            "name": "COUNT_13",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_13": {
                    "name": "BIP_COUNTER_13",
                    "addressOffset": "0xd8",
                    "desc": [
                        "BIP Counter 13"
                    ],
                    "fields": {
                        "count_14": {
                            "name": "COUNT_14",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_14": {
                    "name": "BIP_COUNTER_14",
                    "addressOffset": "0xdc",
                    "desc": [
                        "BIP Counter 14"
                    ],
                    "fields": {
                        "count_15": {
                            "name": "COUNT_15",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_15": {
                    "name": "BIP_COUNTER_15",
                    "addressOffset": "0xe0",
                    "desc": [
                        "BIP Counter 15"
                    ],
                    "fields": {
                        "count_16": {
                            "name": "COUNT_16",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_16": {
                    "name": "BIP_COUNTER_16",
                    "addressOffset": "0xe4",
                    "desc": [
                        "BIP Counter 16"
                    ],
                    "fields": {
                        "count_17": {
                            "name": "COUNT_17",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_17": {
                    "name": "BIP_COUNTER_17",
                    "addressOffset": "0xe8",
                    "desc": [
                        "BIP Counter 17"
                    ],
                    "fields": {
                        "count_18": {
                            "name": "COUNT_18",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_18": {
                    "name": "BIP_COUNTER_18",
                    "addressOffset": "0xec",
                    "desc": [
                        "BIP Counter 18"
                    ],
                    "fields": {
                        "count_19": {
                            "name": "COUNT_19",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "bip_counter_19": {
                    "name": "BIP_COUNTER_19",
                    "addressOffset": "0xf0",
                    "desc": [
                        "BIP Counter 19"
                    ],
                    "fields": {
                        "count_20": {
                            "name": "COUNT_20",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "",
                                "Shows current BIP count for corresponding PCS lane. Rolls over at max count. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "err_block_cnt": {
                    "name": "ERR_BLOCK_CNT",
                    "addressOffset": "0xf4",
                    "desc": [
                        "Error Block Count"
                    ],
                    "fields": {
                        "count_21": {
                            "name": "COUNT_21",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Counts the number of visits to the RX_E state when the RX Decoder is in normal mode. Rolls over when max count is reached. Can be captured by snapshot."
                            ]
                        }
                    }
                },
                "dsk_depth_0": {
                    "name": "DSK_DEPTH_0",
                    "addressOffset": "0xfc",
                    "desc": [
                        "Deskew Depth 0"
                    ],
                    "fields": {
                        "depth4_0": {
                            "name": "DEPTH4_0",
                            "bitOffset": 24,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth3_0": {
                            "name": "DEPTH3_0",
                            "bitOffset": 18,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth2_0": {
                            "name": "DEPTH2_0",
                            "bitOffset": 12,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth1_0": {
                            "name": "DEPTH1_0",
                            "bitOffset": 6,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth0_0": {
                            "name": "DEPTH0_0",
                            "bitOffset": 0,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        }
                    }
                },
                "dsk_depth_1": {
                    "name": "DSK_DEPTH_1",
                    "addressOffset": "0x100",
                    "desc": [
                        "Deskew Depth 1"
                    ],
                    "fields": {
                        "depth4_1": {
                            "name": "DEPTH4_1",
                            "bitOffset": 24,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth3_1": {
                            "name": "DEPTH3_1",
                            "bitOffset": 18,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth2_1": {
                            "name": "DEPTH2_1",
                            "bitOffset": 12,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth1_1": {
                            "name": "DEPTH1_1",
                            "bitOffset": 6,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth0_1": {
                            "name": "DEPTH0_1",
                            "bitOffset": 0,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        }
                    }
                },
                "dsk_depth_2": {
                    "name": "DSK_DEPTH_2",
                    "addressOffset": "0x104",
                    "desc": [
                        "Deskew Depth 2"
                    ],
                    "fields": {
                        "depth4_2": {
                            "name": "DEPTH4_2",
                            "bitOffset": 24,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth3_2": {
                            "name": "DEPTH3_2",
                            "bitOffset": 18,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth2_2": {
                            "name": "DEPTH2_2",
                            "bitOffset": 12,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth1_2": {
                            "name": "DEPTH1_2",
                            "bitOffset": 6,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth0_2": {
                            "name": "DEPTH0_2",
                            "bitOffset": 0,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        }
                    }
                },
                "dsk_depth_3": {
                    "name": "DSK_DEPTH_3",
                    "addressOffset": "0x108",
                    "desc": [
                        "Deskew Depth 3"
                    ],
                    "fields": {
                        "depth4_3": {
                            "name": "DEPTH4_3",
                            "bitOffset": 24,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth3_3": {
                            "name": "DEPTH3_3",
                            "bitOffset": 18,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth2_3": {
                            "name": "DEPTH2_3",
                            "bitOffset": 12,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth1_3": {
                            "name": "DEPTH1_3",
                            "bitOffset": 6,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        },
                        "depth0_3": {
                            "name": "DEPTH0_3",
                            "bitOffset": 0,
                            "bitWidth": 6,
                            "access": "ro",
                            "desc": [
                                "Deskew depth for one of the PCS Virtual lanes"
                            ]
                        }
                    }
                },
                "pcs_bitslip_cnt": {
                    "name": "PCS_BITSLIP_CNT",
                    "addressOffset": "0x110",
                    "desc": [
                        "Applies to 25G/10G ONLY. BitSlip Count ",
                        "Status register to provide info to correlate DL_Pulse to aligned data."
                    ],
                    "fields": {
                        "dlpulse_alignment": {
                            "name": "DLPULSE_ALIGNMENT",
                            "bitOffset": 7,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "DL Pulse Alignment ",
                                "When 1, indicates that the start of the DL Pulse (am_valid) arrived on word_align=1. When 0, DL Pulse started on word_align=0."
                            ],
                            "ftype": "boolean"
                        },
                        "bitslip_cnt": {
                            "name": "BITSLIP_CNT",
                            "bitOffset": 0,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Bitslip count ",
                                "Number of bit that slipped for align with valid syn header."
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_0": {
                    "name": "PTP_VL_DATA_LO_0",
                    "addressOffset": "0x114",
                    "desc": [
                        "PTP VL Data Lo 0 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_0": {
                            "name": "SPARE_0",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "100GE: 0-19 ",
                                "50GE: 0-3"
                            ]
                        },
                        "local_vl_0": {
                            "name": "LOCAL_VL_0",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_0": {
                            "name": "PTP_AM_COUNT_0",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_0": {
                            "name": "PTP_AL_POS_0",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_0": {
                            "name": "PTP_AL_BLK_PHASE_0",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_0": {
                            "name": "PTP_GBSTATE_0",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_1": {
                    "name": "PTP_VL_DATA_LO_1",
                    "addressOffset": "0x118",
                    "desc": [
                        "PTP VL Data Lo 1 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_1": {
                            "name": "SPARE_1",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_1": {
                            "name": "LOCAL_VL_1",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_1": {
                            "name": "PTP_AM_COUNT_1",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_1": {
                            "name": "PTP_AL_POS_1",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_1": {
                            "name": "PTP_AL_BLK_PHASE_1",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_1": {
                            "name": "PTP_GBSTATE_1",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_2": {
                    "name": "PTP_VL_DATA_LO_2",
                    "addressOffset": "0x11c",
                    "desc": [
                        "PTP VL Data Lo 2 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_2": {
                            "name": "SPARE_2",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_2": {
                            "name": "LOCAL_VL_2",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_2": {
                            "name": "PTP_AM_COUNT_2",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_2": {
                            "name": "PTP_AL_POS_2",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_2": {
                            "name": "PTP_AL_BLK_PHASE_2",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_2": {
                            "name": "PTP_GBSTATE_2",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_3": {
                    "name": "PTP_VL_DATA_LO_3",
                    "addressOffset": "0x120",
                    "desc": [
                        "PTP VL Data Lo 3 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_3": {
                            "name": "SPARE_3",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_3": {
                            "name": "LOCAL_VL_3",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_3": {
                            "name": "PTP_AM_COUNT_3",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_3": {
                            "name": "PTP_AL_POS_3",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_3": {
                            "name": "PTP_AL_BLK_PHASE_3",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_3": {
                            "name": "PTP_GBSTATE_3",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_4": {
                    "name": "PTP_VL_DATA_LO_4",
                    "addressOffset": "0x124",
                    "desc": [
                        "PTP VL Data Lo 4 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_4": {
                            "name": "SPARE_4",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_4": {
                            "name": "LOCAL_VL_4",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_4": {
                            "name": "PTP_AM_COUNT_4",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_4": {
                            "name": "PTP_AL_POS_4",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_4": {
                            "name": "PTP_AL_BLK_PHASE_4",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_4": {
                            "name": "PTP_GBSTATE_4",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_5": {
                    "name": "PTP_VL_DATA_LO_5",
                    "addressOffset": "0x128",
                    "desc": [
                        "PTP VL Data Lo 5 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_5": {
                            "name": "SPARE_5",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_5": {
                            "name": "LOCAL_VL_5",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_5": {
                            "name": "PTP_AM_COUNT_5",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_5": {
                            "name": "PTP_AL_POS_5",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_5": {
                            "name": "PTP_AL_BLK_PHASE_5",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_5": {
                            "name": "PTP_GBSTATE_5",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_6": {
                    "name": "PTP_VL_DATA_LO_6",
                    "addressOffset": "0x12c",
                    "desc": [
                        "PTP VL Data Lo 6 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_6": {
                            "name": "SPARE_6",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_6": {
                            "name": "LOCAL_VL_6",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_6": {
                            "name": "PTP_AM_COUNT_6",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_6": {
                            "name": "PTP_AL_POS_6",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_6": {
                            "name": "PTP_AL_BLK_PHASE_6",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_6": {
                            "name": "PTP_GBSTATE_6",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_7": {
                    "name": "PTP_VL_DATA_LO_7",
                    "addressOffset": "0x130",
                    "desc": [
                        "PTP VL Data Lo 7 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_7": {
                            "name": "SPARE_7",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_7": {
                            "name": "LOCAL_VL_7",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_7": {
                            "name": "PTP_AM_COUNT_7",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_7": {
                            "name": "PTP_AL_POS_7",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_7": {
                            "name": "PTP_AL_BLK_PHASE_7",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_7": {
                            "name": "PTP_GBSTATE_7",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_8": {
                    "name": "PTP_VL_DATA_LO_8",
                    "addressOffset": "0x134",
                    "desc": [
                        "PTP VL Data Lo 8 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_8": {
                            "name": "SPARE_8",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_8": {
                            "name": "LOCAL_VL_8",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_8": {
                            "name": "PTP_AM_COUNT_8",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_8": {
                            "name": "PTP_AL_POS_8",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_8": {
                            "name": "PTP_AL_BLK_PHASE_8",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_8": {
                            "name": "PTP_GBSTATE_8",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_9": {
                    "name": "PTP_VL_DATA_LO_9",
                    "addressOffset": "0x138",
                    "desc": [
                        "PTP VL Data Lo 9 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_9": {
                            "name": "SPARE_9",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_9": {
                            "name": "LOCAL_VL_9",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_9": {
                            "name": "PTP_AM_COUNT_9",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_9": {
                            "name": "PTP_AL_POS_9",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_9": {
                            "name": "PTP_AL_BLK_PHASE_9",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_9": {
                            "name": "PTP_GBSTATE_9",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_10": {
                    "name": "PTP_VL_DATA_LO_10",
                    "addressOffset": "0x13c",
                    "desc": [
                        "PTP VL Data Lo 10 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_10": {
                            "name": "SPARE_10",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_10": {
                            "name": "LOCAL_VL_10",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_10": {
                            "name": "PTP_AM_COUNT_10",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_10": {
                            "name": "PTP_AL_POS_10",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_10": {
                            "name": "PTP_AL_BLK_PHASE_10",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_10": {
                            "name": "PTP_GBSTATE_10",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_11": {
                    "name": "PTP_VL_DATA_LO_11",
                    "addressOffset": "0x140",
                    "desc": [
                        "PTP VL Data Lo 11 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_11": {
                            "name": "SPARE_11",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_11": {
                            "name": "LOCAL_VL_11",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_11": {
                            "name": "PTP_AM_COUNT_11",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_11": {
                            "name": "PTP_AL_POS_11",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_11": {
                            "name": "PTP_AL_BLK_PHASE_11",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_11": {
                            "name": "PTP_GBSTATE_11",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_12": {
                    "name": "PTP_VL_DATA_LO_12",
                    "addressOffset": "0x144",
                    "desc": [
                        "PTP VL Data Lo 12 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_12": {
                            "name": "SPARE_12",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_12": {
                            "name": "LOCAL_VL_12",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_12": {
                            "name": "PTP_AM_COUNT_12",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_12": {
                            "name": "PTP_AL_POS_12",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_12": {
                            "name": "PTP_AL_BLK_PHASE_12",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_12": {
                            "name": "PTP_GBSTATE_12",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_13": {
                    "name": "PTP_VL_DATA_LO_13",
                    "addressOffset": "0x148",
                    "desc": [
                        "PTP VL Data Lo 13 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_13": {
                            "name": "SPARE_13",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_13": {
                            "name": "LOCAL_VL_13",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_13": {
                            "name": "PTP_AM_COUNT_13",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_13": {
                            "name": "PTP_AL_POS_13",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_13": {
                            "name": "PTP_AL_BLK_PHASE_13",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_13": {
                            "name": "PTP_GBSTATE_13",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_14": {
                    "name": "PTP_VL_DATA_LO_14",
                    "addressOffset": "0x14c",
                    "desc": [
                        "PTP VL Data Lo 14 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_14": {
                            "name": "SPARE_14",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_14": {
                            "name": "LOCAL_VL_14",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_14": {
                            "name": "PTP_AM_COUNT_14",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_14": {
                            "name": "PTP_AL_POS_14",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_14": {
                            "name": "PTP_AL_BLK_PHASE_14",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_14": {
                            "name": "PTP_GBSTATE_14",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_15": {
                    "name": "PTP_VL_DATA_LO_15",
                    "addressOffset": "0x150",
                    "desc": [
                        "PTP VL Data Lo 15 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_15": {
                            "name": "SPARE_15",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_15": {
                            "name": "LOCAL_VL_15",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_15": {
                            "name": "PTP_AM_COUNT_15",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_15": {
                            "name": "PTP_AL_POS_15",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_15": {
                            "name": "PTP_AL_BLK_PHASE_15",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_15": {
                            "name": "PTP_GBSTATE_15",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_16": {
                    "name": "PTP_VL_DATA_LO_16",
                    "addressOffset": "0x154",
                    "desc": [
                        "PTP VL Data Lo 16 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_16": {
                            "name": "SPARE_16",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_16": {
                            "name": "LOCAL_VL_16",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_16": {
                            "name": "PTP_AM_COUNT_16",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_16": {
                            "name": "PTP_AL_POS_16",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_16": {
                            "name": "PTP_AL_BLK_PHASE_16",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_16": {
                            "name": "PTP_GBSTATE_16",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_17": {
                    "name": "PTP_VL_DATA_LO_17",
                    "addressOffset": "0x158",
                    "desc": [
                        "PTP VL Data Lo 17 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_17": {
                            "name": "SPARE_17",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_17": {
                            "name": "LOCAL_VL_17",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_17": {
                            "name": "PTP_AM_COUNT_17",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_17": {
                            "name": "PTP_AL_POS_17",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_17": {
                            "name": "PTP_AL_BLK_PHASE_17",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_17": {
                            "name": "PTP_GBSTATE_17",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_18": {
                    "name": "PTP_VL_DATA_LO_18",
                    "addressOffset": "0x15c",
                    "desc": [
                        "PTP VL Data Lo 18 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_18": {
                            "name": "SPARE_18",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_18": {
                            "name": "LOCAL_VL_18",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_18": {
                            "name": "PTP_AM_COUNT_18",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (number of blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_18": {
                            "name": "PTP_AL_POS_18",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_18": {
                            "name": "PTP_AL_BLK_PHASE_18",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_18": {
                            "name": "PTP_GBSTATE_18",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_lo_19": {
                    "name": "PTP_VL_DATA_LO_19",
                    "addressOffset": "0x160",
                    "desc": [
                        "PTP VL Data Lo 19 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_19": {
                            "name": "SPARE_19",
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare."
                            ]
                        },
                        "local_vl_19": {
                            "name": "LOCAL_VL_19",
                            "bitOffset": 24,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds"
                            ]
                        },
                        "ptp_am_count_19": {
                            "name": "PTP_AM_COUNT_19",
                            "bitOffset": 10,
                            "bitWidth": 14,
                            "access": "ro",
                            "desc": [
                                "Alignment Marker Interval Count ",
                                "Snapshot of AM Interval Counter (num blocks received since last AM)"
                            ]
                        },
                        "ptp_al_pos_19": {
                            "name": "PTP_AL_POS_19",
                            "bitOffset": 5,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Position ",
                                "Snapshot of Bit-slip value from Block Aligner"
                            ]
                        },
                        "ptp_al_blk_phase_19": {
                            "name": "PTP_AL_BLK_PHASE_19",
                            "bitOffset": 3,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "PTP Block Aligner Block Phase ",
                                "Snapshot of Block-phase value from Block Aligner"
                            ]
                        },
                        "ptp_gbstate_19": {
                            "name": "PTP_GBSTATE_19",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "PTP Gearbox State 100G ",
                                "Snapshot of 66:110 Gearbox state"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_0": {
                    "name": "PTP_VL_DATA_HI_0",
                    "addressOffset": "0x164",
                    "desc": [
                        "PTP VL Data Hi 0 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_20": {
                            "name": "SPARE_20",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_0": {
                            "name": "PTP_AL_POS_50G_0",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_0": {
                            "name": "PTP_GB33TO66_OCCUPANCY_0",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_0": {
                            "name": "PTP_GB110_OCCUPANCY_0",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_0": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_0",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_0": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_0",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_20": {
                            "name": "LOCAL_VL_20",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_0": {
                            "name": "LOCAL_PL_0",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_0": {
                            "name": "VLANE_NUM_0",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_1": {
                    "name": "PTP_VL_DATA_HI_1",
                    "addressOffset": "0x168",
                    "desc": [
                        "PTP VL Data Hi 1 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_21": {
                            "name": "SPARE_21",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_1": {
                            "name": "PTP_AL_POS_50G_1",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_1": {
                            "name": "PTP_GB33TO66_OCCUPANCY_1",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_1": {
                            "name": "PTP_GB110_OCCUPANCY_1",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_1": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_1",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_1": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_1",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_21": {
                            "name": "LOCAL_VL_21",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_1": {
                            "name": "LOCAL_PL_1",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_1": {
                            "name": "VLANE_NUM_1",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_2": {
                    "name": "PTP_VL_DATA_HI_2",
                    "addressOffset": "0x16c",
                    "desc": [
                        "PTP VL Data Hi 2 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_22": {
                            "name": "SPARE_22",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_2": {
                            "name": "PTP_AL_POS_50G_2",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_2": {
                            "name": "PTP_GB33TO66_OCCUPANCY_2",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_2": {
                            "name": "PTP_GB110_OCCUPANCY_2",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_2": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_2",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_2": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_2",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_22": {
                            "name": "LOCAL_VL_22",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_2": {
                            "name": "LOCAL_PL_2",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_2": {
                            "name": "VLANE_NUM_2",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_3": {
                    "name": "PTP_VL_DATA_HI_3",
                    "addressOffset": "0x170",
                    "desc": [
                        "PTP VL Data Hi 3 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_23": {
                            "name": "SPARE_23",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_3": {
                            "name": "PTP_AL_POS_50G_3",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_3": {
                            "name": "PTP_GB33TO66_OCCUPANCY_3",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_3": {
                            "name": "PTP_GB110_OCCUPANCY_3",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_3": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_3",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_3": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_3",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_23": {
                            "name": "LOCAL_VL_23",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_3": {
                            "name": "LOCAL_PL_3",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_3": {
                            "name": "VLANE_NUM_3",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_4": {
                    "name": "PTP_VL_DATA_HI_4",
                    "addressOffset": "0x174",
                    "desc": [
                        "PTP VL Data HI 4 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_24": {
                            "name": "SPARE_24",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_4": {
                            "name": "PTP_AL_POS_50G_4",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_4": {
                            "name": "PTP_GB33TO66_OCCUPANCY_4",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_4": {
                            "name": "PTP_GB110_OCCUPANCY_4",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_4": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_4",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_4": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_4",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_24": {
                            "name": "LOCAL_VL_24",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_4": {
                            "name": "LOCAL_PL_4",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_4": {
                            "name": "VLANE_NUM_4",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_5": {
                    "name": "PTP_VL_DATA_HI_5",
                    "addressOffset": "0x178",
                    "desc": [
                        "PTP VL Data Hi 5 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_25": {
                            "name": "SPARE_25",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_5": {
                            "name": "PTP_AL_POS_50G_5",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_5": {
                            "name": "PTP_GB33TO66_OCCUPANCY_5",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_5": {
                            "name": "PTP_GB110_OCCUPANCY_5",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_5": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_5",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_5": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_5",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_25": {
                            "name": "LOCAL_VL_25",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_5": {
                            "name": "LOCAL_PL_5",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_5": {
                            "name": "VLANE_NUM_5",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_6": {
                    "name": "PTP_VL_DATA_HI_6",
                    "addressOffset": "0x17c",
                    "desc": [
                        "PTP VL Data Hi 6 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_26": {
                            "name": "SPARE_26",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_6": {
                            "name": "PTP_AL_POS_50G_6",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_6": {
                            "name": "PTP_GB33TO66_OCCUPANCY_6",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_6": {
                            "name": "PTP_GB110_OCCUPANCY_6",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_6": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_6",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_6": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_6",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_26": {
                            "name": "LOCAL_VL_26",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_6": {
                            "name": "LOCAL_PL_6",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_6": {
                            "name": "VLANE_NUM_6",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_7": {
                    "name": "PTP_VL_DATA_HI_7",
                    "addressOffset": "0x180",
                    "desc": [
                        "PTP VL Data Hi 7 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_27": {
                            "name": "SPARE_27",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_7": {
                            "name": "PTP_AL_POS_50G_7",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_7": {
                            "name": "PTP_GB33TO66_OCCUPANCY_7",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_7": {
                            "name": "PTP_GB110_OCCUPANCY_7",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_7": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_7",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_7": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_7",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_27": {
                            "name": "LOCAL_VL_27",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_7": {
                            "name": "LOCAL_PL_7",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_7": {
                            "name": "VLANE_NUM_7",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_8": {
                    "name": "PTP_VL_DATA_HI_8",
                    "addressOffset": "0x184",
                    "desc": [
                        "PTP VL Data Hi 8 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_28": {
                            "name": "SPARE_28",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_8": {
                            "name": "PTP_AL_POS_50G_8",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_8": {
                            "name": "PTP_GB33TO66_OCCUPANCY_8",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_8": {
                            "name": "PTP_GB110_OCCUPANCY_8",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_8": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_8",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_8": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_8",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_28": {
                            "name": "LOCAL_VL_28",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_8": {
                            "name": "LOCAL_PL_8",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_8": {
                            "name": "VLANE_NUM_8",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_9": {
                    "name": "PTP_VL_DATA_HI_9",
                    "addressOffset": "0x188",
                    "desc": [
                        "PTP VL Data Hi 9 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_29": {
                            "name": "SPARE_29",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_9": {
                            "name": "PTP_AL_POS_50G_9",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_9": {
                            "name": "PTP_GB33TO66_OCCUPANCY_9",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_9": {
                            "name": "PTP_GB110_OCCUPANCY_9",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_9": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_9",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_9": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_9",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_29": {
                            "name": "LOCAL_VL_29",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_9": {
                            "name": "LOCAL_PL_9",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_9": {
                            "name": "VLANE_NUM_9",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_10": {
                    "name": "PTP_VL_DATA_HI_10",
                    "addressOffset": "0x18c",
                    "desc": [
                        "PTP VL Data Hi 10 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_30": {
                            "name": "SPARE_30",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_10": {
                            "name": "PTP_AL_POS_50G_10",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_10": {
                            "name": "PTP_GB33TO66_OCCUPANCY_10",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_10": {
                            "name": "PTP_GB110_OCCUPANCY_10",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_10": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_10",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_10": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_10",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_30": {
                            "name": "LOCAL_VL_30",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_10": {
                            "name": "LOCAL_PL_10",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_10": {
                            "name": "VLANE_NUM_10",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_11": {
                    "name": "PTP_VL_DATA_HI_11",
                    "addressOffset": "0x190",
                    "desc": [
                        "PTP VL Data Hi 11 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_31": {
                            "name": "SPARE_31",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_11": {
                            "name": "PTP_AL_POS_50G_11",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_11": {
                            "name": "PTP_GB33TO66_OCCUPANCY_11",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_11": {
                            "name": "PTP_GB110_OCCUPANCY_11",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_11": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_11",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_11": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_11",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_31": {
                            "name": "LOCAL_VL_31",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_11": {
                            "name": "LOCAL_PL_11",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_11": {
                            "name": "VLANE_NUM_11",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_12": {
                    "name": "PTP_VL_DATA_HI_12",
                    "addressOffset": "0x194",
                    "desc": [
                        "PTP VL Data Hi 12 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_32": {
                            "name": "SPARE_32",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_12": {
                            "name": "PTP_AL_POS_50G_12",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_12": {
                            "name": "PTP_GB33TO66_OCCUPANCY_12",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_12": {
                            "name": "PTP_GB110_OCCUPANCY_12",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_12": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_12",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_12": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_12",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_32": {
                            "name": "LOCAL_VL_32",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_12": {
                            "name": "LOCAL_PL_12",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_12": {
                            "name": "VLANE_NUM_12",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_13": {
                    "name": "PTP_VL_DATA_HI_13",
                    "addressOffset": "0x198",
                    "desc": [
                        "PTP VL Data Hi 13 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_33": {
                            "name": "SPARE_33",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_13": {
                            "name": "PTP_AL_POS_50G_13",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_13": {
                            "name": "PTP_GB33TO66_OCCUPANCY_13",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_13": {
                            "name": "PTP_GB110_OCCUPANCY_13",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_13": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_13",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_13": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_13",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_33": {
                            "name": "LOCAL_VL_33",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_13": {
                            "name": "LOCAL_PL_13",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_13": {
                            "name": "VLANE_NUM_13",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_14": {
                    "name": "PTP_VL_DATA_HI_14",
                    "addressOffset": "0x19c",
                    "desc": [
                        "PTP VL Data Hi 14 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_34": {
                            "name": "SPARE_34",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_14": {
                            "name": "PTP_AL_POS_50G_14",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_14": {
                            "name": "PTP_GB33TO66_OCCUPANCY_14",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_14": {
                            "name": "PTP_GB110_OCCUPANCY_14",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_14": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_14",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_14": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_14",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_34": {
                            "name": "LOCAL_VL_34",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_14": {
                            "name": "LOCAL_PL_14",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_14": {
                            "name": "VLANE_NUM_14",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_15": {
                    "name": "PTP_VL_DATA_HI_15",
                    "addressOffset": "0x1a0",
                    "desc": [
                        "PTP VL Data Hi 15 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_35": {
                            "name": "SPARE_35",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_15": {
                            "name": "PTP_AL_POS_50G_15",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_15": {
                            "name": "PTP_GB33TO66_OCCUPANCY_15",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_15": {
                            "name": "PTP_GB110_OCCUPANCY_15",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_15": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_15",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_15": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_15",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_35": {
                            "name": "LOCAL_VL_35",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_15": {
                            "name": "LOCAL_PL_15",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_15": {
                            "name": "VLANE_NUM_15",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_16": {
                    "name": "PTP_VL_DATA_HI_16",
                    "addressOffset": "0x1a4",
                    "desc": [
                        "PTP VL Data Hi 16 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_36": {
                            "name": "SPARE_36",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_16": {
                            "name": "PTP_AL_POS_50G_16",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_16": {
                            "name": "PTP_GB33TO66_OCCUPANCY_16",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_16": {
                            "name": "PTP_GB110_OCCUPANCY_16",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_16": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_16",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_16": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_16",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_36": {
                            "name": "LOCAL_VL_36",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_16": {
                            "name": "LOCAL_PL_16",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_16": {
                            "name": "VLANE_NUM_16",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_17": {
                    "name": "PTP_VL_DATA_HI_17",
                    "addressOffset": "0x1a8",
                    "desc": [
                        "PTP VL Data Hi 17 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_37": {
                            "name": "SPARE_37",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_17": {
                            "name": "PTP_AL_POS_50G_17",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_17": {
                            "name": "PTP_GB33TO66_OCCUPANCY_17",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_17": {
                            "name": "PTP_GB110_OCCUPANCY_17",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_17": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_17",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_17": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_17",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_37": {
                            "name": "LOCAL_VL_37",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_17": {
                            "name": "LOCAL_PL_17",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_17": {
                            "name": "VLANE_NUM_17",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_18": {
                    "name": "PTP_VL_DATA_HI_18",
                    "addressOffset": "0x1ac",
                    "desc": [
                        "PTP VL Data Hi 18 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_38": {
                            "name": "SPARE_38",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_18": {
                            "name": "PTP_AL_POS_50G_18",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_18": {
                            "name": "PTP_GB33TO66_OCCUPANCY_18",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_18": {
                            "name": "PTP_GB110_OCCUPANCY_18",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_18": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_18",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_18": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_18",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_38": {
                            "name": "LOCAL_VL_38",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_18": {
                            "name": "LOCAL_PL_18",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_18": {
                            "name": "VLANE_NUM_18",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_vl_data_hi_19": {
                    "name": "PTP_VL_DATA_HI_19",
                    "addressOffset": "0x1b0",
                    "desc": [
                        "PTP VL Data Hi 19 ",
                        "Contains PTP calculations for a local VL Datapath. Registers 4-19 apply to 100G Ethernet mode only."
                    ],
                    "fields": {
                        "spare_39": {
                            "name": "SPARE_39",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Spare ",
                                "Spare bits."
                            ],
                            "ftype": "boolean"
                        },
                        "ptp_al_pos_50g_19": {
                            "name": "PTP_AL_POS_50G_19",
                            "bitOffset": 24,
                            "bitWidth": 7,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Position for 50G ",
                                "Bit Slip value for 50G Block Aligner ."
                            ]
                        },
                        "ptp_gb33to66_occupancy_19": {
                            "name": "PTP_GB33TO66_OCCUPANCY_19",
                            "bitOffset": 22,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Input Gearbox 33to66 Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "- Bit [1] = cntr",
                                "- Bit [0] = i_valid",
                                ""
                            ]
                        },
                        "ptp_gb110_occupancy_19": {
                            "name": "PTP_GB110_OCCUPANCY_19",
                            "bitOffset": 19,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Gearbox gb_66_110 (100G) and sep50 (50G) Datapath Occupancy ",
                                "For 100G: Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = dout_valid",
                                "-Bit [1] = ena_r",
                                "-Bit [0] = ena",
                                "",
                                "For 50G: ",
                                "-Bit [2] = din_phase",
                                "-Bit [1] = o_dout_valid",
                                "-Bit [0] = i_din_valid",
                                ""
                            ]
                        },
                        "ptp_am_detect_occupancy_19": {
                            "name": "PTP_AM_DETECT_OCCUPANCY_19",
                            "bitOffset": 16,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "AM Detect Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = ptp_last_was_end",
                                "-Bit [1] = ptp_last_was_start",
                                "-Bit [0] = o_am_dout_valid",
                                ""
                            ]
                        },
                        "ptp_blk_align_occupancy_19": {
                            "name": "PTP_BLK_ALIGN_OCCUPANCY_19",
                            "bitOffset": 13,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Block Aligner Datapath Occupancy ",
                                "Data Valid Status for PTP Occupancy calculations. ",
                                "-Bit [2] = i_din_vld",
                                "-Bit [1] = din_vld_r",
                                "-Bit [0] = o_dout_vld.",
                                ""
                            ]
                        },
                        "local_vl_39": {
                            "name": "LOCAL_VL_39",
                            "bitOffset": 8,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Local VL number ",
                                "Identifies the Local VL datapath to which this PTP Info corresponds."
                            ]
                        },
                        "local_pl_19": {
                            "name": "LOCAL_PL_19",
                            "bitOffset": 5,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Local PL number ",
                                "Indicates the PHY Lane that sources this Local VL Datapath"
                            ]
                        },
                        "vlane_num_19": {
                            "name": "VLANE_NUM_19",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "Remote VL number ",
                                "Indicates the Virtual Lane number derived from the AMs received on this Loal VL Datapath"
                            ]
                        }
                    }
                },
                "ptp_lal": {
                    "name": "PTP_LAL",
                    "addressOffset": "0x1b4",
                    "desc": [
                        "PTP Last AM Lane"
                    ],
                    "fields": {
                        "count_22": {
                            "name": "COUNT_22",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "ro",
                            "desc": [
                                "",
                                "5-bit encoded field that indicates which Local Lane received its AM last. When multiple lanes arrive last, the smallest Local Lane number is reported."
                            ]
                        }
                    }
                },
                "tx_ptp_extra_latency": {
                    "name": "TX_PTP_EXTRA_LATENCY",
                    "addressOffset": "0x2e0",
                    "desc": [
                        "Extra PTP latency"
                    ],
                    "fields": {
                        "extra_latency_0": {
                            "name": "EXTRA_LATENCY_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b field specifying extra latency EHIP adds to outgoing timestamps"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_ui": {
                    "name": "TX_PTP_UI",
                    "addressOffset": "0x2e4",
                    "desc": [
                        "The duration of 1 Unit Interval"
                    ],
                    "fields": {
                        "ui_0": {
                            "name": "UI_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying duration of 1 unit interval"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_phy_lane_num": {
                    "name": "TX_PTP_PHY_LANE_NUM",
                    "addressOffset": "0x2ec",
                    "desc": [
                        "XCVR physical lane number ",
                        "6b indicate physical lane configuration in XCVR"
                    ],
                    "fields": {
                        "lane_num_0": {
                            "name": "LANE_NUM_0",
                            "bitOffset": 0,
                            "bitWidth": 6,
                            "access": "rw",
                            "desc": [
                                "",
                                "6b indicate physical lane configuration in PMA"
                            ],
                            "reset": 1
                        }
                    }
                },
                "tx_ptp_ap_filter": {
                    "name": "TX_PTP_AP_FILTER",
                    "addressOffset": "0x2f0",
                    "desc": [
                        "Asyncronous Pulse Filter"
                    ],
                    "fields": {
                        "ap_filter_0": {
                            "name": "AP_FILTER_0",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16 bits specify number of Async pulse to be filtered so that it will not be consume by PTP block for timestamp processing. This is only valid in 10/25G non FEC mode."
                            ],
                            "reset": "0x0000"
                        }
                    }
                },
                "tx_ptp_vl_offset_0": {
                    "name": "TX_PTP_VL_OFFSET_0",
                    "addressOffset": "0x2f4",
                    "desc": [
                        "Virtual Lane Offset 0"
                    ],
                    "fields": {
                        "vl_offset_0": {
                            "name": "VL_OFFSET_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_1": {
                    "name": "TX_PTP_VL_OFFSET_1",
                    "addressOffset": "0x2f8",
                    "desc": [
                        "Virtual Lane Offset 1"
                    ],
                    "fields": {
                        "vl_offset_1": {
                            "name": "VL_OFFSET_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_2": {
                    "name": "TX_PTP_VL_OFFSET_2",
                    "addressOffset": "0x2fc",
                    "desc": [
                        "Virtual Lane Offset 2"
                    ],
                    "fields": {
                        "vl_offset_2": {
                            "name": "VL_OFFSET_2",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_3": {
                    "name": "TX_PTP_VL_OFFSET_3",
                    "addressOffset": "0x300",
                    "desc": [
                        "Virtual Lane Offset 3"
                    ],
                    "fields": {
                        "vl_offset_3": {
                            "name": "VL_OFFSET_3",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_4": {
                    "name": "TX_PTP_VL_OFFSET_4",
                    "addressOffset": "0x304",
                    "desc": [
                        "Virtual Lane Offset 4"
                    ],
                    "fields": {
                        "vl_offset_4": {
                            "name": "VL_OFFSET_4",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_5": {
                    "name": "TX_PTP_VL_OFFSET_5",
                    "addressOffset": "0x308",
                    "desc": [
                        "Virtual Lane Offset 5"
                    ],
                    "fields": {
                        "vl_offset_5": {
                            "name": "VL_OFFSET_5",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_6": {
                    "name": "TX_PTP_VL_OFFSET_6",
                    "addressOffset": "0x30c",
                    "desc": [
                        "Virtual Lane Offset 6"
                    ],
                    "fields": {
                        "vl_offset_6": {
                            "name": "VL_OFFSET_6",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_7": {
                    "name": "TX_PTP_VL_OFFSET_7",
                    "addressOffset": "0x310",
                    "desc": [
                        "Virtual Lane Offset 7"
                    ],
                    "fields": {
                        "vl_offset_7": {
                            "name": "VL_OFFSET_7",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_8": {
                    "name": "TX_PTP_VL_OFFSET_8",
                    "addressOffset": "0x314",
                    "desc": [
                        "Virtual Lane Offset 8"
                    ],
                    "fields": {
                        "vl_offset_8": {
                            "name": "VL_OFFSET_8",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_9": {
                    "name": "TX_PTP_VL_OFFSET_9",
                    "addressOffset": "0x318",
                    "desc": [
                        "Virtual Lane Offset 9"
                    ],
                    "fields": {
                        "vl_offset_9": {
                            "name": "VL_OFFSET_9",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_10": {
                    "name": "TX_PTP_VL_OFFSET_10",
                    "addressOffset": "0x31c",
                    "desc": [
                        "Virtual Lane Offset 10"
                    ],
                    "fields": {
                        "vl_offset_10": {
                            "name": "VL_OFFSET_10",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_11": {
                    "name": "TX_PTP_VL_OFFSET_11",
                    "addressOffset": "0x320",
                    "desc": [
                        "Virtual Lane Offset 11"
                    ],
                    "fields": {
                        "vl_offset_11": {
                            "name": "VL_OFFSET_11",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_12": {
                    "name": "TX_PTP_VL_OFFSET_12",
                    "addressOffset": "0x324",
                    "desc": [
                        "Virtual Lane Offset 12"
                    ],
                    "fields": {
                        "vl_offset_12": {
                            "name": "VL_OFFSET_12",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_13": {
                    "name": "TX_PTP_VL_OFFSET_13",
                    "addressOffset": "0x328",
                    "desc": [
                        "Virtual Lane Offset 13"
                    ],
                    "fields": {
                        "vl_offset_13": {
                            "name": "VL_OFFSET_13",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_14": {
                    "name": "TX_PTP_VL_OFFSET_14",
                    "addressOffset": "0x32c",
                    "desc": [
                        "Virtual Lane Offset 14"
                    ],
                    "fields": {
                        "vl_offset_14": {
                            "name": "VL_OFFSET_14",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_15": {
                    "name": "TX_PTP_VL_OFFSET_15",
                    "addressOffset": "0x330",
                    "desc": [
                        "Virtual Lane Offset 15"
                    ],
                    "fields": {
                        "vl_offset_15": {
                            "name": "VL_OFFSET_15",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_16": {
                    "name": "TX_PTP_VL_OFFSET_16",
                    "addressOffset": "0x334",
                    "desc": [
                        "Virtual Lane Offset 16"
                    ],
                    "fields": {
                        "vl_offset_16": {
                            "name": "VL_OFFSET_16",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_17": {
                    "name": "TX_PTP_VL_OFFSET_17",
                    "addressOffset": "0x338",
                    "desc": [
                        "Virtual Lane Offset 17"
                    ],
                    "fields": {
                        "vl_offset_17": {
                            "name": "VL_OFFSET_17",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_18": {
                    "name": "TX_PTP_VL_OFFSET_18",
                    "addressOffset": "0x33c",
                    "desc": [
                        "Virtual Lane Offset 18"
                    ],
                    "fields": {
                        "vl_offset_18": {
                            "name": "VL_OFFSET_18",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "tx_ptp_vl_offset_19": {
                    "name": "TX_PTP_VL_OFFSET_19",
                    "addressOffset": "0x340",
                    "desc": [
                        "Virtual Lane Offset 19"
                    ],
                    "fields": {
                        "vl_offset_19": {
                            "name": "VL_OFFSET_19",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_extra_latency": {
                    "name": "RX_PTP_EXTRA_LATENCY",
                    "addressOffset": "0x344",
                    "desc": [
                        "Extra PTP latency"
                    ],
                    "fields": {
                        "extra_latency_1": {
                            "name": "EXTRA_LATENCY_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b field specifying extra latency EHIP adds to incoming timestamps"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_ui": {
                    "name": "RX_PTP_UI",
                    "addressOffset": "0x348",
                    "desc": [
                        "The duration of 1 Unit Interval"
                    ],
                    "fields": {
                        "ui_1": {
                            "name": "UI_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying duration of 1 unit interval"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_phy_lane_num": {
                    "name": "RX_PTP_PHY_LANE_NUM",
                    "addressOffset": "0x350",
                    "desc": [
                        "PMA Physical Lane Number"
                    ],
                    "fields": {
                        "lane_num_1": {
                            "name": "LANE_NUM_1",
                            "bitOffset": 0,
                            "bitWidth": 6,
                            "access": "rw",
                            "desc": [
                                "",
                                "6b indicate physical lane configuration in PMA"
                            ],
                            "reset": 1
                        }
                    }
                },
                "rx_ptp_ap_filter": {
                    "name": "RX_PTP_AP_FILTER",
                    "addressOffset": "0x354",
                    "desc": [
                        "Asynchronous Pulse Filter"
                    ],
                    "fields": {
                        "ap_filter_1": {
                            "name": "AP_FILTER_1",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16 bits specify number of Async pulse to be filtered so that it will not be consume by PTP block for timestamp processing. This is only valid in 10/25G non FEC mode"
                            ],
                            "reset": "0x0000"
                        }
                    }
                },
                "rx_ptp_vl_offset_0": {
                    "name": "RX_PTP_VL_OFFSET_0",
                    "addressOffset": "0x358",
                    "desc": [
                        "Virtual lane offset 0"
                    ],
                    "fields": {
                        "vl_offset_20": {
                            "name": "VL_OFFSET_20",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_0": {
                    "name": "RX_PTP_VL_TO_PL_0",
                    "addressOffset": "0x3a8",
                    "desc": [
                        "VL to PL mapping 0"
                    ],
                    "fields": {
                        "vl_to_pl_0": {
                            "name": "VL_TO_PL_0",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_1": {
                    "name": "RX_PTP_VL_OFFSET_1",
                    "addressOffset": "0x35c",
                    "desc": [
                        "Virtual lane offset 1"
                    ],
                    "fields": {
                        "vl_offset_21": {
                            "name": "VL_OFFSET_21",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_1": {
                    "name": "RX_PTP_VL_TO_PL_1",
                    "addressOffset": "0x3ac",
                    "desc": [
                        "VL to PL mapping 1"
                    ],
                    "fields": {
                        "vl_to_pl_1": {
                            "name": "VL_TO_PL_1",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_2": {
                    "name": "RX_PTP_VL_OFFSET_2",
                    "addressOffset": "0x360",
                    "desc": [
                        "Virtual lane offset 2"
                    ],
                    "fields": {
                        "vl_offset_22": {
                            "name": "VL_OFFSET_22",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_2": {
                    "name": "RX_PTP_VL_TO_PL_2",
                    "addressOffset": "0x3b0",
                    "desc": [
                        "VL to PL mapping 2"
                    ],
                    "fields": {
                        "vl_to_pl_2": {
                            "name": "VL_TO_PL_2",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_3": {
                    "name": "RX_PTP_VL_OFFSET_3",
                    "addressOffset": "0x364",
                    "desc": [
                        "Virtual lane offset 3"
                    ],
                    "fields": {
                        "vl_offset_23": {
                            "name": "VL_OFFSET_23",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_3": {
                    "name": "RX_PTP_VL_TO_PL_3",
                    "addressOffset": "0x3b4",
                    "desc": [
                        "VL to PL mapping 3"
                    ],
                    "fields": {
                        "vl_to_pl_3": {
                            "name": "VL_TO_PL_3",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_4": {
                    "name": "RX_PTP_VL_OFFSET_4",
                    "addressOffset": "0x368",
                    "desc": [
                        "Virtual lane offset 4"
                    ],
                    "fields": {
                        "vl_offset_24": {
                            "name": "VL_OFFSET_24",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_4": {
                    "name": "RX_PTP_VL_TO_PL_4",
                    "addressOffset": "0x3b8",
                    "desc": [
                        "VL to PL mapping 4"
                    ],
                    "fields": {
                        "vl_to_pl_4": {
                            "name": "VL_TO_PL_4",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_5": {
                    "name": "RX_PTP_VL_OFFSET_5",
                    "addressOffset": "0x36c",
                    "desc": [
                        "Virtual lane offset 5"
                    ],
                    "fields": {
                        "vl_offset_25": {
                            "name": "VL_OFFSET_25",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_5": {
                    "name": "RX_PTP_VL_TO_PL_5",
                    "addressOffset": "0x3bc",
                    "desc": [
                        "VL to PL mapping 5"
                    ],
                    "fields": {
                        "vl_to_pl_5": {
                            "name": "VL_TO_PL_5",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_6": {
                    "name": "RX_PTP_VL_OFFSET_6",
                    "addressOffset": "0x370",
                    "desc": [
                        "Virtual lane offset 6"
                    ],
                    "fields": {
                        "vl_offset_26": {
                            "name": "VL_OFFSET_26",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_6": {
                    "name": "RX_PTP_VL_TO_PL_6",
                    "addressOffset": "0x3c0",
                    "desc": [
                        "VL to PL mapping 6"
                    ],
                    "fields": {
                        "vl_to_pl_6": {
                            "name": "VL_TO_PL_6",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_7": {
                    "name": "RX_PTP_VL_OFFSET_7",
                    "addressOffset": "0x374",
                    "desc": [
                        "Virtual lane offset 7"
                    ],
                    "fields": {
                        "vl_offset_27": {
                            "name": "VL_OFFSET_27",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_7": {
                    "name": "RX_PTP_VL_TO_PL_7",
                    "addressOffset": "0x3c4",
                    "desc": [
                        "VL to PL mapping 7"
                    ],
                    "fields": {
                        "vl_to_pl_7": {
                            "name": "VL_TO_PL_7",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_8": {
                    "name": "RX_PTP_VL_OFFSET_8",
                    "addressOffset": "0x378",
                    "desc": [
                        "Virtual lane offset 8"
                    ],
                    "fields": {
                        "vl_offset_28": {
                            "name": "VL_OFFSET_28",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_8": {
                    "name": "RX_PTP_VL_TO_PL_8",
                    "addressOffset": "0x3c8",
                    "desc": [
                        "VL to PL mapping 8"
                    ],
                    "fields": {
                        "vl_to_pl_8": {
                            "name": "VL_TO_PL_8",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_9": {
                    "name": "RX_PTP_VL_OFFSET_9",
                    "addressOffset": "0x37c",
                    "desc": [
                        "Virtual lane offset 9"
                    ],
                    "fields": {
                        "vl_offset_29": {
                            "name": "VL_OFFSET_29",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_9": {
                    "name": "RX_PTP_VL_TO_PL_9",
                    "addressOffset": "0x3cc",
                    "desc": [
                        "VL to PL mapping 9"
                    ],
                    "fields": {
                        "vl_to_pl_9": {
                            "name": "VL_TO_PL_9",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_10": {
                    "name": "RX_PTP_VL_OFFSET_10",
                    "addressOffset": "0x380",
                    "desc": [
                        "Virtual lane offset 10"
                    ],
                    "fields": {
                        "vl_offset_30": {
                            "name": "VL_OFFSET_30",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_10": {
                    "name": "RX_PTP_VL_TO_PL_10",
                    "addressOffset": "0x3d0",
                    "desc": [
                        "VL to PL mapping 10"
                    ],
                    "fields": {
                        "vl_to_pl_10": {
                            "name": "VL_TO_PL_10",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_11": {
                    "name": "RX_PTP_VL_OFFSET_11",
                    "addressOffset": "0x384",
                    "desc": [
                        "Virtual lane offset 11"
                    ],
                    "fields": {
                        "vl_offset_31": {
                            "name": "VL_OFFSET_31",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_11": {
                    "name": "RX_PTP_VL_TO_PL_11",
                    "addressOffset": "0x3d4",
                    "desc": [
                        "VL to PL mapping 11"
                    ],
                    "fields": {
                        "vl_to_pl_11": {
                            "name": "VL_TO_PL_11",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_12": {
                    "name": "RX_PTP_VL_OFFSET_12",
                    "addressOffset": "0x388",
                    "desc": [
                        "Virtual lane offset 12"
                    ],
                    "fields": {
                        "vl_offset_32": {
                            "name": "VL_OFFSET_32",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_12": {
                    "name": "RX_PTP_VL_TO_PL_12",
                    "addressOffset": "0x3d8",
                    "desc": [
                        "VL to PL mapping 12"
                    ],
                    "fields": {
                        "vl_to_pl_12": {
                            "name": "VL_TO_PL_12",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_13": {
                    "name": "RX_PTP_VL_OFFSET_13",
                    "addressOffset": "0x38c",
                    "desc": [
                        "Virtual lane offset 13"
                    ],
                    "fields": {
                        "vl_offset_33": {
                            "name": "VL_OFFSET_33",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_13": {
                    "name": "RX_PTP_VL_TO_PL_13",
                    "addressOffset": "0x3dc",
                    "desc": [
                        "VL to PL mapping 13"
                    ],
                    "fields": {
                        "vl_to_pl_13": {
                            "name": "VL_TO_PL_13",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_14": {
                    "name": "RX_PTP_VL_OFFSET_14",
                    "addressOffset": "0x390",
                    "desc": [
                        "Virtual lane offset 14"
                    ],
                    "fields": {
                        "vl_offset_34": {
                            "name": "VL_OFFSET_34",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_14": {
                    "name": "RX_PTP_VL_TO_PL_14",
                    "addressOffset": "0x3e0",
                    "desc": [
                        "VL to PL mapping 14"
                    ],
                    "fields": {
                        "vl_to_pl_14": {
                            "name": "VL_TO_PL_14",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_15": {
                    "name": "RX_PTP_VL_OFFSET_15",
                    "addressOffset": "0x394",
                    "desc": [
                        "Virtual lane offset 15"
                    ],
                    "fields": {
                        "vl_offset_35": {
                            "name": "VL_OFFSET_35",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_15": {
                    "name": "RX_PTP_VL_TO_PL_15",
                    "addressOffset": "0x3e4",
                    "desc": [
                        "VL to PL mapping 15"
                    ],
                    "fields": {
                        "vl_to_pl_15": {
                            "name": "VL_TO_PL_15",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_16": {
                    "name": "RX_PTP_VL_OFFSET_16",
                    "addressOffset": "0x398",
                    "desc": [
                        "Virtual lane offset 16"
                    ],
                    "fields": {
                        "vl_offset_36": {
                            "name": "VL_OFFSET_36",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_16": {
                    "name": "RX_PTP_VL_TO_PL_16",
                    "addressOffset": "0x3e8",
                    "desc": [
                        "VL to PL mapping 16"
                    ],
                    "fields": {
                        "vl_to_pl_16": {
                            "name": "VL_TO_PL_16",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_17": {
                    "name": "RX_PTP_VL_OFFSET_17",
                    "addressOffset": "0x39c",
                    "desc": [
                        "Virtual lane offset 17"
                    ],
                    "fields": {
                        "vl_offset_37": {
                            "name": "VL_OFFSET_37",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_17": {
                    "name": "RX_PTP_VL_TO_PL_17",
                    "addressOffset": "0x3ec",
                    "desc": [
                        "VL to PL mapping 17"
                    ],
                    "fields": {
                        "vl_to_pl_17": {
                            "name": "VL_TO_PL_17",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_18": {
                    "name": "RX_PTP_VL_OFFSET_18",
                    "addressOffset": "0x3a0",
                    "desc": [
                        "Virtual lane offset 18"
                    ],
                    "fields": {
                        "vl_offset_38": {
                            "name": "VL_OFFSET_38",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_18": {
                    "name": "RX_PTP_VL_TO_PL_18",
                    "addressOffset": "0x3f0",
                    "desc": [
                        "VL to PL mapping 18"
                    ],
                    "fields": {
                        "vl_to_pl_18": {
                            "name": "VL_TO_PL_18",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_ptp_vl_offset_19": {
                    "name": "RX_PTP_VL_OFFSET_19",
                    "addressOffset": "0x3a4",
                    "desc": [
                        "Virtual lane offset 19"
                    ],
                    "fields": {
                        "vl_offset_39": {
                            "name": "VL_OFFSET_39",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32b specifying offset from alignment marker pulse"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "rx_ptp_vl_to_pl_19": {
                    "name": "RX_PTP_VL_TO_PL_19",
                    "addressOffset": "0x3f4",
                    "desc": [
                        "VL to PL mapping 19"
                    ],
                    "fields": {
                        "vl_to_pl_19": {
                            "name": "VL_TO_PL_19",
                            "bitOffset": 0,
                            "bitWidth": 5,
                            "access": "rw",
                            "desc": [
                                "",
                                "5b specifying the mapping from VL to PL"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_pkt_n_ts_rx_ctr": {
                    "name": "RX_PKT_N_TS_RX_CTR",
                    "addressOffset": "0x3f8",
                    "desc": [
                        "RX n-timestamp counter"
                    ],
                    "fields": {
                        "n_ts_ctr": {
                            "name": "N_TS_CTR",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "rw",
                            "desc": [
                                "",
                                "20 bits decides which numbered packet needs to be timestamped"
                            ],
                            "reset": "0x00000"
                        }
                    }
                },
                "tx_ptp_cf_overflow": {
                    "name": "TX_PTP_CF_OVERFLOW",
                    "addressOffset": "0xa58",
                    "desc": [
                        "Correction field overflow status ",
                        "2b indicate the status of correction field"
                    ],
                    "fields": {
                        "bit1": {
                            "name": "BIT1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "Egress cf overflow"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_0": {
                    "name": "TX_PTP_TAM_LO_PL_0",
                    "addressOffset": "0xa5c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_0": {
                            "name": "TAM_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_0": {
                    "name": "TX_PTP_TAM_MED_PL_0",
                    "addressOffset": "0xa60",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_1": {
                            "name": "TAM_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_0": {
                    "name": "TX_PTP_TAM_HI_PL_0",
                    "addressOffset": "0xa64",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_2": {
                            "name": "TAM_2",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_0": {
                    "name": "TX_PTP_TAM_ADJ_PL_0",
                    "addressOffset": "0xa68",
                    "desc": [
                        "TX TAM Adjustment 0"
                    ],
                    "fields": {
                        "tam_adj_0": {
                            "name": "TAM_ADJ_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_1": {
                    "name": "TX_PTP_TAM_LO_PL_1",
                    "addressOffset": "0xa6c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_3": {
                            "name": "TAM_3",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_1": {
                    "name": "TX_PTP_TAM_MED_PL_1",
                    "addressOffset": "0xa70",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_4": {
                            "name": "TAM_4",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_1": {
                    "name": "TX_PTP_TAM_HI_PL_1",
                    "addressOffset": "0xa74",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_5": {
                            "name": "TAM_5",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_1": {
                    "name": "TX_PTP_TAM_ADJ_PL_1",
                    "addressOffset": "0xa78",
                    "desc": [
                        "TX TAM Adjustment 1"
                    ],
                    "fields": {
                        "tam_adj_1": {
                            "name": "TAM_ADJ_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_2": {
                    "name": "TX_PTP_TAM_LO_PL_2",
                    "addressOffset": "0xa7c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_6": {
                            "name": "TAM_6",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_2": {
                    "name": "TX_PTP_TAM_MED_PL_2",
                    "addressOffset": "0xa80",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_7": {
                            "name": "TAM_7",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_2": {
                    "name": "TX_PTP_TAM_HI_PL_2",
                    "addressOffset": "0xa84",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_8": {
                            "name": "TAM_8",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_2": {
                    "name": "TX_PTP_TAM_ADJ_PL_2",
                    "addressOffset": "0xa88",
                    "desc": [
                        "TX TAM Adjustment 2"
                    ],
                    "fields": {
                        "tam_adj_2": {
                            "name": "TAM_ADJ_2",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_3": {
                    "name": "TX_PTP_TAM_LO_PL_3",
                    "addressOffset": "0xa8c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_9": {
                            "name": "TAM_9",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_3": {
                    "name": "TX_PTP_TAM_MED_PL_3",
                    "addressOffset": "0xa90",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_10": {
                            "name": "TAM_10",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_3": {
                    "name": "TX_PTP_TAM_HI_PL_3",
                    "addressOffset": "0xa94",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_11": {
                            "name": "TAM_11",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_3": {
                    "name": "TX_PTP_TAM_ADJ_PL_3",
                    "addressOffset": "0xa98",
                    "desc": [
                        "TX TAM adjustment 3"
                    ],
                    "fields": {
                        "tam_adj_3": {
                            "name": "TAM_ADJ_3",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_4": {
                    "name": "TX_PTP_TAM_LO_PL_4",
                    "addressOffset": "0xa9c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_12": {
                            "name": "TAM_12",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_4": {
                    "name": "TX_PTP_TAM_MED_PL_4",
                    "addressOffset": "0xaa0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_13": {
                            "name": "TAM_13",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_4": {
                    "name": "TX_PTP_TAM_HI_PL_4",
                    "addressOffset": "0xaa4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_14": {
                            "name": "TAM_14",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_4": {
                    "name": "TX_PTP_TAM_ADJ_PL_4",
                    "addressOffset": "0xaa8",
                    "desc": [
                        "TX TAM adjustment 4"
                    ],
                    "fields": {
                        "tam_adj_4": {
                            "name": "TAM_ADJ_4",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_5": {
                    "name": "TX_PTP_TAM_LO_PL_5",
                    "addressOffset": "0xaac",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_15": {
                            "name": "TAM_15",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_5": {
                    "name": "TX_PTP_TAM_MED_PL_5",
                    "addressOffset": "0xab0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_16": {
                            "name": "TAM_16",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_5": {
                    "name": "TX_PTP_TAM_HI_PL_5",
                    "addressOffset": "0xab4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_17": {
                            "name": "TAM_17",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_5": {
                    "name": "TX_PTP_TAM_ADJ_PL_5",
                    "addressOffset": "0xab8",
                    "desc": [
                        "TX TAM adjustment 5"
                    ],
                    "fields": {
                        "tam_adj_5": {
                            "name": "TAM_ADJ_5",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_6": {
                    "name": "TX_PTP_TAM_LO_PL_6",
                    "addressOffset": "0xabc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_18": {
                            "name": "TAM_18",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_6": {
                    "name": "TX_PTP_TAM_MED_PL_6",
                    "addressOffset": "0xac0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_19": {
                            "name": "TAM_19",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_6": {
                    "name": "TX_PTP_TAM_HI_PL_6",
                    "addressOffset": "0xac4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_20": {
                            "name": "TAM_20",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_6": {
                    "name": "TX_PTP_TAM_ADJ_PL_6",
                    "addressOffset": "0xac8",
                    "desc": [
                        "TX TAM adjustment 6"
                    ],
                    "fields": {
                        "tam_adj_6": {
                            "name": "TAM_ADJ_6",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_7": {
                    "name": "TX_PTP_TAM_LO_PL_7",
                    "addressOffset": "0xacc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_21": {
                            "name": "TAM_21",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_7": {
                    "name": "TX_PTP_TAM_MED_PL_7",
                    "addressOffset": "0xad0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_22": {
                            "name": "TAM_22",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_7": {
                    "name": "TX_PTP_TAM_HI_PL_7",
                    "addressOffset": "0xad4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_23": {
                            "name": "TAM_23",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_7": {
                    "name": "TX_PTP_TAM_ADJ_PL_7",
                    "addressOffset": "0xad8",
                    "desc": [
                        "TX TAM adjustment 7"
                    ],
                    "fields": {
                        "tam_adj_7": {
                            "name": "TAM_ADJ_7",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_8": {
                    "name": "TX_PTP_TAM_LO_PL_8",
                    "addressOffset": "0xadc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_24": {
                            "name": "TAM_24",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_8": {
                    "name": "TX_PTP_TAM_MED_PL_8",
                    "addressOffset": "0xae0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_25": {
                            "name": "TAM_25",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_8": {
                    "name": "TX_PTP_TAM_HI_PL_8",
                    "addressOffset": "0xae4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_26": {
                            "name": "TAM_26",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_8": {
                    "name": "TX_PTP_TAM_ADJ_PL_8",
                    "addressOffset": "0xae8",
                    "desc": [
                        "TX TAM adjustment 8"
                    ],
                    "fields": {
                        "tam_adj_8": {
                            "name": "TAM_ADJ_8",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_9": {
                    "name": "TX_PTP_TAM_LO_PL_9",
                    "addressOffset": "0xaec",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_27": {
                            "name": "TAM_27",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_9": {
                    "name": "TX_PTP_TAM_MED_PL_9",
                    "addressOffset": "0xaf0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_28": {
                            "name": "TAM_28",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_9": {
                    "name": "TX_PTP_TAM_HI_PL_9",
                    "addressOffset": "0xaf4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_29": {
                            "name": "TAM_29",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_9": {
                    "name": "TX_PTP_TAM_ADJ_PL_9",
                    "addressOffset": "0xaf8",
                    "desc": [
                        "TX TAM adjustment 9"
                    ],
                    "fields": {
                        "tam_adj_9": {
                            "name": "TAM_ADJ_9",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_10": {
                    "name": "TX_PTP_TAM_LO_PL_10",
                    "addressOffset": "0xafc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_30": {
                            "name": "TAM_30",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_10": {
                    "name": "TX_PTP_TAM_MED_PL_10",
                    "addressOffset": "0xb00",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_31": {
                            "name": "TAM_31",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_10": {
                    "name": "TX_PTP_TAM_HI_PL_10",
                    "addressOffset": "0xb04",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_32": {
                            "name": "TAM_32",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_10": {
                    "name": "TX_PTP_TAM_ADJ_PL_10",
                    "addressOffset": "0xb08",
                    "desc": [
                        "TX TAM adjustment 10"
                    ],
                    "fields": {
                        "tam_adj_10": {
                            "name": "TAM_ADJ_10",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_11": {
                    "name": "TX_PTP_TAM_LO_PL_11",
                    "addressOffset": "0xb0c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_33": {
                            "name": "TAM_33",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_11": {
                    "name": "TX_PTP_TAM_MED_PL_11",
                    "addressOffset": "0xb10",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_34": {
                            "name": "TAM_34",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_11": {
                    "name": "TX_PTP_TAM_HI_PL_11",
                    "addressOffset": "0xb14",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_35": {
                            "name": "TAM_35",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_11": {
                    "name": "TX_PTP_TAM_ADJ_PL_11",
                    "addressOffset": "0xb18",
                    "desc": [
                        "TX TAM adjustment 11"
                    ],
                    "fields": {
                        "tam_adj_11": {
                            "name": "TAM_ADJ_11",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_12": {
                    "name": "TX_PTP_TAM_LO_PL_12",
                    "addressOffset": "0xb1c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_36": {
                            "name": "TAM_36",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_12": {
                    "name": "TX_PTP_TAM_MED_PL_12",
                    "addressOffset": "0xb20",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_37": {
                            "name": "TAM_37",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_12": {
                    "name": "TX_PTP_TAM_HI_PL_12",
                    "addressOffset": "0xb24",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_38": {
                            "name": "TAM_38",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_12": {
                    "name": "TX_PTP_TAM_ADJ_PL_12",
                    "addressOffset": "0xb28",
                    "desc": [
                        "TX TAM adjustment 12"
                    ],
                    "fields": {
                        "tam_adj_12": {
                            "name": "TAM_ADJ_12",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_13": {
                    "name": "TX_PTP_TAM_LO_PL_13",
                    "addressOffset": "0xb2c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_39": {
                            "name": "TAM_39",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_13": {
                    "name": "TX_PTP_TAM_MED_PL_13",
                    "addressOffset": "0xb30",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_40": {
                            "name": "TAM_40",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_13": {
                    "name": "TX_PTP_TAM_HI_PL_13",
                    "addressOffset": "0xb34",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_41": {
                            "name": "TAM_41",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_13": {
                    "name": "TX_PTP_TAM_ADJ_PL_13",
                    "addressOffset": "0xb38",
                    "desc": [
                        "TX TAM adjustment 13"
                    ],
                    "fields": {
                        "tam_adj_13": {
                            "name": "TAM_ADJ_13",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_14": {
                    "name": "TX_PTP_TAM_LO_PL_14",
                    "addressOffset": "0xb3c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_42": {
                            "name": "TAM_42",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_14": {
                    "name": "TX_PTP_TAM_MED_PL_14",
                    "addressOffset": "0xb40",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_43": {
                            "name": "TAM_43",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_14": {
                    "name": "TX_PTP_TAM_HI_PL_14",
                    "addressOffset": "0xb44",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_44": {
                            "name": "TAM_44",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_14": {
                    "name": "TX_PTP_TAM_ADJ_PL_14",
                    "addressOffset": "0xb48",
                    "desc": [
                        "TX TAM adjustment 14"
                    ],
                    "fields": {
                        "tam_adj_14": {
                            "name": "TAM_ADJ_14",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_lo_pl_15": {
                    "name": "TX_PTP_TAM_LO_PL_15",
                    "addressOffset": "0xb4c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_45": {
                            "name": "TAM_45",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_med_pl_15": {
                    "name": "TX_PTP_TAM_MED_PL_15",
                    "addressOffset": "0xb50",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_46": {
                            "name": "TAM_46",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_hi_pl_15": {
                    "name": "TX_PTP_TAM_HI_PL_15",
                    "addressOffset": "0xb54",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_47": {
                            "name": "TAM_47",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ptp_tam_adj_pl_15": {
                    "name": "TX_PTP_TAM_ADJ_PL_15",
                    "addressOffset": "0xb58",
                    "desc": [
                        "TX TAM adjustment 15"
                    ],
                    "fields": {
                        "tam_adj_15": {
                            "name": "TAM_ADJ_15",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "tx_ts_ss_lo": {
                    "name": "TX_TS_SS_LO",
                    "addressOffset": "0xb5c",
                    "desc": [
                        "Final Timestamp Snapshot Lo"
                    ],
                    "fields": {
                        "ts_ss_0": {
                            "name": "TS_SS_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Use this read only register in debug process to read [31:0] of the final timestamp"
                            ]
                        }
                    }
                },
                "tx_ts_ss_mid": {
                    "name": "TX_TS_SS_MID",
                    "addressOffset": "0xb60",
                    "desc": [
                        "Final Timestamp Snapshot Mid"
                    ],
                    "fields": {
                        "ts_ss_1": {
                            "name": "TS_SS_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Use this read only register in debug process to read [63:32] of the final timestamp"
                            ]
                        }
                    }
                },
                "tx_ts_ss_hi": {
                    "name": "TX_TS_SS_HI",
                    "addressOffset": "0xb64",
                    "desc": [
                        "Final Timestamp Snapshot Hi"
                    ],
                    "fields": {
                        "ts_ss_2": {
                            "name": "TS_SS_2",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Use this read only register in debug process to read [95:64] of the final timestamp"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_0": {
                    "name": "RX_PTP_TAM_LO_PL_0",
                    "addressOffset": "0xb6c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_48": {
                            "name": "TAM_48",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_0": {
                    "name": "RX_PTP_TAM_MED_PL_0",
                    "addressOffset": "0xb70",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_49": {
                            "name": "TAM_49",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_0": {
                    "name": "RX_PTP_TAM_HI_PL_0",
                    "addressOffset": "0xb74",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_50": {
                            "name": "TAM_50",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_0": {
                    "name": "RX_PTP_TAM_ADJ_PL_0",
                    "addressOffset": "0xb78",
                    "desc": [
                        "RX TAM adjustment 0"
                    ],
                    "fields": {
                        "tam_adj_16": {
                            "name": "TAM_ADJ_16",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_1": {
                    "name": "RX_PTP_TAM_LO_PL_1",
                    "addressOffset": "0xb7c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_51": {
                            "name": "TAM_51",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_1": {
                    "name": "RX_PTP_TAM_MED_PL_1",
                    "addressOffset": "0xb80",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_52": {
                            "name": "TAM_52",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_1": {
                    "name": "RX_PTP_TAM_HI_PL_1",
                    "addressOffset": "0xb84",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_53": {
                            "name": "TAM_53",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_1": {
                    "name": "RX_PTP_TAM_ADJ_PL_1",
                    "addressOffset": "0xb88",
                    "desc": [
                        "RX TAM adjustment 1"
                    ],
                    "fields": {
                        "tam_adj_17": {
                            "name": "TAM_ADJ_17",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_2": {
                    "name": "RX_PTP_TAM_LO_PL_2",
                    "addressOffset": "0xb8c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_54": {
                            "name": "TAM_54",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_2": {
                    "name": "RX_PTP_TAM_MED_PL_2",
                    "addressOffset": "0xb90",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_55": {
                            "name": "TAM_55",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_2": {
                    "name": "RX_PTP_TAM_HI_PL_2",
                    "addressOffset": "0xb94",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_56": {
                            "name": "TAM_56",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_2": {
                    "name": "RX_PTP_TAM_ADJ_PL_2",
                    "addressOffset": "0xb98",
                    "desc": [
                        "RX TAM adjustment 2"
                    ],
                    "fields": {
                        "tam_adj_18": {
                            "name": "TAM_ADJ_18",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_3": {
                    "name": "RX_PTP_TAM_LO_PL_3",
                    "addressOffset": "0xb9c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_57": {
                            "name": "TAM_57",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_3": {
                    "name": "RX_PTP_TAM_MED_PL_3",
                    "addressOffset": "0xba0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_58": {
                            "name": "TAM_58",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_3": {
                    "name": "RX_PTP_TAM_HI_PL_3",
                    "addressOffset": "0xba4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_59": {
                            "name": "TAM_59",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_3": {
                    "name": "RX_PTP_TAM_ADJ_PL_3",
                    "addressOffset": "0xba8",
                    "desc": [
                        "RX TAM adjustment 3"
                    ],
                    "fields": {
                        "tam_adj_19": {
                            "name": "TAM_ADJ_19",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_4": {
                    "name": "RX_PTP_TAM_LO_PL_4",
                    "addressOffset": "0xbac",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_60": {
                            "name": "TAM_60",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_4": {
                    "name": "RX_PTP_TAM_MED_PL_4",
                    "addressOffset": "0xbb0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_61": {
                            "name": "TAM_61",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_4": {
                    "name": "RX_PTP_TAM_HI_PL_4",
                    "addressOffset": "0xbb4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_62": {
                            "name": "TAM_62",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_4": {
                    "name": "RX_PTP_TAM_ADJ_PL_4",
                    "addressOffset": "0xbb8",
                    "desc": [
                        "RX TAM adjustment 4"
                    ],
                    "fields": {
                        "tam_adj_20": {
                            "name": "TAM_ADJ_20",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_5": {
                    "name": "RX_PTP_TAM_LO_PL_5",
                    "addressOffset": "0xbbc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_63": {
                            "name": "TAM_63",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_5": {
                    "name": "RX_PTP_TAM_MED_PL_5",
                    "addressOffset": "0xbc0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_64": {
                            "name": "TAM_64",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_5": {
                    "name": "RX_PTP_TAM_HI_PL_5",
                    "addressOffset": "0xbc4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_65": {
                            "name": "TAM_65",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_5": {
                    "name": "RX_PTP_TAM_ADJ_PL_5",
                    "addressOffset": "0xbc8",
                    "desc": [
                        "RX TAM adjustment 5"
                    ],
                    "fields": {
                        "tam_adj_21": {
                            "name": "TAM_ADJ_21",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_6": {
                    "name": "RX_PTP_TAM_LO_PL_6",
                    "addressOffset": "0xbcc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_66": {
                            "name": "TAM_66",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_6": {
                    "name": "RX_PTP_TAM_MED_PL_6",
                    "addressOffset": "0xbd0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_67": {
                            "name": "TAM_67",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_6": {
                    "name": "RX_PTP_TAM_HI_PL_6",
                    "addressOffset": "0xbd4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_68": {
                            "name": "TAM_68",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_6": {
                    "name": "RX_PTP_TAM_ADJ_PL_6",
                    "addressOffset": "0xbd8",
                    "desc": [
                        "RX TAM adjustment 6"
                    ],
                    "fields": {
                        "tam_adj_22": {
                            "name": "TAM_ADJ_22",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_7": {
                    "name": "RX_PTP_TAM_LO_PL_7",
                    "addressOffset": "0xbdc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_69": {
                            "name": "TAM_69",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_7": {
                    "name": "RX_PTP_TAM_MED_PL_7",
                    "addressOffset": "0xbe0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_70": {
                            "name": "TAM_70",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_7": {
                    "name": "RX_PTP_TAM_HI_PL_7",
                    "addressOffset": "0xbe4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_71": {
                            "name": "TAM_71",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_7": {
                    "name": "RX_PTP_TAM_ADJ_PL_7",
                    "addressOffset": "0xbe8",
                    "desc": [
                        "RX TAM adjustment 7"
                    ],
                    "fields": {
                        "tam_adj_23": {
                            "name": "TAM_ADJ_23",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_8": {
                    "name": "RX_PTP_TAM_LO_PL_8",
                    "addressOffset": "0xbec",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_72": {
                            "name": "TAM_72",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_8": {
                    "name": "RX_PTP_TAM_MED_PL_8",
                    "addressOffset": "0xbf0",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_73": {
                            "name": "TAM_73",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_8": {
                    "name": "RX_PTP_TAM_HI_PL_8",
                    "addressOffset": "0xbf4",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_74": {
                            "name": "TAM_74",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_8": {
                    "name": "RX_PTP_TAM_ADJ_PL_8",
                    "addressOffset": "0xbf8",
                    "desc": [
                        "RX TAM adjustment 8"
                    ],
                    "fields": {
                        "tam_adj_24": {
                            "name": "TAM_ADJ_24",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_9": {
                    "name": "RX_PTP_TAM_LO_PL_9",
                    "addressOffset": "0xbfc",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_75": {
                            "name": "TAM_75",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_9": {
                    "name": "RX_PTP_TAM_MED_PL_9",
                    "addressOffset": "0xc00",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_76": {
                            "name": "TAM_76",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_9": {
                    "name": "RX_PTP_TAM_HI_PL_9",
                    "addressOffset": "0xc04",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_77": {
                            "name": "TAM_77",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_9": {
                    "name": "RX_PTP_TAM_ADJ_PL_9",
                    "addressOffset": "0xc08",
                    "desc": [
                        "RX TAM adjustment 9"
                    ],
                    "fields": {
                        "tam_adj_25": {
                            "name": "TAM_ADJ_25",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_10": {
                    "name": "RX_PTP_TAM_LO_PL_10",
                    "addressOffset": "0xc0c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_78": {
                            "name": "TAM_78",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_10": {
                    "name": "RX_PTP_TAM_MED_PL_10",
                    "addressOffset": "0xc10",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_79": {
                            "name": "TAM_79",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_10": {
                    "name": "RX_PTP_TAM_HI_PL_10",
                    "addressOffset": "0xc14",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_80": {
                            "name": "TAM_80",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_10": {
                    "name": "RX_PTP_TAM_ADJ_PL_10",
                    "addressOffset": "0xc18",
                    "desc": [
                        "RX TAM adjustment 10"
                    ],
                    "fields": {
                        "tam_adj_26": {
                            "name": "TAM_ADJ_26",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_11": {
                    "name": "RX_PTP_TAM_LO_PL_11",
                    "addressOffset": "0xc1c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_81": {
                            "name": "TAM_81",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_11": {
                    "name": "RX_PTP_TAM_MED_PL_11",
                    "addressOffset": "0xc20",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_82": {
                            "name": "TAM_82",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_11": {
                    "name": "RX_PTP_TAM_HI_PL_11",
                    "addressOffset": "0xc24",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_83": {
                            "name": "TAM_83",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_11": {
                    "name": "RX_PTP_TAM_ADJ_PL_11",
                    "addressOffset": "0xc28",
                    "desc": [
                        "RX TAM adjustment 11"
                    ],
                    "fields": {
                        "tam_adj_27": {
                            "name": "TAM_ADJ_27",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_12": {
                    "name": "RX_PTP_TAM_LO_PL_12",
                    "addressOffset": "0xc2c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_84": {
                            "name": "TAM_84",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_12": {
                    "name": "RX_PTP_TAM_MED_PL_12",
                    "addressOffset": "0xc30",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_85": {
                            "name": "TAM_85",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_12": {
                    "name": "RX_PTP_TAM_HI_PL_12",
                    "addressOffset": "0xc34",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_86": {
                            "name": "TAM_86",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_12": {
                    "name": "RX_PTP_TAM_ADJ_PL_12",
                    "addressOffset": "0xc38",
                    "desc": [
                        "RX TAM adjustment 12"
                    ],
                    "fields": {
                        "tam_adj_28": {
                            "name": "TAM_ADJ_28",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_13": {
                    "name": "RX_PTP_TAM_LO_PL_13",
                    "addressOffset": "0xc3c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_87": {
                            "name": "TAM_87",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_13": {
                    "name": "RX_PTP_TAM_MED_PL_13",
                    "addressOffset": "0xc40",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_88": {
                            "name": "TAM_88",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_13": {
                    "name": "RX_PTP_TAM_HI_PL_13",
                    "addressOffset": "0xc44",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_89": {
                            "name": "TAM_89",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_13": {
                    "name": "RX_PTP_TAM_ADJ_PL_13",
                    "addressOffset": "0xc48",
                    "desc": [
                        "RX TAM adjustment 13"
                    ],
                    "fields": {
                        "tam_adj_29": {
                            "name": "TAM_ADJ_29",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_14": {
                    "name": "RX_PTP_TAM_LO_PL_14",
                    "addressOffset": "0xc4c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_90": {
                            "name": "TAM_90",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_14": {
                    "name": "RX_PTP_TAM_MED_PL_14",
                    "addressOffset": "0xc50",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_91": {
                            "name": "TAM_91",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_14": {
                    "name": "RX_PTP_TAM_HI_PL_14",
                    "addressOffset": "0xc54",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_92": {
                            "name": "TAM_92",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_14": {
                    "name": "RX_PTP_TAM_ADJ_PL_14",
                    "addressOffset": "0xc58",
                    "desc": [
                        "RX TAM adjustment 14"
                    ],
                    "fields": {
                        "tam_adj_30": {
                            "name": "TAM_ADJ_30",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_lo_pl_15": {
                    "name": "RX_PTP_TAM_LO_PL_15",
                    "addressOffset": "0xc5c",
                    "desc": [
                        "Low 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_93": {
                            "name": "TAM_93",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [31:0] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_med_pl_15": {
                    "name": "RX_PTP_TAM_MED_PL_15",
                    "addressOffset": "0xc60",
                    "desc": [
                        "Middle 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_94": {
                            "name": "TAM_94",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [63:32] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_hi_pl_15": {
                    "name": "RX_PTP_TAM_HI_PL_15",
                    "addressOffset": "0xc64",
                    "desc": [
                        "High 32 bit of reference time of alignment marker"
                    ],
                    "fields": {
                        "tam_95": {
                            "name": "TAM_95",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back bit [95:64] of reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ptp_tam_adj_pl_15": {
                    "name": "RX_PTP_TAM_ADJ_PL_15",
                    "addressOffset": "0xc68",
                    "desc": [
                        "RX TAM adjustment 15"
                    ],
                    "fields": {
                        "tam_adj_31": {
                            "name": "TAM_ADJ_31",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "32b read back amount of adjustment needed for reference time of alignment marker"
                            ]
                        }
                    }
                },
                "rx_ts_ss_lo": {
                    "name": "RX_TS_SS_LO",
                    "addressOffset": "0xc6c",
                    "desc": [
                        "Final timestamp snapshot Lo"
                    ],
                    "fields": {
                        "ts_ss_3": {
                            "name": "TS_SS_3",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Use this read only register in debug process to read [31:0] of the final timestamp"
                            ]
                        }
                    }
                },
                "rx_ts_ss_mid": {
                    "name": "RX_TS_SS_MID",
                    "addressOffset": "0xc70",
                    "desc": [
                        "Final timestamp snapshot Mid"
                    ],
                    "fields": {
                        "ts_ss_4": {
                            "name": "TS_SS_4",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Use this read only register in debug process to read [63:32] of the final timestamp"
                            ]
                        }
                    }
                },
                "rx_ts_ss_hi": {
                    "name": "RX_TS_SS_HI",
                    "addressOffset": "0xc74",
                    "desc": [
                        "Final timestamp snapshot Hi"
                    ],
                    "fields": {
                        "ts_ss_5": {
                            "name": "TS_SS_5",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "> ",
                                "Use this read only register in debug process to read [95:64] of the final timestamp"
                            ]
                        }
                    }
                },
                "tx_pause_en": {
                    "name": "TX_PAUSE_EN",
                    "addressOffset": "0x22c",
                    "desc": [
                        "Enable TX Pause Ports ",
                        "Each bit enables the corresponding PFC TX pause port"
                    ],
                    "fields": {
                        "en_pfc_port": {
                            "name": "EN_PFC_PORT",
                            "bitOffset": 0,
                            "bitWidth": 9,
                            "access": "rw",
                            "desc": [
                                "Enable TX PAUSE or TX PFC port. Bits 7:0 are for PFC, bit 8 is for PAUSE ",
                                "1:Corresponding tx_pfc_pause port can be used to trigger TX PFC frames"
                            ],
                            "reset": "0x0"
                        }
                    }
                },
                "tx_pause_request": {
                    "name": "TX_PAUSE_REQUEST",
                    "addressOffset": "0x230",
                    "desc": [
                        "TX Pause Request ",
                        "An alternate way to request the transmission of TX Pause frames"
                    ],
                    "fields": {
                        "req_pause": {
                            "name": "REQ_PAUSE",
                            "bitOffset": 0,
                            "bitWidth": 9,
                            "access": "rw",
                            "desc": [
                                "Request TX PAUSE or TX PFC. Bits [7:0] are for PFC, bit [8] is for PAUSE ",
                                "Works the same way as the corresponding tx_pause port or tx_pfc port"
                            ],
                            "reset": "0x000"
                        }
                    }
                },
                "retransmit_xoff_holdoff_en": {
                    "name": "RETRANSMIT_XOFF_HOLDOFF_EN",
                    "addressOffset": "0x234",
                    "desc": [
                        "Enable automatic TX Pause Retransmission ",
                        "Turns on automatic XOFF pause frame retransmission using a holdoff timer for the corresponding tx_pfc_pause port"
                    ],
                    "fields": {
                        "en_holdoff": {
                            "name": "EN_HOLDOFF",
                            "bitOffset": 0,
                            "bitWidth": 9,
                            "access": "rw",
                            "desc": [
                                "Enable Holdoff timer. Bits [7:0] are for PFC, bit [9] is for PAUSE ",
                                "1:Holdoff timer enabled. EHIP will transmit a new set of XOFF frames whenever the holdoff timer expires with tx_pfc_pause high for the corresponding queue"
                            ],
                            "reset": "0x1ff"
                        }
                    }
                },
                "retransmit_xoff_holdoff_quanta": {
                    "name": "RETRANSMIT_XOFF_HOLDOFF_QUANTA",
                    "addressOffset": "0x238",
                    "desc": [
                        "Holdoff Quanta"
                    ],
                    "fields": {
                        "holdoff_quanta_0": {
                            "name": "HOLDOFF_QUANTA_0",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying holdoff time before another XOFF is transmitted. Minimum value is 1."
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "tx_pause_quanta": {
                    "name": "TX_PAUSE_QUANTA",
                    "addressOffset": "0x23c",
                    "desc": [
                        "Pause Quanta"
                    ],
                    "fields": {
                        "pause_quanta_0": {
                            "name": "PAUSE_QUANTA_0",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta that will be transmitted in each XOFF frame sent."
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "tx_xof_en_tx_pause_qnumber": {
                    "name": "TX_XOF_EN_TX_PAUSE_QNUMBER",
                    "addressOffset": "0x240",
                    "desc": [
                        "Enable TX XOFF ",
                        "In Standard flow control mode, activates automatic TX response to XOFF requests from the link partner."
                    ],
                    "fields": {
                        "en_xoff_qnum_sel": {
                            "name": "EN_XOFF_QNUM_SEL",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "",
                                "1: EHIP will respond to XOFF requests it receives by stopping the flow of TX data"
                            ],
                            "reset": 0
                        }
                    }
                },
                "cfg_retransmit_holdoff_en": {
                    "name": "CFG_RETRANSMIT_HOLDOFF_EN",
                    "addressOffset": "0x244",
                    "desc": [
                        "Enable Uniform Holdoff ",
                        "In PFC mode, make all queues use a holdoff time that is max(per_queue_holdoff, uniform_holdoff)."
                    ],
                    "fields": {
                        "en_holdoff_all": {
                            "name": "EN_HOLDOFF_ALL",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "All queues must use a holdoff at least as long as the holdoff programmed into CFG_RETRANSMIT_HOLDOFF_QUANTA"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "cfg_retransmit_holdoff_quanta": {
                    "name": "CFG_RETRANSMIT_HOLDOFF_QUANTA",
                    "addressOffset": "0x248",
                    "desc": [
                        "Set Uniform Holdoff"
                    ],
                    "fields": {
                        "holdoff_all_quanta": {
                            "name": "HOLDOFF_ALL_QUANTA",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the minimum holdoff time for all PFC queues when CFG_RETRANSMIT_HOLDOFF_EN=1"
                            ],
                            "reset": "0x0000"
                        }
                    }
                },
                "tx_pfc_daddrl": {
                    "name": "TX_PFC_DADDRL",
                    "addressOffset": "0x24c",
                    "desc": [
                        "Lower 4 bytes of the Destination address for Flow Control"
                    ],
                    "fields": {
                        "daddrl": {
                            "name": "DADDRL",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the lower 4 bytes of the 6 byte Destination MAC address used for SFC and PFC frames"
                            ],
                            "reset": "0xC2000001"
                        }
                    }
                },
                "tx_pfc_daddrh": {
                    "name": "TX_PFC_DADDRH",
                    "addressOffset": "0x250",
                    "desc": [
                        "Higher 2 bytes of the Destination address for Flow Control"
                    ],
                    "fields": {
                        "daddrh": {
                            "name": "DADDRH",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the higher 2 bytes of the 6 byte Destination MAC address used for SFC and PFC frames"
                            ],
                            "reset": "0x0180"
                        }
                    }
                },
                "tx_pfc_saddrl": {
                    "name": "TX_PFC_SADDRL",
                    "addressOffset": "0x254",
                    "desc": [
                        "Lower 4 bytes of the Source address for Flow Control frames"
                    ],
                    "fields": {
                        "saddrl_0": {
                            "name": "SADDRL_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the lower 4 bytes of the 6 byte Source MAC address used for SFC and PFC frames"
                            ],
                            "reset": "0xCBFC5ADD"
                        }
                    }
                },
                "tx_pfc_saddrh": {
                    "name": "TX_PFC_SADDRH",
                    "addressOffset": "0x258",
                    "desc": [
                        "Higher 2 bytes of the Source address for Flow Control frames"
                    ],
                    "fields": {
                        "saddrh_0": {
                            "name": "SADDRH_0",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the higher 2 bytes of the 6 byte Source MAC address used for SFC and PFC frames"
                            ],
                            "reset": "0xE100"
                        }
                    }
                },
                "txsfc_ehip_cfg": {
                    "name": "TXSFC_EHIP_CFG",
                    "addressOffset": "0x25c",
                    "desc": [
                        "EHIP TX Flow Control Feature Configuration ",
                        "Configures EHIP specific TX Flow Control Features."
                    ],
                    "fields": {
                        "en_sfc_0": {
                            "name": "EN_SFC_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Standard Flow Control TX ",
                                "1:Enable Standard Flow Control (link PAUSE)"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "en_pfc_0": {
                            "name": "EN_PFC_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Priority Flow Control TX ",
                                "1:Enable Priority Flow Control"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "rx_pause_enable": {
                    "name": "RX_PAUSE_ENABLE",
                    "addressOffset": "0x260",
                    "desc": [
                        "Enable RX Pause Frame Processing ",
                        "Makes EHIP process incoming pause frames for the selected queues"
                    ],
                    "fields": {
                        "en_rx_pause": {
                            "name": "EN_RX_PAUSE",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "Enable RX Pause ",
                                "1:Enable pause frame processing for selected queue"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "rx_pause_fwd": {
                    "name": "RX_PAUSE_FWD",
                    "addressOffset": "0x264",
                    "desc": [
                        "Forward Pause Frames ",
                        "Enables pause frame forwarding"
                    ],
                    "fields": {
                        "rx_pause_fwd": {
                            "name": "RX_PAUSE_FWD",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Forward Pause Frames ",
                                "1:Forward all flow control frames to the application after processing them ",
                                "0:Do not forward flow control frames that match the RX destination address for flow control to the application"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "rx_pause_daddrl": {
                    "name": "RX_PAUSE_DADDRL",
                    "addressOffset": "0x268",
                    "desc": [
                        "Lower 4 bytes of the Destination address for RX Pause Frames"
                    ],
                    "fields": {
                        "rx_pause_daddrl": {
                            "name": "RX_PAUSE_DADDRL",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the lower 4 bytes of the 6 byte Destination MAC Address that must be found in incoming SFC and PFC frames for them to be processed"
                            ],
                            "reset": "0xC2000001"
                        }
                    }
                },
                "rx_pause_daddrh": {
                    "name": "RX_PAUSE_DADDRH",
                    "addressOffset": "0x26c",
                    "desc": [
                        "Higher 2 bytes of the Destination address for RX Pause Frames"
                    ],
                    "fields": {
                        "rx_pause_daddrh": {
                            "name": "RX_PAUSE_DADDRH",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "Sets the 6 byte Destination MAC Address that must be found in incoming SFC and PFC frames for them to be processed"
                            ],
                            "reset": "0x0180"
                        }
                    }
                },
                "rxsfc_ehip_cfg": {
                    "name": "RXSFC_EHIP_CFG",
                    "addressOffset": "0x270",
                    "desc": [
                        "EHIP RX Flow Control Feature Configuration ",
                        "Configures EHIP specific RX Flow Control Features"
                    ],
                    "fields": {
                        "en_sfc_1": {
                            "name": "EN_SFC_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Standard Flow Control RX ",
                                "1:Enable Standard Flow Control (link PAUSE)"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "en_pfc_1": {
                            "name": "EN_PFC_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Priority Flow Control RX ",
                                "1:Enable Priority Flow Control"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "pfc_pause_quanta_0": {
                    "name": "PFC_PAUSE_QUANTA_0",
                    "addressOffset": "0x284",
                    "desc": [
                        "Pause Quanta 0"
                    ],
                    "fields": {
                        "pause_quanta_1": {
                            "name": "PAUSE_QUANTA_1",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_pause_quanta_1": {
                    "name": "PFC_PAUSE_QUANTA_1",
                    "addressOffset": "0x288",
                    "desc": [
                        "Pause Quanta 1"
                    ],
                    "fields": {
                        "pause_quanta_2": {
                            "name": "PAUSE_QUANTA_2",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_pause_quanta_2": {
                    "name": "PFC_PAUSE_QUANTA_2",
                    "addressOffset": "0x28c",
                    "desc": [
                        "Pause Quanta 2"
                    ],
                    "fields": {
                        "pause_quanta_3": {
                            "name": "PAUSE_QUANTA_3",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_pause_quanta_3": {
                    "name": "PFC_PAUSE_QUANTA_3",
                    "addressOffset": "0x290",
                    "desc": [
                        "Pause Quanta 3"
                    ],
                    "fields": {
                        "pause_quanta_4": {
                            "name": "PAUSE_QUANTA_4",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_pause_quanta_4": {
                    "name": "PFC_PAUSE_QUANTA_4",
                    "addressOffset": "0x294",
                    "desc": [
                        "Pause Quanta 4"
                    ],
                    "fields": {
                        "pause_quanta_5": {
                            "name": "PAUSE_QUANTA_5",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_pause_quanta_5": {
                    "name": "PFC_PAUSE_QUANTA_5",
                    "addressOffset": "0x298",
                    "desc": [
                        "Pause Quanta 5"
                    ],
                    "fields": {
                        "pause_quanta_6": {
                            "name": "PAUSE_QUANTA_6",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_pause_quanta_6": {
                    "name": "PFC_PAUSE_QUANTA_6",
                    "addressOffset": "0x29c",
                    "desc": [
                        "Pause Quanta 6"
                    ],
                    "fields": {
                        "pause_quanta_7": {
                            "name": "PAUSE_QUANTA_7",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_pause_quanta_7": {
                    "name": "PFC_PAUSE_QUANTA_7",
                    "addressOffset": "0x2a0",
                    "desc": [
                        "Pause Quanta 7"
                    ],
                    "fields": {
                        "pause_quanta_8": {
                            "name": "PAUSE_QUANTA_8",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the pause quanta transmitted in each sent XOFF frame"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_0": {
                    "name": "PFC_HOLDOFF_QUANTA_0",
                    "addressOffset": "0x2a4",
                    "desc": [
                        "Holdoff Quanta 0"
                    ],
                    "fields": {
                        "holdoff_quanta_1": {
                            "name": "HOLDOFF_QUANTA_1",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_1": {
                    "name": "PFC_HOLDOFF_QUANTA_1",
                    "addressOffset": "0x2a8",
                    "desc": [
                        "Holdoff Quanta 1"
                    ],
                    "fields": {
                        "holdoff_quanta_2": {
                            "name": "HOLDOFF_QUANTA_2",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_2": {
                    "name": "PFC_HOLDOFF_QUANTA_2",
                    "addressOffset": "0x2ac",
                    "desc": [
                        "Holdoff Quanta 2"
                    ],
                    "fields": {
                        "holdoff_quanta_3": {
                            "name": "HOLDOFF_QUANTA_3",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_3": {
                    "name": "PFC_HOLDOFF_QUANTA_3",
                    "addressOffset": "0x2b0",
                    "desc": [
                        "Holdoff Quanta 3"
                    ],
                    "fields": {
                        "holdoff_quanta_4": {
                            "name": "HOLDOFF_QUANTA_4",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_4": {
                    "name": "PFC_HOLDOFF_QUANTA_4",
                    "addressOffset": "0x2b4",
                    "desc": [
                        "Holdoff Quanta 4"
                    ],
                    "fields": {
                        "holdoff_quanta_5": {
                            "name": "HOLDOFF_QUANTA_5",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_5": {
                    "name": "PFC_HOLDOFF_QUANTA_5",
                    "addressOffset": "0x2b8",
                    "desc": [
                        "Holdoff Quanta 5"
                    ],
                    "fields": {
                        "holdoff_quanta_6": {
                            "name": "HOLDOFF_QUANTA_6",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_6": {
                    "name": "PFC_HOLDOFF_QUANTA_6",
                    "addressOffset": "0x2bc",
                    "desc": [
                        "Holdoff Quanta 6"
                    ],
                    "fields": {
                        "holdoff_quanta_7": {
                            "name": "HOLDOFF_QUANTA_7",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "pfc_holdoff_quanta_7": {
                    "name": "PFC_HOLDOFF_QUANTA_7",
                    "addressOffset": "0x2c0",
                    "desc": [
                        "Holdoff Quanta 7"
                    ],
                    "fields": {
                        "holdoff_quanta_8": {
                            "name": "HOLDOFF_QUANTA_8",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value specifying the holdoff time before XOFF is retransmitted"
                            ],
                            "reset": "0xFFFF"
                        }
                    }
                },
                "rx_pld_conf": {
                    "name": "RX_PLD_CONF",
                    "addressOffset": "0x14",
                    "desc": [
                        "Configuration bits for the RX PLD block"
                    ],
                    "fields": {
                        "rxpldmux_sel": {
                            "name": "RXPLDMUX_SEL",
                            "bitOffset": 8,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "Select the input to the RX PLD Interface ",
                                "0:RX MAC ",
                                "1:RX PCS ",
                                "2:RX FEC ",
                                "3:RX PMA ",
                                "4:TX FEC ",
                                "5:TX PCS ",
                                "6:TX MAC ",
                                "7:TX EMIB Interface"
                            ],
                            "reset": "0b0"
                        },
                        "rxpldmux_pcs66": {
                            "name": "RXPLDMUX_PCS66",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Select RXPLD PCS66 input mode ",
                                "0:Use RX PCS data ",
                                "1:Use TX PCS data"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "rxpldmux_pcs": {
                            "name": "RXPLDMUX_PCS",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Select RXPLD PCS input mode ",
                                "0:Use RX PCS data ",
                                "1:Use TX MAC data"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "rx_ehip_mode": {
                            "name": "RX_EHIP_MODE",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "Specify the internal EHIP Interface to which EMIB Data will be routed ",
                                "This applies to the EMIB Avalon ST signal routing ",
                                "3h0: MAC ",
                                "3h1: MAC/PTP ",
                                "3h2: PCS (MII) ",
                                "3h3: OTN ",
                                "3h4: PCS66 ",
                                "3h5: PMA_DIR ",
                                "3h7: FEC_DIR"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "max_rx_size_config": {
                    "name": "MAX_RX_SIZE_CONFIG",
                    "addressOffset": "0x21c",
                    "desc": [
                        "Max RX Frame Size ",
                        "16b value that sets the maximum RX frame size. When RX frames exceed this size, the CNTR_RX_OVERSIZE statistic is incremented, and the appropriate rx_error bit is asserted with EOP on the frame to indicate the frame is oversize"
                    ],
                    "fields": {
                        "max_rx": {
                            "name": "MAX_RX",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "MAX_RX_SIZE_CONFIG ",
                                "Sets the maximum size of a RX frame in octets before it will be counted as an oversize frame"
                            ],
                            "reset": 1518
                        }
                    }
                },
                "mac_crc_config": {
                    "name": "MAC_CRC_CONFIG",
                    "addressOffset": "0x220",
                    "desc": [
                        "RX CRC Forwarding ",
                        "Controls whether EHIP forwards FCS with each frame, or removes it"
                    ],
                    "fields": {
                        "forward_rx_crc": {
                            "name": "FORWARD_RX_CRC",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Forward RX CRC values ",
                                "0:Remove CRC from RX frames ",
                                "1:Leave CRC in RX frames and forward it to RX Client logic"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "rxmac_control": {
                    "name": "RXMAC_CONTROL",
                    "addressOffset": "0x224",
                    "desc": [
                        "RX MAC Configuration ",
                        "Configuration register for RX MAC features"
                    ],
                    "fields": {
                        "remove_rx_pad": {
                            "name": "REMOVE_RX_PAD",
                            "bitOffset": 8,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Remove PADs from padded frames ",
                                "0:Padded frames are not altered ",
                                "1:Pads are removed from padded frames"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "enforce_max_rx": {
                            "name": "ENFORCE_MAX_RX",
                            "bitOffset": 7,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enforce Maximum frame size on RX packets ",
                                "0:Ovesized frames are not altered ",
                                "1:Frames are ended with FCS error if they exceed the programmed rx max frame size"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "en_strict_preamble": {
                            "name": "EN_STRICT_PREAMBLE",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Strict Preamble Checking ",
                                "0:Custom Preamble bytes are allowed between SOP and SFD ",
                                "1:Packets will be dropped if they do not have standard preamble bytes"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "en_check_sfd": {
                            "name": "EN_CHECK_SFD",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Start Frame Delimiter Checking ",
                                "0:Custom SFD bytes are allowed in preambles ",
                                "1:Packets will be dropped if they do not have a standard Start Frame Delimiter"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "disable_rxvlan": {
                            "name": "DISABLE_RXVLAN",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Disable RX VLAN detection ",
                                "0:EHIP detects VLAN frames, counts them separately in stats, and marks them at EOP ",
                                "1:EHIP ignores VLAN in RX data, and treats VLAN headers as payload bytes"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "en_plen": {
                            "name": "EN_PLEN",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Packet Length Checking ",
                                "1:EHIP will assert the length error bit of rx_error at EOP for Frames where the Type/Length field is a length, and the length advertized is greater than the length of the frame that was received"
                            ],
                            "reset": "0b1",
                            "ftype": "boolean"
                        }
                    }
                },
                "rxmac_ehip_cfg": {
                    "name": "RXMAC_EHIP_CFG",
                    "addressOffset": "0x228",
                    "desc": [
                        "EHIP RX MAC Feature Configuration ",
                        "Configures EHIP specific RX MAC features"
                    ],
                    "fields": {
                        "mac_lb_mode": {
                            "name": "MAC_LB_MODE",
                            "bitOffset": 2,
                            "bitWidth": 2,
                            "access": "rw",
                            "desc": [
                                "Enable MAC Loopback Mode ",
                                "0:Normal operation PCS RX to MAC RX(default) ",
                                "1:MAC Tx to MAC Rx ",
                                "2: AIB Tx to MAC Rx"
                            ],
                            "reset": 0
                        },
                        "rxcrc_covers_preamble": {
                            "name": "RXCRC_COVERS_PREAMBLE",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable CRC over preamble ",
                                "0:RX CRC calculated over Ethernet Frame (default) ",
                                "1:RX CRC calculated over frame plus preamble"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "en_pp_0": {
                            "name": "EN_PP_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable RX Preamble Passthrough ",
                                "1:Preable-passthrough mode enabled - the preamble received with each packet will be passed to the user ",
                                "0:RX preamble will not be passed to the user"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "cntr_rx_config": {
                    "name": "CNTR_RX_CONFIG",
                    "addressOffset": "0x278",
                    "desc": [
                        "Configure RX Statistics Counters ",
                        "Configuration bits to control the behavior of the RX Statistics counters"
                    ],
                    "fields": {
                        "rst_rx_stats": {
                            "name": "RST_RX_STATS",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Reset RX Statistics ",
                                "1:Reset all RX Stats counters"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "rst_rx_parity": {
                            "name": "RST_RX_PARITY",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Reset the RX Statistics Parity Error bit ",
                                "1:Reset the parity error bit in CNTR_RX_STATUS"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "ber_count": {
                    "name": "BER_COUNT",
                    "addressOffset": "0x90",
                    "desc": [
                        "BER Count"
                    ],
                    "fields": {
                        "count_23": {
                            "name": "COUNT_23",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-32 bit counter increments each time when it detects an invalid sync header",
                                "-Rolls over when maximum count is reached",
                                "-Clears when the channel is reset",
                                "-Can be captured using snapshot",
                                ""
                            ]
                        }
                    }
                },
                "cntr_rx_fragments_lo": {
                    "name": "CNTR_RX_FRAGMENTS_LO",
                    "addressOffset": "0x934",
                    "desc": [
                        "Frames less than 64 bytes with CRC error ",
                        "Number of frames with less than 64 bytes and a CRC error ",
                        "This CSR can be mapped to etherStatsFragments"
                    ],
                    "fields": {
                        "cntr_rx_fragments_lo": {
                            "name": "CNTR_RX_FRAGMENTS_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_jabbers_lo": {
                    "name": "CNTR_RX_JABBERS_LO",
                    "addressOffset": "0x93c",
                    "desc": [
                        "Oversized frames with CRC error ",
                        "Number of frames with more octets than the programmed maximum and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_jabbers_lo": {
                            "name": "CNTR_RX_JABBERS_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_fcs_err_okpkt_lo": {
                    "name": "CNTR_RX_FCS_ERR_OKPKT_LO",
                    "addressOffset": "0x94c",
                    "desc": [
                        "Frames of any size with a CRC error on OK packet ",
                        "Number of frames of any size with a CRC error on OK packet"
                    ],
                    "fields": {
                        "cntr_rx_fcs_err_okpkt_lo": {
                            "name": "CNTR_RX_FCS_ERR_OKPKT_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_mcast_data_err_lo": {
                    "name": "CNTR_RX_MCAST_DATA_ERR_LO",
                    "addressOffset": "0x954",
                    "desc": [
                        "Multicast data frames with CRC error ",
                        "Number of data frames -not a control type- with a multicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_mcast_data_err_lo": {
                            "name": "CNTR_RX_MCAST_DATA_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_bcast_data_err_lo": {
                    "name": "CNTR_RX_BCAST_DATA_ERR_LO",
                    "addressOffset": "0x95c",
                    "desc": [
                        "Broadcast data frames with CRC error ",
                        "Number of data frames with a broadcast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_bcast_data_err_lo": {
                            "name": "CNTR_RX_BCAST_DATA_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_ucast_data_err_lo": {
                    "name": "CNTR_RX_UCAST_DATA_ERR_LO",
                    "addressOffset": "0x964",
                    "desc": [
                        "Unicast data frames with CRC error ",
                        "Number of data frames with a unicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_ucast_data_err_lo": {
                            "name": "CNTR_RX_UCAST_DATA_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_mcast_ctrl_err_lo": {
                    "name": "CNTR_RX_MCAST_CTRL_ERR_LO",
                    "addressOffset": "0x96c",
                    "desc": [
                        "Multicast control frames with CRC error ",
                        "Number of control frames with a multicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_mcast_ctrl_err_lo": {
                            "name": "CNTR_RX_MCAST_CTRL_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_bcast_ctrl_err_lo": {
                    "name": "CNTR_RX_BCAST_CTRL_ERR_LO",
                    "addressOffset": "0x974",
                    "desc": [
                        "Broadcast control frames with CRC error ",
                        "Number of control frames with a broadcast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_bcast_ctrl_err_lo": {
                            "name": "CNTR_RX_BCAST_CTRL_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_ucast_ctrl_err_lo": {
                    "name": "CNTR_RX_UCAST_CTRL_ERR_LO",
                    "addressOffset": "0x97c",
                    "desc": [
                        "Unicast control frames with CRC error ",
                        "Number of control frames with a unicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_ucast_ctrl_err_lo": {
                            "name": "CNTR_RX_UCAST_CTRL_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_pause_err_lo": {
                    "name": "CNTR_RX_PAUSE_ERR_LO",
                    "addressOffset": "0x984",
                    "desc": [
                        "Pause frame with CRC error ",
                        "Number of PAUSE (SFC) frames with a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_pause_err_lo": {
                            "name": "CNTR_RX_PAUSE_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_64b_lo": {
                    "name": "CNTR_RX_64B_LO",
                    "addressOffset": "0x98c",
                    "desc": [
                        "64 byte frames ",
                        "Number of frames of any type with a frame length of 64 bytes"
                    ],
                    "fields": {
                        "cntr_rx_64b_lo": {
                            "name": "CNTR_RX_64B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_64b_hi": {
                    "name": "CNTR_RX_64B_HI",
                    "addressOffset": "0x990",
                    "desc": [
                        "64 byte frames ",
                        "Number of frames of any type with a frame length of 64 bytes"
                    ],
                    "fields": {
                        "cntr_rx_64b_hi": {
                            "name": "CNTR_RX_64B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_65to127b_lo": {
                    "name": "CNTR_RX_65TO127B_LO",
                    "addressOffset": "0x994",
                    "desc": [
                        "65 to 127 byte frames ",
                        "Number of frames of any type with a frame length of 65 to 127 bytes"
                    ],
                    "fields": {
                        "cntr_rx_65to127b_lo": {
                            "name": "CNTR_RX_65TO127B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_65to127b_hi": {
                    "name": "CNTR_RX_65TO127B_HI",
                    "addressOffset": "0x998",
                    "desc": [
                        "65 to 127 byte frames ",
                        "Number of frames of any type with a frame length of 65 to 127 bytes"
                    ],
                    "fields": {
                        "cntr_rx_65to127b_hi": {
                            "name": "CNTR_RX_65TO127B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_128to255b_lo": {
                    "name": "CNTR_RX_128TO255B_LO",
                    "addressOffset": "0x99c",
                    "desc": [
                        "128 to 257 byte frames ",
                        "Number of frames of any type with a frame length of 128 to 257 bytes"
                    ],
                    "fields": {
                        "cntr_rx_128to255b_lo": {
                            "name": "CNTR_RX_128TO255B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_128to255b_hi": {
                    "name": "CNTR_RX_128TO255B_HI",
                    "addressOffset": "0x9a0",
                    "desc": [
                        "128 to 257 byte frames ",
                        "Number of frames of any type with a frame length of 128 to 257 bytes"
                    ],
                    "fields": {
                        "cntr_rx_128to255b_hi": {
                            "name": "CNTR_RX_128TO255B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_256to511b_lo": {
                    "name": "CNTR_RX_256TO511B_LO",
                    "addressOffset": "0x9a4",
                    "desc": [
                        "256 to 511 byte frames ",
                        "Number of frames of any type with a frame length of 258 to 511 bytes"
                    ],
                    "fields": {
                        "cntr_rx_256to511b_lo": {
                            "name": "CNTR_RX_256TO511B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_256to511b_hi": {
                    "name": "CNTR_RX_256TO511B_HI",
                    "addressOffset": "0x9a8",
                    "desc": [
                        "256 to 511 byte frames ",
                        "Number of frames of any type with a frame length of 258 to 511 bytes"
                    ],
                    "fields": {
                        "cntr_rx_256to511b_hi": {
                            "name": "CNTR_RX_256TO511B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_512to1023b_lo": {
                    "name": "CNTR_RX_512TO1023B_LO",
                    "addressOffset": "0x9ac",
                    "desc": [
                        "512 to 1023 byte frames ",
                        "Number of frames of any type with a frame length of 512 to 1023 bytes"
                    ],
                    "fields": {
                        "cntr_rx_512to1023b_lo": {
                            "name": "CNTR_RX_512TO1023B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_512to1023b_hi": {
                    "name": "CNTR_RX_512TO1023B_HI",
                    "addressOffset": "0x9b0",
                    "desc": [
                        "512 to 1023 byte frames ",
                        "Number of frames of any type with a frame length of 512 to 1023 bytes"
                    ],
                    "fields": {
                        "cntr_rx_512to1023b_hi": {
                            "name": "CNTR_RX_512TO1023B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_1024to1518b_lo": {
                    "name": "CNTR_RX_1024TO1518B_LO",
                    "addressOffset": "0x9b4",
                    "desc": [
                        "1024 to 1518 byte frames ",
                        "Number of frames of any type with a frame length of 1024 to 1518 bytes"
                    ],
                    "fields": {
                        "cntr_rx_1024to1518b_lo": {
                            "name": "CNTR_RX_1024TO1518B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_1024to1518b_hi": {
                    "name": "CNTR_RX_1024TO1518B_HI",
                    "addressOffset": "0x9b8",
                    "desc": [
                        "1024 to 1518 byte frames ",
                        "Number of frames of any type with a frame length of 1024 to 1518 bytes"
                    ],
                    "fields": {
                        "cntr_rx_1024to1518b_hi": {
                            "name": "CNTR_RX_1024TO1518B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_1519tomaxb_lo": {
                    "name": "CNTR_RX_1519TOMAXB_LO",
                    "addressOffset": "0x9bc",
                    "desc": [
                        "1519 to max size frames ",
                        "Number of frames of any type with a frame length of 1519 to the programmed maximum size in bytes"
                    ],
                    "fields": {
                        "cntr_rx_1519tomaxb_lo": {
                            "name": "CNTR_RX_1519TOMAXB_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_1519tomaxb_hi": {
                    "name": "CNTR_RX_1519TOMAXB_HI",
                    "addressOffset": "0x9c0",
                    "desc": [
                        "1519 to max size frames ",
                        "Number of frames of any type with a frame length of 1519 to the programmed maximum size in bytes"
                    ],
                    "fields": {
                        "cntr_rx_1519tomaxb_hi": {
                            "name": "CNTR_RX_1519TOMAXB_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_oversize_lo": {
                    "name": "CNTR_RX_OVERSIZE_LO",
                    "addressOffset": "0x9c4",
                    "desc": [
                        "Oversize frames ",
                        "Number of frames of any type with a frame length greater than the programmed maximum size in bytes"
                    ],
                    "fields": {
                        "cntr_rx_oversize_lo": {
                            "name": "CNTR_RX_OVERSIZE_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_mcast_data_ok_lo": {
                    "name": "CNTR_RX_MCAST_DATA_OK_LO",
                    "addressOffset": "0x9cc",
                    "desc": [
                        "Multicast data frames without error ",
                        "Number of data frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_mcast_data_ok_lo": {
                            "name": "CNTR_RX_MCAST_DATA_OK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_mcast_data_ok_hi": {
                    "name": "CNTR_RX_MCAST_DATA_OK_HI",
                    "addressOffset": "0x9d0",
                    "desc": [
                        "Multicast data frames without error ",
                        "Number of data frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_mcast_data_ok_hi": {
                            "name": "CNTR_RX_MCAST_DATA_OK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_bcast_data_ok_lo": {
                    "name": "CNTR_RX_BCAST_DATA_OK_LO",
                    "addressOffset": "0x9d4",
                    "desc": [
                        "Broadcast data frames without error ",
                        "Number of data frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_bcast_data_ok_lo": {
                            "name": "CNTR_RX_BCAST_DATA_OK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_bcast_data_ok_hi": {
                    "name": "CNTR_RX_BCAST_DATA_OK_HI",
                    "addressOffset": "0x9d8",
                    "desc": [
                        "Broadcast data frames without error ",
                        "Number of data frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_bcast_data_ok_hi": {
                            "name": "CNTR_RX_BCAST_DATA_OK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_ucast_data_ok_lo": {
                    "name": "CNTR_RX_UCAST_DATA_OK_LO",
                    "addressOffset": "0x9dc",
                    "desc": [
                        "Unicast data frames without error ",
                        "Number of data frames with a unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_ucast_data_ok_lo": {
                            "name": "CNTR_RX_UCAST_DATA_OK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_ucast_data_ok_hi": {
                    "name": "CNTR_RX_UCAST_DATA_OK_HI",
                    "addressOffset": "0x9e0",
                    "desc": [
                        "Unicast data frames without error ",
                        "Number of data frames with a unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_ucast_data_ok_hi": {
                            "name": "CNTR_RX_UCAST_DATA_OK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_mcast_ctrl_lo": {
                    "name": "CNTR_RX_MCAST_CTRL_LO",
                    "addressOffset": "0x9e4",
                    "desc": [
                        "Multicast control frames without error ",
                        "Number of control frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_mcast_ctrl_lo": {
                            "name": "CNTR_RX_MCAST_CTRL_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_mcast_ctrl_hi": {
                    "name": "CNTR_RX_MCAST_CTRL_HI",
                    "addressOffset": "0x9e8",
                    "desc": [
                        "Multicast control frames without error ",
                        "Number of control frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_mcast_ctrl_hi": {
                            "name": "CNTR_RX_MCAST_CTRL_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_bcast_ctrl_lo": {
                    "name": "CNTR_RX_BCAST_CTRL_LO",
                    "addressOffset": "0x9ec",
                    "desc": [
                        "Broadcast control frames without error ",
                        "Number of control frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_bcast_ctrl_lo": {
                            "name": "CNTR_RX_BCAST_CTRL_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_bcast_ctrl_hi": {
                    "name": "CNTR_RX_BCAST_CTRL_HI",
                    "addressOffset": "0x9f0",
                    "desc": [
                        "Broadcast control frames without error ",
                        "Number of control frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_bcast_ctrl_hi": {
                            "name": "CNTR_RX_BCAST_CTRL_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_ucast_ctrl_lo": {
                    "name": "CNTR_RX_UCAST_CTRL_LO",
                    "addressOffset": "0x9f4",
                    "desc": [
                        "Unicast control frames without error ",
                        "Number of control frames with unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_ucast_ctrl_lo": {
                            "name": "CNTR_RX_UCAST_CTRL_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_ucast_ctrl_hi": {
                    "name": "CNTR_RX_UCAST_CTRL_HI",
                    "addressOffset": "0x9f8",
                    "desc": [
                        "Unicast control frames without error ",
                        "Number of control frames with unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_rx_ucast_ctrl_hi": {
                            "name": "CNTR_RX_UCAST_CTRL_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_pause_lo": {
                    "name": "CNTR_RX_PAUSE_LO",
                    "addressOffset": "0x9fc",
                    "desc": [
                        "Pause frames without error ",
                        "Number of PAUSE (SFC) frames without error"
                    ],
                    "fields": {
                        "cntr_rx_pause_lo": {
                            "name": "CNTR_RX_PAUSE_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_pause_hi": {
                    "name": "CNTR_RX_PAUSE_HI",
                    "addressOffset": "0xa00",
                    "desc": [
                        "Pause frames without error ",
                        "Number of PAUSE (SFC) frames without error"
                    ],
                    "fields": {
                        "cntr_rx_pause_hi": {
                            "name": "CNTR_RX_PAUSE_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_runt_lo": {
                    "name": "CNTR_RX_RUNT_LO",
                    "addressOffset": "0xa04",
                    "desc": [
                        "Frames with less than 64 bytes and a CRC error ",
                        "Frames with less than 64 bytes and a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_runt_lo": {
                            "name": "CNTR_RX_RUNT_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_st_lo": {
                    "name": "CNTR_RX_ST_LO",
                    "addressOffset": "0xa0c",
                    "desc": [
                        "Number of frame starts ",
                        "Number of frame starts"
                    ],
                    "fields": {
                        "cntr_rx_st_lo": {
                            "name": "CNTR_RX_ST_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_st_hi": {
                    "name": "CNTR_RX_ST_HI",
                    "addressOffset": "0xa10",
                    "desc": [
                        "Number of frame starts ",
                        "Number of frame starts"
                    ],
                    "fields": {
                        "cntr_rx_st_hi": {
                            "name": "CNTR_RX_ST_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_lenerr_lo": {
                    "name": "CNTR_RX_LENERR_LO",
                    "addressOffset": "0xa14",
                    "desc": [
                        "Number of length error ",
                        "Number of length error"
                    ],
                    "fields": {
                        "cntr_rx_lenerr_lo": {
                            "name": "CNTR_RX_LENERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_pfc_err_lo": {
                    "name": "CNTR_RX_PFC_ERR_LO",
                    "addressOffset": "0xa1c",
                    "desc": [
                        "PFC frame with CRC error ",
                        "Number of PFC frames with a CRC error"
                    ],
                    "fields": {
                        "cntr_rx_pfc_err_lo": {
                            "name": "CNTR_RX_PFC_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_pfc_lo": {
                    "name": "CNTR_RX_PFC_LO",
                    "addressOffset": "0xa24",
                    "desc": [
                        "PFC frames without error ",
                        "Number of PFC frames without error"
                    ],
                    "fields": {
                        "cntr_rx_pfc_lo": {
                            "name": "CNTR_RX_PFC_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_pfc_hi": {
                    "name": "CNTR_RX_PFC_HI",
                    "addressOffset": "0xa28",
                    "desc": [
                        "PFC frames without error ",
                        "Number of PFC frames without error"
                    ],
                    "fields": {
                        "cntr_rx_pfc_hi": {
                            "name": "CNTR_RX_PFC_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_payloadoctetsok_lo": {
                    "name": "CNTR_RX_PAYLOADOCTETSOK_LO",
                    "addressOffset": "0xa2c",
                    "desc": [
                        "Data and padding octets with no errors of any type, including length error, undersize, oversize, malformed, or bad length/type field ",
                        "Data and padding octets with no errors of any type, including length error, undersize, oversize, malformed, or bad length/type field"
                    ],
                    "fields": {
                        "cntr_rx_payloadoctetsok_lo": {
                            "name": "CNTR_RX_PAYLOADOCTETSOK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_payloadoctetsok_hi": {
                    "name": "CNTR_RX_PAYLOADOCTETSOK_HI",
                    "addressOffset": "0xa30",
                    "desc": [
                        "Data and padding octets with no errors of any type, including length error, undersize, oversize, malformed, or bad length/type field ",
                        "Data and padding octets with no errors of any type, including length error, undersize, oversize, malformed, or bad length/type field"
                    ],
                    "fields": {
                        "cntr_rx_payloadoctetsok_hi": {
                            "name": "CNTR_RX_PAYLOADOCTETSOK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_octetsok_lo": {
                    "name": "CNTR_RX_OCTETSOK_LO",
                    "addressOffset": "0xa34",
                    "desc": [
                        "Counts every octet in every packet with or without error (including CRC error) ",
                        "Counts every octet in every packet with or without error (including CRC error)"
                    ],
                    "fields": {
                        "cntr_rx_octetsok_lo": {
                            "name": "CNTR_RX_OCTETSOK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_octetsok_hi": {
                    "name": "CNTR_RX_OCTETSOK_HI",
                    "addressOffset": "0xa38",
                    "desc": [
                        "Counts every octet in every packet with or without error (including CRC error) ",
                        "Counts every octet in every packet with or without error (including CRC error)"
                    ],
                    "fields": {
                        "cntr_rx_octetsok_hi": {
                            "name": "CNTR_RX_OCTETSOK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_malformed_lo": {
                    "name": "CNTR_RX_MALFORMED_LO",
                    "addressOffset": "0xa3c",
                    "desc": [
                        "Malformed packets received ",
                        "Malformed packets contain a control character other than error and do not end on a term. For the Ethernet Hard IP lane, frames with a start block that does not contain at least 5 bytes of IPG from the preceding frame are considered invalid. Note that the RX client interface indicates a 3rd type of malformed frame, which is not counted by the malformed statistic packets at the RX Client interface of the RX MAC can also be malformed if they contain insufficient bytes to include a preamble, header, and CRC."
                    ],
                    "fields": {
                        "cntr_rx_malformed_lo": {
                            "name": "CNTR_RX_MALFORMED_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_dropped_lo": {
                    "name": "CNTR_RX_DROPPED_LO",
                    "addressOffset": "0xa44",
                    "desc": [
                        "Packets dropped due to error ",
                        "Packets dropped due to error"
                    ],
                    "fields": {
                        "cntr_rx_dropped_lo": {
                            "name": "CNTR_RX_DROPPED_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_badlt_lo": {
                    "name": "CNTR_RX_BADLT_LO",
                    "addressOffset": "0xa4c",
                    "desc": [
                        "Frames with an L/T field that is neither a length nor an ethertype ",
                        "Frames with an L/T field that is neither a length nor an ethertype"
                    ],
                    "fields": {
                        "cntr_rx_badlt_lo": {
                            "name": "CNTR_RX_BADLT_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_rx_total_ptp_ts": {
                    "name": "CNTR_RX_TOTAL_PTP_TS",
                    "addressOffset": "0xa54",
                    "desc": [
                        "Lower 4 bytes of the Destination address for RX Pause Frames ",
                        "Sets the lower 4 bytes of the 6 byte Destination MAC Address that must be found in incoming SFC and PFC frames for them to be processed"
                    ],
                    "fields": {
                        "cntr_rx_total_ptp_ts": {
                            "name": "CNTR_RX_TOTAL_PTP_TS",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "tx_pld_conf": {
                    "name": "TX_PLD_CONF",
                    "addressOffset": "0x10",
                    "desc": [
                        "Defines the configuration fields for TX PLD"
                    ],
                    "fields": {
                        "tx_ehip_mode": {
                            "name": "TX_EHIP_MODE",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "Specify the Internal EHIP Interface to which EMIB Data will be routed ",
                                "This applies to the EMIB Avalon ST signal routing ",
                                "3h0: MAC ",
                                "3h1: MAC/PTP ",
                                "3h2: PCS (MII) ",
                                "3h3: OTN ",
                                "3h4: PCS66 ",
                                "3h5: PMA_DIR ",
                                "3h6: PTP_ONLY ",
                                "3h7: FEC_DIR"
                            ],
                            "reset": "0b0"
                        }
                    }
                },
                "ipg_col_rem": {
                    "name": "IPG_COL_REM",
                    "addressOffset": "0x204",
                    "desc": [
                        "IPG Words to remove per Alignment Marker Period"
                    ],
                    "fields": {
                        "ipg_col_rem": {
                            "name": "IPG_COL_REM",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value that sets the number of idle words to remove from IPG in an AM period to make space for alignment markers. ",
                                "This parameter can also be used to scale IPG in PPM increments for rate balance."
                            ],
                            "reset": 20
                        }
                    }
                },
                "max_tx_size_config": {
                    "name": "MAX_TX_SIZE_CONFIG",
                    "addressOffset": "0x208",
                    "desc": [
                        "Max TX Frame Size"
                    ],
                    "fields": {
                        "max_tx": {
                            "name": "MAX_TX",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "",
                                "16b value that sets the maximum TX frame size. When TX frames exceed this size, the CNTR_TX_OVERSIZE statistic is incremented"
                            ],
                            "reset": 1518
                        }
                    }
                },
                "txmac_control": {
                    "name": "TXMAC_CONTROL",
                    "addressOffset": "0x20c",
                    "desc": [
                        "TX MAC Configuration ",
                        "Configuration register for TX MAC features"
                    ],
                    "fields": {
                        "en_saddr_insert": {
                            "name": "EN_SADDR_INSERT",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Source Address Insertion ",
                                "0:Client provides Source Address ",
                                "1:TX MAC inserts source addresses stored in CSRs"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "disable_txmac": {
                            "name": "DISABLE_TXMAC",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Disable TX MAC ",
                                "0:TX MAC operates normally ",
                                "1:TX MAX is disabled. It behaves as though it has been PAUSED by the remote link until disable is turned off."
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "disable_txvlan": {
                            "name": "DISABLE_TXVLAN",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Disable VLAN detection for TX Stats ",
                                "0:TX frames with VLAN headers will be counted as VLAN frames in the TX stats ",
                                "1:VLAN headers will not be considered by the TX stats block"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "txmac_ehip_cfg": {
                    "name": "TXMAC_EHIP_CFG",
                    "addressOffset": "0x210",
                    "desc": [
                        "EHIP TX MAC Feature Configuration ",
                        "Configures EHIP specific TX MAC features"
                    ],
                    "fields": {
                        "en_pp_1": {
                            "name": "EN_PP_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable TX Preamble Passthrough ",
                                "1:Preable-passthrough mode enabled - bytes 1 to 7 of each SOP word will be used as preamble bytes at the start of the Ethernet packet ",
                                "0:A standard Ethernet preamble will be used for TX packets"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "ipg": {
                            "name": "IPG",
                            "bitOffset": 1,
                            "bitWidth": 2,
                            "access": "rw",
                            "desc": [
                                "DIC Average Min IPG ",
                                "Sets the average minimum IPG enforced by the Deficit Idle Counter ",
                                "2'd0: 12 bytes (default) ",
                                "2'd1:10 bytes ",
                                "2'd2:8 bytes ",
                                "2'd3:1 byte"
                            ],
                            "reset": 0
                        },
                        "tx_plen_en": {
                            "name": "TX_PLEN_EN",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable TX Packet Length Check ",
                                "1: TX stats checks TX packet length error ",
                                "0:TX stats does not check TX packet length error"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "txcrc_covers_preamble": {
                            "name": "TXCRC_COVERS_PREAMBLE",
                            "bitOffset": 9,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable CRC Over Preamble ",
                                "0:TX CRC calculated over Ethernet Frame (default) ",
                                "1:TX CRC calculated over frame plus preamble"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "txmac_saddrl": {
                    "name": "TXMAC_SADDRL",
                    "addressOffset": "0x214",
                    "desc": [
                        "Source Address Insertion Source Address Lower Bytes"
                    ],
                    "fields": {
                        "saddrl_1": {
                            "name": "SADDRL_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "Lower 32 bits of the TX MAC Source Address, which is used when Source Address Insertion is enabled"
                            ],
                            "reset": "0x22334455"
                        }
                    }
                },
                "txmac_saddrh": {
                    "name": "TXMAC_SADDRH",
                    "addressOffset": "0x218",
                    "desc": [
                        "Source Address Insertion Source Address Upper Bytes"
                    ],
                    "fields": {
                        "saddrh_1": {
                            "name": "SADDRH_1",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "rw",
                            "desc": [
                                "Upper 16 bits of the TX MAC Source Address, which is used when Source Address Insertion is enabled"
                            ],
                            "reset": "0x0011"
                        }
                    }
                },
                "cntr_tx_config": {
                    "name": "CNTR_TX_CONFIG",
                    "addressOffset": "0x274",
                    "desc": [
                        "Configure TX Statistics Counters ",
                        "Configuration bits to control the behavior of the TX Statistics counters"
                    ],
                    "fields": {
                        "rst_tx_stats": {
                            "name": "RST_TX_STATS",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Reset TX Statistics ",
                                "1:Reset all TX Stats counters"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "rst_tx_parity": {
                            "name": "RST_TX_PARITY",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Reset the TX Statistics Parity Error bit ",
                                "1:Reset the parity error bit in CNTR_TX_STATUS"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "cntr_tx_fragments_lo": {
                    "name": "CNTR_TX_FRAGMENTS_LO",
                    "addressOffset": "0x800",
                    "desc": [
                        "Frames less than 64 bytes with CRC error ",
                        "Number of frames with less than 64 bytes and a CRC error ",
                        "This CSR can be mapped to etherStatsFragments"
                    ],
                    "fields": {
                        "cntr_tx_fragments_lo": {
                            "name": "CNTR_TX_FRAGMENTS_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_jabbers_lo": {
                    "name": "CNTR_TX_JABBERS_LO",
                    "addressOffset": "0x808",
                    "desc": [
                        "Oversized frames with CRC error ",
                        "Number of frames with more octets than the programmed maximum and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_jabbers_lo": {
                            "name": "CNTR_TX_JABBERS_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_fcs_err_okpkt_lo": {
                    "name": "CNTR_TX_FCS_ERR_OKPKT_LO",
                    "addressOffset": "0x818",
                    "desc": [
                        "Frames of any size with a CRC error on OK packet ",
                        "Number of frames of any size with a CRC error on OK packet"
                    ],
                    "fields": {
                        "cntr_tx_fcs_err_okpkt_lo": {
                            "name": "CNTR_TX_FCS_ERR_OKPKT_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_mcast_data_err_lo": {
                    "name": "CNTR_TX_MCAST_DATA_ERR_LO",
                    "addressOffset": "0x820",
                    "desc": [
                        "Multicast data frames with CRC error ",
                        "Number of data frames -not a control type- with a multicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_mcast_data_err_lo": {
                            "name": "CNTR_TX_MCAST_DATA_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_bcast_data_err_lo": {
                    "name": "CNTR_TX_BCAST_DATA_ERR_LO",
                    "addressOffset": "0x828",
                    "desc": [
                        "Broadcast data frames with CRC error ",
                        "Number of data frames with a broadcast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_bcast_data_err_lo": {
                            "name": "CNTR_TX_BCAST_DATA_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_ucast_data_err_lo": {
                    "name": "CNTR_TX_UCAST_DATA_ERR_LO",
                    "addressOffset": "0x830",
                    "desc": [
                        "Unicast data frames with CRC error ",
                        "Number of data frames with a unicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_ucast_data_err_lo": {
                            "name": "CNTR_TX_UCAST_DATA_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_mcast_ctrl_err_lo": {
                    "name": "CNTR_TX_MCAST_CTRL_ERR_LO",
                    "addressOffset": "0x838",
                    "desc": [
                        "Multicast control frames with CRC error ",
                        "Number of control frames with a multicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_mcast_ctrl_err_lo": {
                            "name": "CNTR_TX_MCAST_CTRL_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_bcast_ctrl_err_lo": {
                    "name": "CNTR_TX_BCAST_CTRL_ERR_LO",
                    "addressOffset": "0x840",
                    "desc": [
                        "Broadcast control frames with CRC error ",
                        "Number of control frames with a broadcast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_bcast_ctrl_err_lo": {
                            "name": "CNTR_TX_BCAST_CTRL_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_ucast_ctrl_err_lo": {
                    "name": "CNTR_TX_UCAST_CTRL_ERR_LO",
                    "addressOffset": "0x848",
                    "desc": [
                        "Unicast control frames with CRC error ",
                        "Number of control frames with a unicast destination address and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_ucast_ctrl_err_lo": {
                            "name": "CNTR_TX_UCAST_CTRL_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_pause_err_lo": {
                    "name": "CNTR_TX_PAUSE_ERR_LO",
                    "addressOffset": "0x850",
                    "desc": [
                        "Pause frame with CRC error ",
                        "Number of PAUSE (SFC) frames with a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_pause_err_lo": {
                            "name": "CNTR_TX_PAUSE_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_64b_lo": {
                    "name": "CNTR_TX_64B_LO",
                    "addressOffset": "0x858",
                    "desc": [
                        "64 byte frames ",
                        "Number of frames of any type with a frame length of 64 bytes"
                    ],
                    "fields": {
                        "cntr_tx_64b_lo": {
                            "name": "CNTR_TX_64B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_64b_hi": {
                    "name": "CNTR_TX_64B_HI",
                    "addressOffset": "0x85c",
                    "desc": [
                        "64 byte frames ",
                        "Number of frames of any type with a frame length of 64 bytes"
                    ],
                    "fields": {
                        "cntr_tx_64b_hi": {
                            "name": "CNTR_TX_64B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_65to127b_lo": {
                    "name": "CNTR_TX_65TO127B_LO",
                    "addressOffset": "0x860",
                    "desc": [
                        "65 to 127 byte frames ",
                        "Number of frames of any type with a frame length of 65 to 127 bytes"
                    ],
                    "fields": {
                        "cntr_tx_65to127b_lo": {
                            "name": "CNTR_TX_65TO127B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_65to127b_hi": {
                    "name": "CNTR_TX_65TO127B_HI",
                    "addressOffset": "0x864",
                    "desc": [
                        "65 to 127 byte frames ",
                        "Number of frames of any type with a frame length of 65 to 127 bytes"
                    ],
                    "fields": {
                        "cntr_tx_65to127b_hi": {
                            "name": "CNTR_TX_65TO127B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_128to255b_lo": {
                    "name": "CNTR_TX_128TO255B_LO",
                    "addressOffset": "0x868",
                    "desc": [
                        "128 to 257 byte frames ",
                        "Number of frames of any type with a frame length of 128 to 257 bytes"
                    ],
                    "fields": {
                        "cntr_tx_128to255b_lo": {
                            "name": "CNTR_TX_128TO255B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_128to255b_hi": {
                    "name": "CNTR_TX_128TO255B_HI",
                    "addressOffset": "0x86c",
                    "desc": [
                        "128 to 257 byte frames ",
                        "Number of frames of any type with a frame length of 128 to 257 bytes"
                    ],
                    "fields": {
                        "cntr_tx_128to255b_hi": {
                            "name": "CNTR_TX_128TO255B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_256to511b_lo": {
                    "name": "CNTR_TX_256TO511B_LO",
                    "addressOffset": "0x870",
                    "desc": [
                        "256 to 511 byte frames ",
                        "Number of frames of any type with a frame length of 258 to 511 bytes"
                    ],
                    "fields": {
                        "cntr_tx_256to511b_lo": {
                            "name": "CNTR_TX_256TO511B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_256to511b_hi": {
                    "name": "CNTR_TX_256TO511B_HI",
                    "addressOffset": "0x874",
                    "desc": [
                        "256 to 511 byte frames ",
                        "Number of frames of any type with a frame length of 258 to 511 bytes"
                    ],
                    "fields": {
                        "cntr_tx_256to511b_hi": {
                            "name": "CNTR_TX_256TO511B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_512to1023b_lo": {
                    "name": "CNTR_TX_512TO1023B_LO",
                    "addressOffset": "0x878",
                    "desc": [
                        "512 to 1023 byte frames ",
                        "Number of frames of any type with a frame length of 512 to 1023 bytes"
                    ],
                    "fields": {
                        "cntr_tx_512to1023b_lo": {
                            "name": "CNTR_TX_512TO1023B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_512to1023b_hi": {
                    "name": "CNTR_TX_512TO1023B_HI",
                    "addressOffset": "0x87c",
                    "desc": [
                        "512 to 1023 byte frames ",
                        "Number of frames of any type with a frame length of 512 to 1023 bytes"
                    ],
                    "fields": {
                        "cntr_tx_512to1023b_hi": {
                            "name": "CNTR_TX_512TO1023B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_1024to1518b_lo": {
                    "name": "CNTR_TX_1024TO1518B_LO",
                    "addressOffset": "0x880",
                    "desc": [
                        "1024 to 1518 byte frames ",
                        "Number of frames of any type with a frame length of 1024 to 1518 bytes"
                    ],
                    "fields": {
                        "cntr_tx_1024to1518b_lo": {
                            "name": "CNTR_TX_1024TO1518B_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_1024to1518b_hi": {
                    "name": "CNTR_TX_1024TO1518B_HI",
                    "addressOffset": "0x884",
                    "desc": [
                        "1024 to 1518 byte frames ",
                        "Number of frames of any type with a frame length of 1024 to 1518 bytes"
                    ],
                    "fields": {
                        "cntr_tx_1024to1518b_hi": {
                            "name": "CNTR_TX_1024TO1518B_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_1519tomaxb_lo": {
                    "name": "CNTR_TX_1519TOMAXB_LO",
                    "addressOffset": "0x888",
                    "desc": [
                        "1519 to max size frames ",
                        "Number of frames of any type with a frame length of 1519 to the programmed maximum size in bytes"
                    ],
                    "fields": {
                        "cntr_tx_1519tomaxb_lo": {
                            "name": "CNTR_TX_1519TOMAXB_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_1519tomaxb_hi": {
                    "name": "CNTR_TX_1519TOMAXB_HI",
                    "addressOffset": "0x88c",
                    "desc": [
                        "1519 to max size frames ",
                        "Number of frames of any type with a frame length of 1519 to the programmed maximum size in bytes"
                    ],
                    "fields": {
                        "cntr_tx_1519tomaxb_hi": {
                            "name": "CNTR_TX_1519TOMAXB_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_oversize_lo": {
                    "name": "CNTR_TX_OVERSIZE_LO",
                    "addressOffset": "0x890",
                    "desc": [
                        "Oversize frames ",
                        "Number of frames of any type with a frame length greater than the programmed maximum size in bytes"
                    ],
                    "fields": {
                        "cntr_tx_oversize_lo": {
                            "name": "CNTR_TX_OVERSIZE_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_mcast_data_ok_lo": {
                    "name": "CNTR_TX_MCAST_DATA_OK_LO",
                    "addressOffset": "0x898",
                    "desc": [
                        "Multicast data frames without error ",
                        "Number of data frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_mcast_data_ok_lo": {
                            "name": "CNTR_TX_MCAST_DATA_OK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_mcast_data_ok_hi": {
                    "name": "CNTR_TX_MCAST_DATA_OK_HI",
                    "addressOffset": "0x89c",
                    "desc": [
                        "Multicast data frames without error ",
                        "Number of data frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_mcast_data_ok_hi": {
                            "name": "CNTR_TX_MCAST_DATA_OK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_bcast_data_ok_lo": {
                    "name": "CNTR_TX_BCAST_DATA_OK_LO",
                    "addressOffset": "0x8a0",
                    "desc": [
                        "Broadcast data frames without error ",
                        "Number of data frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_bcast_data_ok_lo": {
                            "name": "CNTR_TX_BCAST_DATA_OK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_bcast_data_ok_hi": {
                    "name": "CNTR_TX_BCAST_DATA_OK_HI",
                    "addressOffset": "0x8a4",
                    "desc": [
                        "Broadcast data frames without error ",
                        "Number of data frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_bcast_data_ok_hi": {
                            "name": "CNTR_TX_BCAST_DATA_OK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_ucast_data_ok_lo": {
                    "name": "CNTR_TX_UCAST_DATA_OK_LO",
                    "addressOffset": "0x8a8",
                    "desc": [
                        "Unicast data frames without error ",
                        "Number of data frames with a unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_ucast_data_ok_lo": {
                            "name": "CNTR_TX_UCAST_DATA_OK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_ucast_data_ok_hi": {
                    "name": "CNTR_TX_UCAST_DATA_OK_HI",
                    "addressOffset": "0x8ac",
                    "desc": [
                        "Unicast data frames without error ",
                        "Number of data frames with a unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_ucast_data_ok_hi": {
                            "name": "CNTR_TX_UCAST_DATA_OK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_mcast_ctrl_lo": {
                    "name": "CNTR_TX_MCAST_CTRL_LO",
                    "addressOffset": "0x8b0",
                    "desc": [
                        "Multicast control frames without error ",
                        "Number of control frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_mcast_ctrl_lo": {
                            "name": "CNTR_TX_MCAST_CTRL_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_mcast_ctrl_hi": {
                    "name": "CNTR_TX_MCAST_CTRL_HI",
                    "addressOffset": "0x8b4",
                    "desc": [
                        "Multicast control frames without error ",
                        "Number of control frames with a multicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_mcast_ctrl_hi": {
                            "name": "CNTR_TX_MCAST_CTRL_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_bcast_ctrl_lo": {
                    "name": "CNTR_TX_BCAST_CTRL_LO",
                    "addressOffset": "0x8b8",
                    "desc": [
                        "Broadcast control frames without error ",
                        "Number of control frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_bcast_ctrl_lo": {
                            "name": "CNTR_TX_BCAST_CTRL_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_bcast_ctrl_hi": {
                    "name": "CNTR_TX_BCAST_CTRL_HI",
                    "addressOffset": "0x8bc",
                    "desc": [
                        "Broadcast control frames without error ",
                        "Number of control frames with a broadcast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_bcast_ctrl_hi": {
                            "name": "CNTR_TX_BCAST_CTRL_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_ucast_ctrl_lo": {
                    "name": "CNTR_TX_UCAST_CTRL_LO",
                    "addressOffset": "0x8c0",
                    "desc": [
                        "Unicast control frames without error ",
                        "Number of control frames with unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_ucast_ctrl_lo": {
                            "name": "CNTR_TX_UCAST_CTRL_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_ucast_ctrl_hi": {
                    "name": "CNTR_TX_UCAST_CTRL_HI",
                    "addressOffset": "0x8c4",
                    "desc": [
                        "Unicast control frames without error ",
                        "Number of control frames with unicast destination address and no errors"
                    ],
                    "fields": {
                        "cntr_tx_ucast_ctrl_hi": {
                            "name": "CNTR_TX_UCAST_CTRL_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_pause_lo": {
                    "name": "CNTR_TX_PAUSE_LO",
                    "addressOffset": "0x8c8",
                    "desc": [
                        "Pause frames without error ",
                        "Number of PAUSE (SFC) frames without error"
                    ],
                    "fields": {
                        "cntr_tx_pause_lo": {
                            "name": "CNTR_TX_PAUSE_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_pause_hi": {
                    "name": "CNTR_TX_PAUSE_HI",
                    "addressOffset": "0x8cc",
                    "desc": [
                        "Pause frames without error ",
                        "Number of PAUSE (SFC) frames without error"
                    ],
                    "fields": {
                        "cntr_tx_pause_hi": {
                            "name": "CNTR_TX_PAUSE_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_runt_lo": {
                    "name": "CNTR_TX_RUNT_LO",
                    "addressOffset": "0x8d0",
                    "desc": [
                        "Frames with less than 64 bytes and a CRC error ",
                        "Frames with less than 64 bytes and a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_runt_lo": {
                            "name": "CNTR_TX_RUNT_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_st_lo": {
                    "name": "CNTR_TX_ST_LO",
                    "addressOffset": "0x8d8",
                    "desc": [
                        "Number of frame starts ",
                        "Number of frame starts"
                    ],
                    "fields": {
                        "cntr_tx_st_lo": {
                            "name": "CNTR_TX_ST_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_st_hi": {
                    "name": "CNTR_TX_ST_HI",
                    "addressOffset": "0x8dc",
                    "desc": [
                        "Number of frame starts ",
                        "Number of frame starts"
                    ],
                    "fields": {
                        "cntr_tx_st_hi": {
                            "name": "CNTR_TX_ST_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_lenerr_lo": {
                    "name": "CNTR_TX_LENERR_LO",
                    "addressOffset": "0x8e0",
                    "desc": [
                        "Number of length error ",
                        "Number of length error"
                    ],
                    "fields": {
                        "cntr_tx_lenerr_lo": {
                            "name": "CNTR_TX_LENERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_pfc_err_lo": {
                    "name": "CNTR_TX_PFC_ERR_LO",
                    "addressOffset": "0x8e8",
                    "desc": [
                        "PFC frame with CRC error ",
                        "Number of PFC frames with a CRC error"
                    ],
                    "fields": {
                        "cntr_tx_pfc_err_lo": {
                            "name": "CNTR_TX_PFC_ERR_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_pfc_lo": {
                    "name": "CNTR_TX_PFC_LO",
                    "addressOffset": "0x8f0",
                    "desc": [
                        "PFC frames without error ",
                        "Number of PFC frames without error"
                    ],
                    "fields": {
                        "cntr_tx_pfc_lo": {
                            "name": "CNTR_TX_PFC_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_pfc_hi": {
                    "name": "CNTR_TX_PFC_HI",
                    "addressOffset": "0x8f4",
                    "desc": [
                        "PFC frames without error ",
                        "Number of PFC frames without error"
                    ],
                    "fields": {
                        "cntr_tx_pfc_hi": {
                            "name": "CNTR_TX_PFC_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_payloadoctetsok_lo": {
                    "name": "CNTR_TX_PAYLOADOCTETSOK_LO",
                    "addressOffset": "0x8f8",
                    "desc": [
                        "Data and padding octets with no errors of any type, including length error, undersize, oversize, malformed, or bad length/type field ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_payloadoctetsok_lo": {
                            "name": "CNTR_TX_PAYLOADOCTETSOK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_payloadoctetsok_hi": {
                    "name": "CNTR_TX_PAYLOADOCTETSOK_HI",
                    "addressOffset": "0x8fc",
                    "desc": [
                        "Data and padding octets with no errors of any type, including length error, undersize, oversize, malformed, or bad length/type field ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_payloadoctetsok_hi": {
                            "name": "CNTR_TX_PAYLOADOCTETSOK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_octetsok_lo": {
                    "name": "CNTR_TX_OCTETSOK_LO",
                    "addressOffset": "0x900",
                    "desc": [
                        "Counts every octet in every packet with or without error (including CRC error) ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_octetsok_lo": {
                            "name": "CNTR_TX_OCTETSOK_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_octetsok_hi": {
                    "name": "CNTR_TX_OCTETSOK_HI",
                    "addressOffset": "0x904",
                    "desc": [
                        "Counts every octet in every packet with or without error (including CRC error) ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_octetsok_hi": {
                            "name": "CNTR_TX_OCTETSOK_HI",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_malformed_lo": {
                    "name": "CNTR_TX_MALFORMED_LO",
                    "addressOffset": "0x908",
                    "desc": [
                        "Malformed packets received ",
                        "Malformed packets received. Malformed packets contain a control character other than error and do not end on a term. For the Ethernet Hard IP lane, frames with a start block that does not contain at least 5 bytes of IPG from the preceding frame are considered invalid. Note that the RX client interface indicates a 3rd type of malformed frame, which is not counted by the malformed statistic packets at the RX Client interface of the RX MAC can also be malformed if they contain insufficient bytes to include a preamble, header, and CRC."
                    ],
                    "fields": {
                        "cntr_tx_malformed_lo": {
                            "name": "CNTR_TX_MALFORMED_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_dropped_lo": {
                    "name": "CNTR_TX_DROPPED_LO",
                    "addressOffset": "0x910",
                    "desc": [
                        "Packets dropped due to error ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_dropped_lo": {
                            "name": "CNTR_TX_DROPPED_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_badlt_lo": {
                    "name": "CNTR_TX_BADLT_LO",
                    "addressOffset": "0x918",
                    "desc": [
                        "Frames with an L/T field that is neither a length nor an ethertype ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_badlt_lo": {
                            "name": "CNTR_TX_BADLT_LO",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_total_ptp_pkts": {
                    "name": "CNTR_TX_TOTAL_PTP_PKTS",
                    "addressOffset": "0x920",
                    "desc": [
                        "Counts the packets which are timestamped ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_total_ptp_pkts": {
                            "name": "CNTR_TX_TOTAL_PTP_PKTS",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_total_1step_ptp_pkts": {
                    "name": "CNTR_TX_TOTAL_1STEP_PTP_PKTS",
                    "addressOffset": "0x924",
                    "desc": [
                        "Counts the packets for which the timestamp information (TS,CF or EB) is updated in line with the packet transmission ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_total_1step_ptp_pkts": {
                            "name": "CNTR_TX_TOTAL_1STEP_PTP_PKTS",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_total_2step_ptp_pkts": {
                    "name": "CNTR_TX_TOTAL_2STEP_PTP_PKTS",
                    "addressOffset": "0x928",
                    "desc": [
                        "Counts the packets for which the timestamp information is updated out of the line with the packet transmission ",
                        ""
                    ],
                    "fields": {
                        "cntr_tx_total_2step_ptp_pkts": {
                            "name": "CNTR_TX_TOTAL_2STEP_PTP_PKTS",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_total_v1_ptp_pkts": {
                    "name": "CNTR_TX_TOTAL_V1_PTP_PKTS",
                    "addressOffset": "0x92c",
                    "desc": [
                        "Counts the packets for which the timestamp information is updated in 1588 v1 mode ",
                        "Counts the packets for which the timestamp information is updated in 1588 v1 mode"
                    ],
                    "fields": {
                        "cntr_tx_total_v1_ptp_pkts": {
                            "name": "CNTR_TX_TOTAL_V1_PTP_PKTS",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "cntr_tx_total_v2_ptp_pkts": {
                    "name": "CNTR_TX_TOTAL_V2_PTP_PKTS",
                    "addressOffset": "0x930",
                    "desc": [
                        "Counts the packets for which the timestamp information is updated in 1588 v2 mode (1 step or 2 step) ",
                        "Counts the packets for which the timestamp information is updated in 1588 v2 mode (1 step or 2 step)"
                    ],
                    "fields": {
                        "cntr_tx_total_v2_ptp_pkts": {
                            "name": "CNTR_TX_TOTAL_V2_PTP_PKTS",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics word ",
                                "4 bytes of an 8 byte EHIP Statistics"
                            ]
                        }
                    }
                },
                "config_ctrl": {
                    "name": "CONFIG_CTRL",
                    "addressOffset": "0x0",
                    "desc": [
                        "config configuration ",
                        "config control register"
                    ],
                    "fields": {
                        "rx_shadow_req": {
                            "name": "RX_SHADOW_REQ",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX Shadow Request ",
                                "1:Freeze stats CSRs so that all RX Stats values read from the registers will be from the same moment. ",
                                "Note: The actual stats collection counters are not frozen, but because they are all read at the time of the freeze, they are cleared."
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "tx_shadow_req": {
                            "name": "TX_SHADOW_REQ",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX Shadow Request ",
                                "1:Freeze stats CSRs so that all TX Stats values read from the registers will be from the same moment. ",
                                "Note that the actual stats collection counters are not frozen, but because they are all read at the time of the freeze, they are cleared"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "link_fault_config": {
                    "name": "LINK_FAULT_CONFIG",
                    "addressOffset": "0x200",
                    "desc": [
                        "Link Fault Configuration ",
                        "Configures EHIP link fault behavior."
                    ],
                    "fields": {
                        "en_lf": {
                            "name": "EN_LF",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Link Fault Reporting ",
                                "0:The TX PCS does not respond to link faults ",
                                "1:The TX PCS transmits link fault messages based on link faults detected by the RX"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "en_unidir": {
                            "name": "EN_UNIDIR",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Enable Unidirectional Link Fault ",
                                "1:EHIP enables support for unidirectional link fault signaling as described in Clause 66 ",
                                "Remote faults have no impact on TX data, and Local faults will cause the TX to transmit Remote fault Ordered sets between frames"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "disable_rf": {
                            "name": "DISABLE_RF",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Send idles instead of remote faults for local faults in unidirectional mode ",
                                "1:In unidirectional mode, local faults cause the TX to transmit Idles ",
                                "0:In unidirectional mode, local faults cause the TX to transmit Remote Faults (spec default)"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "force_rf": {
                            "name": "FORCE_RF",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Force the TX MAC to transmit Remote Faults when link fault signaling is on ",
                                "1:TX MAC transmits Remote Faults ",
                                "0:TX MAC operates normally"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                }
            }
        },
        "ftile_ethernet.ftile_ethernet_fec_reg_pkg": {
            "name": "Intel Agilex F-Tile 400GbE (fec)",
            "mnemonic": "ftile_ethernet_fec",
            "version": "24.2.0",
            "desc": [
                "For full documentation refer to the Intel Documentation for the IP core."
            ],
            "registers": {
                "e25g_s0_xcvrif_reg_12": {
                    "name": "E25G_S0_XCVRIF_REG_12",
                    "addressOffset": "0x70",
                    "desc": [
                        "xcvrif_reg_12"
                    ],
                    "fields": {
                        "lpbk_en": {
                            "name": "LPBK_EN",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX-RX loopback enable. This does not include UX/BK mapping"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "force_signal_ok": {
                            "name": "FORCE_SIGNAL_OK",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX force signal_ok high - Unused"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "signal_ok_sel": {
                            "name": "SIGNAL_OK_SEL",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX select: sync'd or unsync'd - Unused"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "e25g_s0_rsfec_top": {
                    "name": "E25G_S0_RSFEC_TOP",
                    "addressOffset": "0xc0",
                    "desc": [
                        "RS-FEC Settings"
                    ],
                    "fields": {
                        "fec_data_mux": {
                            "name": "FEC_DATA_MUX",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Select FEC TX data source from: ",
                                "1: EMIB Adapter ",
                                "0: EHIP"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "fec_lpbk_en": {
                            "name": "FEC_LPBK_EN",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "FEC Loopback enable FEC TX output to FEC RX input"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "fec_bypass_en": {
                            "name": "FEC_BYPASS_EN",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "FEC bypass enable for RX"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "e25g_s0_xcvrif_stat_0": {
                    "name": "E25G_S0_XCVRIF_STAT_0",
                    "addressOffset": "0x110",
                    "desc": [
                        "xcvrif_stat_0: TX FIFO flags"
                    ],
                    "fields": {
                        "tx_fifo_pfull_0": {
                            "name": "TX_FIFO_PFULL_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX FIFO mode partially full flag"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_fifo_full_0": {
                            "name": "TX_FIFO_FULL_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX FIFO mode full flag"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_fifo_pempty_0": {
                            "name": "TX_FIFO_PEMPTY_0",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX FIFO mode partially empty flag"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_fifo_empty_0": {
                            "name": "TX_FIFO_EMPTY_0",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX FIFO mode empty flag"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_fifo_underrun_0": {
                            "name": "TX_FIFO_UNDERRUN_0",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX FIFO underrun flag"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_fifo_overflow_0": {
                            "name": "TX_FIFO_OVERFLOW_0",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX FIFO overflow flag"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_gb_restarted_0": {
                            "name": "TX_GB_RESTARTED_0",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX DV GB restarted flag"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_gb_reserved_0": {
                            "name": "TX_GB_RESERVED_0",
                            "bitOffset": 7,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX DV GB reserved flag"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "e25g_s0_xcvrif_stat_hold_1": {
                    "name": "E25G_S0_XCVRIF_STAT_HOLD_1",
                    "addressOffset": "0x114",
                    "desc": [
                        "xcvrif_stat_hold_1: TX FIFO Sticky flags - Write 1 to Clear"
                    ],
                    "fields": {
                        "tx_fifo_pfull_1": {
                            "name": "TX_FIFO_PFULL_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX FIFO mode partially full sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_fifo_full_1": {
                            "name": "TX_FIFO_FULL_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX FIFO mode full sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_fifo_pempty_1": {
                            "name": "TX_FIFO_PEMPTY_1",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX FIFO mode partially empty sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_fifo_empty_1": {
                            "name": "TX_FIFO_EMPTY_1",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX FIFO mode empty sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_fifo_underrun_1": {
                            "name": "TX_FIFO_UNDERRUN_1",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX FIFO underrun sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_fifo_overflow_1": {
                            "name": "TX_FIFO_OVERFLOW_1",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX FIFO overflow sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_gb_restarted_1": {
                            "name": "TX_GB_RESTARTED_1",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX DV GB restarted sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_gb_reserved_1": {
                            "name": "TX_GB_RESERVED_1",
                            "bitOffset": 7,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "TX DV GB reserved sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "e25g_s0_xcvrif_stat_3": {
                    "name": "E25G_S0_XCVRIF_STAT_3",
                    "addressOffset": "0x120",
                    "desc": [
                        "xcvrif_stat_3: RX FIFO flags"
                    ],
                    "fields": {
                        "rx_fifo_pfull_0": {
                            "name": "RX_FIFO_PFULL_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX FIFO mode partially full flag"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_fifo_full_0": {
                            "name": "RX_FIFO_FULL_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX FIFO mode full flag"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_fifo_pempty_0": {
                            "name": "RX_FIFO_PEMPTY_0",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX FIFO mode partially empty flag"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_fifo_empty_0": {
                            "name": "RX_FIFO_EMPTY_0",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX FIFO mode empty flag"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_fifo_underrun_0": {
                            "name": "RX_FIFO_UNDERRUN_0",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX FIFO underrun flag"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_fifo_overflow_0": {
                            "name": "RX_FIFO_OVERFLOW_0",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX FIFO overflow flag"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_gb_restarted_0": {
                            "name": "RX_GB_RESTARTED_0",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX GB restarted flag"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_gb_reserved_0": {
                            "name": "RX_GB_RESERVED_0",
                            "bitOffset": 7,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX GB reserved flag"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "e25g_s0_xcvrif_stat_hold_4": {
                    "name": "E25G_S0_XCVRIF_STAT_HOLD_4",
                    "addressOffset": "0x124",
                    "desc": [
                        "xcvrif_stat_hold_4: RX FIFO Sticky flags - Write 1 to Clear"
                    ],
                    "fields": {
                        "rx_fifo_pfull_1": {
                            "name": "RX_FIFO_PFULL_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX FIFO mode partially full sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_fifo_full_1": {
                            "name": "RX_FIFO_FULL_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX FIFO mode full sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_fifo_pempty_1": {
                            "name": "RX_FIFO_PEMPTY_1",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX FIFO mode partially empty sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_fifo_empty_1": {
                            "name": "RX_FIFO_EMPTY_1",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX FIFO mode empty sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_fifo_underrun_1": {
                            "name": "RX_FIFO_UNDERRUN_1",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX FIFO underrun sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_fifo_overflow_1": {
                            "name": "RX_FIFO_OVERFLOW_1",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX FIFO overflow sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_gb_restarted_1": {
                            "name": "RX_GB_RESTARTED_1",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX GB restarted sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_gb_reserved_1": {
                            "name": "RX_GB_RESERVED_1",
                            "bitOffset": 7,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX GB reserved sticky flag"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "e25g_s0_rsfec_lane_cfg0": {
                    "name": "E25G_S0_RSFEC_LANE_CFG0",
                    "addressOffset": "0xc8",
                    "desc": [
                        "RSFEC per lane configuration"
                    ],
                    "fields": {
                        "indic_byp": {
                            "name": "INDIC_BYP",
                            "bitOffset": 8,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Set to bypass error indication (to reduce latency): ",
                                "0: Synchronization headers of selected 66b PCS symbols extracted from uncorrectable FEC codewords are deliberately invalidated. ",
                                "1: 66b PCS symbols extracted from uncorrectable codewords are not explicitly marked bad. ",
                                "When the number of FEC symbol errors in a block of 8192 consecutive codewords exceeds a threshold, then synchronization header errors will be generated towards the PCS layer for a period of 60ms to 75ms. ",
                                "Fire code: ",
                                "If .indicByp = 0, .fc = 0 then a subset of the 66b PCS symbols extracted from an uncorrectable codeword are invalidated. ",
                                "If .indicByp = 0, .fc = 1 then all the 32 PCS symbols extracted from an uncorrectable codeword are invalidated. This is required with 40GE. ",
                                "If .indicByp = 1 then no error indication occurs (hiSer is not defined with Fire code)."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "corr_byp": {
                            "name": "CORR_BYP",
                            "bitOffset": 9,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Set to bypass error correction (to reduce latency). Rx data is forwarded to the client directly. ",
                                "If the data was extracted from an error???ed codeword the data is NOT explicitly invalidated. ",
                                "Note that this differs from the behavior described in Clause 91. ",
                                "The error statistics are maintained regardless of this setting; i.e. as if data was corrected. ",
                                "Only the counting of bit errors is affected as no polarity information is available in this configuration. ",
                                "Fire code: ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "e25g_s0_rsfec_err_inj_tx": {
                    "name": "E25G_S0_RSFEC_ERR_INJ_TX",
                    "addressOffset": "0x138",
                    "desc": [
                        "RS-FEC Error Injection Mode"
                    ],
                    "fields": {
                        "rate": {
                            "name": "RATE",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "",
                                "TX error injection rate for each PMA interface lane. ",
                                "Data is output towards the PMA 40 bits at a time. The value specifies the fraction of such 40b words to hit. The unit is 1/256th so a value of, say, 7 causes 7/256th of the 40b words being sent on the lane to be hit. The distance between words being hit is approximately the same. ",
                                "The rate is perturbed slightly on the different lanes to increase randomness. This is done by occasionally pausing the sequencer one cycle. ",
                                "The error inject mechanism is agnostic of FEC codeword boundaries and each PMA interface lane is manipulated separately and regardless of all other configuration. ",
                                "Fire code: ",
                                "Data is output towards the PMA 33 bits at a time. The value specifies the fraction of such 33b words to hit. The unit is 1/8K so a value of, say, 89 causes 89/8192th of the 33b words being sent on the lane to be hit and the distance bwteen words being hit will be 92 or 93. ",
                                "The rate is perturbed slightly on the different lanes to increase randomness. This is done by occasionally pausing the sequencer one cycle. ",
                                "The error inject mechanism is agnostic of FEC codeword boundaries."
                            ],
                            "reset": 0
                        },
                        "pat": {
                            "name": "PAT",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "Tx error injection pattern for each lane. ",
                                "The value specifies which bits are being toggled on each lane, when the lane is hit. ",
                                "There is an 8b pattern per lane. When a 40b word on a lane is hit, 8 consecutive bits starting in that 40b word (possibly extending into the next 40b) are XOR'ed with the pattern. ",
                                "The starting position of the 8 affected bits is varied pseudo randomly. ",
                                "Fire code: ",
                                "Only bits 3:0 are used. These specify the maximum burst length blen. A pseudo-random pattern of length blen is xor'ed onto the word being output. The offset within the word is incremented with each hit and with offsets larger than 33-blen the error pattern may extend into the next 33b word. ",
                                "The Fire code can correct bursts up to 11 bits. The error pattern is pseudo-random and setting blen to, say, 12 will cause about 1/4th of the actual bursts to have a length of 12, which is uncorrectable."
                            ],
                            "reset": 0
                        }
                    }
                },
                "rsfec_core_ecc_hold": {
                    "name": "RSFEC_CORE_ECC_HOLD",
                    "addressOffset": "0x178",
                    "desc": [
                        "RS-FEC SRAM ECC Status Hold ",
                        "Write 1 to clear. Applicable to LPHY 100G stream 0 fractured space only."
                    ],
                    "fields": {
                        "sbe": {
                            "name": "SBE",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "SRAM ECC correctable (single bit) error detected. ",
                                "This is only valid in the fractured register space LPHY 100G Stream 0. ",
                                "Should not become set during normal operation. One bit per SRAM. ",
                                "Bits 0-3 covers the deskew buffers for PMA interface lanes 0-3 (only used for clients with multiple logical FEC lanes). ",
                                "Bits 4-7 covers the data delay buffers within the FEC decoder. ",
                                "Fire code: ",
                                "Same function, i.e. bits 4-7 used."
                            ],
                            "reset": 0
                        },
                        "mbe": {
                            "name": "MBE",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "SRAM ECC uncorrectable error detected. ",
                                "This is only valid in the fractured register space LPHY 100G Stream 0. ",
                                "Same bit ordering as for .sbe above."
                            ],
                            "reset": 0
                        }
                    }
                },
                "rsfec_lane_rx_stat": {
                    "name": "RSFEC_LANE_RX_STAT",
                    "addressOffset": "0x154",
                    "desc": [
                        "RS-FEC Status per RX Lane"
                    ],
                    "fields": {
                        "sf_0": {
                            "name": "SF_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Incoming Signal Fail (PMA unable to lock to signal) ",
                                "One entry per PMA interface lane, regardless of RSFEC_CORE_CFG.frac."
                            ],
                            "ftype": "boolean"
                        },
                        "not_locked_0": {
                            "name": "NOT_LOCKED_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "RX lane not locked. ",
                                "Not locked to alignment/codeword markers (400GE/200GE/100GE/128GFC/50GE/25GE) or to FEC codewords (when not using markers). ",
                                "One entry per PMA interface lane, regardless of RSFEC_CORE_CFG.frac."
                            ],
                            "ftype": "boolean"
                        },
                        "fec_3bad_0": {
                            "name": "FEC_3BAD_0",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "RX was locked (and aligned if multiple logical FEC lanes) but 3 consecutive FEC codewords could not be corrected. ",
                                "Restarts the synchronization. ",
                                "For an 802.3ck 100GE client entry number 0 and 2 are used. ",
                                "For 8-lane clients entry number 0 in each of the two participating submodules are used. ",
                                "For 16-lane clients entry number 0 in submodules 0 and 2 are used. ",
                                "Fire code: ",
                                "Set upon reception of 8 consecutive err'd codewords (even if correctable)."
                            ],
                            "ftype": "boolean"
                        },
                        "am_5bad_0": {
                            "name": "AM_5BAD_0",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "RX was locked (and aligned if multiple logical FEC lanes) but 5 consecutive alignment/codeword markers were not valid. ",
                                "Restarts the synchronization. ",
                                "Only applicable with protocols using markers."
                            ],
                            "ftype": "boolean"
                        },
                        "hi_ser_0": {
                            "name": "HI_SER_0",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "High symbol error rate. ",
                                "",
                                "-Set when the number of symbol errors in a window exceeds a threshold.",
                                "-The window is 8K consecutive codewords with RS(528,514), RS(544,514) and 16K codewords with RS(272,258).",
                                "-The bit remains set for 60ms to 75ms thereafter.",
                                "-If RSFEC_LANE_CFG0.indic_byp = 1, then synchronization header errors will be generated towards the client while .hi_ser is set. ",
                                "-For 8- and 16-lane clients entry number 0 in the lowest numbered participating submodule is used.",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "corr_cw_0": {
                            "name": "CORR_CW_0",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "Set when a FEC codeword had one or more errors that could be corrected. ",
                                "For an 802.3ck 100GE client entry number 0 and 2 are used. ",
                                "For 8-lane clients entry number 0 in each of the two participating submodules are used. ",
                                "For 16-lane clients entry number 0 in submodules 0 and 2 are used. ",
                                "Fire code: ",
                                "Same function."
                            ],
                            "ftype": "boolean"
                        },
                        "uncorr_cw_0": {
                            "name": "UNCORR_CW_0",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "Set when a FEC codeword could not be corrected due to too many errors. ",
                                "For an 802.3ck 100GE client the entries for lane number 0 and 2 are used. ",
                                "For a 8-lane client the entries for lane number 0 in each of the two participating submodules are used. ",
                                "For a 16-lane client the entries for lane number 0 in submodules 0 and 2 are used."
                            ],
                            "ftype": "boolean"
                        },
                        "corr_cw_bins_lo_0": {
                            "name": "CORR_CW_BINS_LO_0",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "Set when 8-15 symbols were corrected in a codeword. LSB set if no err in a CW, MSB set if 15 symbols were corrected. ",
                                "For an 802.3ck 100GE client the entries for lane number 0 and 2 are used. ",
                                "For a 8-lane client the entries for lane number 0 in each of the two participating submodules are used. ",
                                "For a 16-lane client the entries for lane number 0 in submodules 0 and 2 are used. ",
                                "If correction is bypassed, then the output is still driven as if errors were corrected. ",
                                "Fire code: ",
                                "Bit 0 set if no error in CW. Bit n, n is greater than 0 and less than 12, set if the distance between the first and last corrected bit was n-1."
                            ]
                        },
                        "corr_cw_bins_hi_0": {
                            "name": "CORR_CW_BINS_HI_0",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "Set when 0-7 symbols were corrected in a codeword. LSB set if no err in a CW, MSB set if 15 symbols were corrected. ",
                                "For an 802.3ck 100GE client the entries for lane number 0 and 2 are used. ",
                                "For a 8-lane client the entries for lane number 0 in each of the two participating submodules are used. ",
                                "For a 16-lane client the entries for lane number 0 in submodules 0 and 2 are used. ",
                                "If correction is bypassed, then the output is still driven as if errors were corrected. ",
                                "Fire code: ",
                                "Bit 0 set if no error in CW. Bit n, n is greater than 0 and less than 12, set if the distance between the first and last corrected bit was n-1."
                            ]
                        },
                        "degr_ser_0": {
                            "name": "DEGR_SER_0",
                            "bitOffset": 24,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "Set when the FEC degraded SER status is set. ",
                                "For 8- and 16-lane clients entry number 0 in the lowest numbered participating submodule is used."
                            ],
                            "ftype": "boolean"
                        },
                        "am_sf_rx_in_0": {
                            "name": "AM_SF_RX_IN_0",
                            "bitOffset": 25,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "",
                                "am_sf received from peer. ",
                                "Only valid with 8- and 16-lane clients and only in entry 0 in the first RS-FEC submodule for the client. ",
                                "These are the accepted values, i.e. a bit is updated when the received value matches the previous. ",
                                "Order is {RD bit (Remote Degraded), LD bit (Local Degraded), reserved bit}. ",
                                "For 8- and 16-lane clients entry number 0 in the lowest numbered participating submodule is used."
                            ]
                        }
                    }
                },
                "rsfec_lane_rx_hold": {
                    "name": "RSFEC_LANE_RX_HOLD",
                    "addressOffset": "0x158",
                    "desc": [
                        "RS-FEC per RX Lane Hold Status ",
                        "Write 1 to clear."
                    ],
                    "fields": {
                        "sf_1": {
                            "name": "SF_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Incoming Signal Fail (PMA unable to lock to signal) ",
                                "One entry per PMA interface lane, regardless of RSFEC_CORE_CFG.frac. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "not_locked_1": {
                            "name": "NOT_LOCKED_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "RX lane not locked ",
                                "Not locked to alignment/codeword markers (400GE/200GE/100GE/128GFC/50GE/25GE) or to FEC codewords (when not using markers). ",
                                "One entry per PMA interface lane, regardless of RSFEC_CORE_CFG.frac."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "fec_3bad_1": {
                            "name": "FEC_3BAD_1",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "RX was locked (and aligned if multiple logical FEC lanes) but 3 consecutive FEC codewords could not be corrected. ",
                                "Restarts the synchronization. ",
                                "For an 802.3ck 100GE client entry number 0 and 2 are used. ",
                                "For 8-lane clients entry number 0 in each of the two participating submodules are used. ",
                                "For 16-lane clients entry number 0 in submodules 0 and 2 are used. ",
                                "Fire code: ",
                                "Set upon reception of 8 consecutive err'd codewords (even if correctable)."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "am_5bad_1": {
                            "name": "AM_5BAD_1",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "RX was locked (and aligned if multiple logical FEC lanes) but 5 consecutive alignment/codeword markers were not valid. ",
                                "Restarts the synchronization. ",
                                "Only applicable with protocols using markers. ",
                                "Fire code: Not applicable."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "hi_ser_1": {
                            "name": "HI_SER_1",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "High symbol error rate. ",
                                "",
                                "-Set when the number of symbol errors in a window exceeds a threshold.",
                                "-The window is 8K consecutive codewords with RS(528,514), RS(544,514) and 16K codewords with RS(272,258).",
                                "-The bit remains set for 60ms to 75ms thereafter.",
                                "-If RSFEC_LANE_CFG0.indic_byp = 1, then synchronization header errors will be generated towards the client while .hi_ser is set. ",
                                "-For 8- and 16-lane clients entry number 0 in the lowest numbered participating submodule is used.",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "corr_cw_1": {
                            "name": "CORR_CW_1",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Set when a FEC codeword had one or more errors that could be corrected. ",
                                "For an 802.3ck 100GE client entry number 0 and 2 are used. ",
                                "For 8-lane clients entry number 0 in each of the two participating submodules are used. ",
                                "For 16-lane clients entry number 0 in submodules 0 and 2 are used. ",
                                "Fire code: ",
                                "Same function."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "uncorr_cw_1": {
                            "name": "UNCORR_CW_1",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Set when a FEC codeword could not be corrected due to too many errors. ",
                                "For an 802.3ck 100GE client the entries for lane number 0 and 2 are used. ",
                                "For a 8-lane client the entries for lane number 0 in each of the two participating submodules are used. ",
                                "For a 16-lane client the entries for lane number 0 in submodules 0 and 2 are used. ",
                                "Fire code: ",
                                "Same function."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "corr_cw_bins_lo_1": {
                            "name": "CORR_CW_BINS_LO_1",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "Set when 0-7 symbols were corrected in a codeword. LSB set if no err in a CW, MSB set if 15 symbols were corrected. ",
                                "For an 802.3ck 100GE client the entries for lane number 0 and 2 are used. ",
                                "For a 8-lane client the entries for lane number 0 in each of the two participating submodules are used. ",
                                "For a 16-lane client the entries for lane number 0 in submodules 0 and 2 are used. ",
                                "If correction is bypassed, then the output is still driven as if errors were corrected. ",
                                "Fire code: ",
                                "Bit 0 set if no error in CW. Bit n,n is greater than 0 and less than 12, set if the distance between the first and last corrected bit was n-1."
                            ],
                            "reset": 0
                        },
                        "corr_cw_bins_hi_1": {
                            "name": "CORR_CW_BINS_HI_1",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "Set when 8-15 symbols were corrected in a codeword. LSB set if no err in a CW, MSB set if 15 symbols were corrected. ",
                                "For an 802.3ck 100GE client the entries for lane number 0 and 2 are used. ",
                                "For a 8-lane client the entries for lane number 0 in each of the two participating submodules are used. ",
                                "For a 16-lane client the entries for lane number 0 in submodules 0 and 2 are used. ",
                                "If correction is bypassed, then the output is still driven as if errors were corrected. ",
                                "Fire code: ",
                                "Bit 0 set if no error in CW. Bit n, n is greater than 0 and less than 12, set if the distance between the first and last corrected bit was n-1."
                            ],
                            "reset": 0
                        },
                        "degr_ser_1": {
                            "name": "DEGR_SER_1",
                            "bitOffset": 24,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Set when the FEC degraded SER status is set. ",
                                "For 8- and 16-lane clients entry number 0 in the lowest numbered participating submodule is used. ",
                                "Fire code: Not applicable."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "am_sf_rx_in_1": {
                            "name": "AM_SF_RX_IN_1",
                            "bitOffset": 25,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "am_sf received from peer. Only valid with 8- and 16-lane clients and only in entry 0 in the first RSFEC submodule for the client. ",
                                "These are the accepted values, i.e. a bit is updated when the received value matches the previous. ",
                                "Order is {RD bit (Remote Degraded), LD bit (Local Degraded), reserved bit}. ",
                                "For 8- and 16-lane clients entry number 0 in the lowest numbered participating submodule is used. ",
                                "Fire code: Not applicable."
                            ],
                            "reset": 0
                        }
                    }
                },
                "rsfec_aggr_rx_stat": {
                    "name": "RSFEC_AGGR_RX_STAT",
                    "addressOffset": "0x160",
                    "desc": [
                        "RS-FEC per Aggregate RX Status. ",
                        "Valid on Master Streams Only such as 50G/100G/200G/400G streams."
                    ],
                    "fields": {
                        "not_align_0": {
                            "name": "NOT_ALIGN_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Client's Rx FEC lanes not aligned. ",
                                "Incoming signal fail, not all participating Rx lanes locked, alignment markers not unique or skew too large. ",
                                "Only applicable when the client has multiple logical FEC lanes. ",
                                "For a 4-lane client entry number 0 is used. For an 8- or 16-lane client entry number 0 in the lowest numbered submodule is used. ",
                                "Fire code: Not applicable."
                            ],
                            "ftype": "boolean"
                        },
                        "not_deskew_0": {
                            "name": "NOT_DESKEW_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Client's Rx lanes were all locked but the alignment markers were not unique or the skew was too large. ",
                                "This is an event that restarts the synchronization and the status will deassert immediately. ",
                                "The hold register shows if it occurred. To determine the current alignment state .not_align shall be used instead. ",
                                "Only applicable when the client has multiple logical FEC lanes. ",
                                "For a 4-lane client entry number 0 is used. For an 8- or 16-lane client entry number 0 in the lowest numbered submodule is used. ",
                                "Fire code: Not applicable."
                            ],
                            "ftype": "boolean"
                        },
                        "last_lane": {
                            "name": "LAST_LANE",
                            "bitOffset": 2,
                            "bitWidth": 4,
                            "access": "ro",
                            "desc": [
                                "Last Rx PMA interface lane for the client. ",
                                "Only applicable when the client has multiple logical FEC lanes. ",
                                "When all the Rx lanes become aligned this field shows which PMA interface lane was the latest. ",
                                "For an N-lane client the number is in the range 0..n-1, where 0 is for the lowest numbered PMA interface lane in the aggregation. ",
                                "Regardless of dynamic skew variations it will not change while the link is up. It shows which PMA interface lane to use as reference when determining the receive path data delay to be used by timing protocols. ",
                                "For a 4-lane client entry number 0 is used. For an 8- or 16-lane client entry number 0 in the lowest numbered, participating submodule is used. ",
                                "Fire code: Not applicable."
                            ]
                        }
                    }
                },
                "rsfec_aggr_rx_hold": {
                    "name": "RSFEC_AGGR_RX_HOLD",
                    "addressOffset": "0x164",
                    "desc": [
                        "RS-FEC per Aggregate RX Hold. ",
                        "Write 1 to clear. Valid on Master Streams Only such as 50G/100G/200G/400G streams."
                    ],
                    "fields": {
                        "not_align_1": {
                            "name": "NOT_ALIGN_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Client's Rx FEC lanes not aligned. ",
                                "Incoming signal fail, not all participating Rx lanes locked, alignment markers not unique or skew too large. ",
                                "Only applicable when the client has multiple logical FEC lanes. ",
                                "For a 4-lane client entry number 0 is used. For an 8- or 16-lane client entry number 0 in the lowest numbered submodule is used. ",
                                "Fire code: Not applicable."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "not_deskew_1": {
                            "name": "NOT_DESKEW_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Client's Rx lanes were all locked but the alignment markers were not unique or the skew was too large. ",
                                "This is an event that restarts the synchronization and the status will deassert immediately. ",
                                "The hold register shows if it occurred. To determine the current alignment state .not_align shall be used instead. ",
                                "Only applicable when the client has multiple logical FEC lanes. ",
                                "For a 4-lane client entry number 0 is used. For an 8- or 16-lane client entry number 0 in the lowest numbered submodule is used. ",
                                "Fire code: Not applicable."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "rsfec_ln_mapping_rx": {
                    "name": "RSFEC_LN_MAPPING_RX",
                    "addressOffset": "0x16c",
                    "desc": [
                        "RS-FEC FEC Lane Mapping"
                    ],
                    "fields": {
                        "fec_lane": {
                            "name": "FEC_LANE",
                            "bitOffset": 0,
                            "bitWidth": 4,
                            "access": "ro",
                            "desc": [
                                "FEC lane number received on the PMA interface lane. ",
                                "Only applicable when the lane is locked and the client has multiple logical FEC lanes. ",
                                "Fire code: Not applicable."
                            ]
                        }
                    }
                },
                "rsfec_ln_skew_rx": {
                    "name": "RSFEC_LN_SKEW_RX",
                    "addressOffset": "0x170",
                    "desc": [
                        "RS-FEC Lane Skew"
                    ],
                    "fields": {
                        "skew": {
                            "name": "SKEW",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "Lane skew value (unit is 40 bits). ",
                                "Only applicable when the client has multiple logical FEC lanes and only valid when the Rx lanes are aligned. ",
                                "The value shows approximately how much a lane is delayed relative to the first arriving (i.e. earliest) lane for the client. The latest arriving lane of a client thus has the largest value. ",
                                "Fire code: Not applicable."
                            ]
                        }
                    }
                },
                "rsfec_cw_pos_rx": {
                    "name": "RSFEC_CW_POS_RX",
                    "addressOffset": "0x174",
                    "desc": [
                        "RS-FEC Codeword Bit Position on RX"
                    ],
                    "fields": {
                        "num": {
                            "name": "NUM",
                            "bitOffset": 0,
                            "bitWidth": 15,
                            "access": "ro",
                            "desc": [
                                "Distance from bit marked on PMA interface input lane to first bit in group of FEC codewords. ",
                                "The same value is output on a port towards the PMA logic. ",
                                "May be used to inspect the deterministic latency mechanism. ",
                                "Fire code: ",
                                "Same function."
                            ]
                        }
                    }
                },
                "rsfec_corr_cw_cnt_lo": {
                    "name": "RSFEC_CORR_CW_CNT_LO",
                    "addressOffset": "0x184",
                    "desc": [
                        "RS-FEC number of FEC Codewords with Errors that were corrected, bits [31:0]"
                    ],
                    "fields": {
                        "stat_0": {
                            "name": "STAT_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics value. For an N lane client the entry for the 1st lane assigned to the client is used. ",
                                "For a client using two codewords A and B in parallel, two entries are used: ",
                                "An 802.3ck 100GE client uses entries 0 and 2 in the submodule for A and B respectively. ",
                                "An 8-lane client uses entry 0 in the even submodule for A and entry 0 in the odd submodule for B. ",
                                "A 16-lane client uses entry 0 in submodule 0 for A and entry 0 in submodule 2 for B. ",
                                "Fire code: ",
                                "Same function."
                            ]
                        }
                    }
                },
                "rsfec_corr_cw_cnt_hi": {
                    "name": "RSFEC_CORR_CW_CNT_HI",
                    "addressOffset": "0x188",
                    "desc": [
                        "RS-FEC number of FEC Codewords with Errors that were corrected, bits [63:32]"
                    ],
                    "fields": {
                        "stat_1": {
                            "name": "STAT_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics value. For an N lane client the entry for the 1st lane assigned to the client is used. ",
                                "For a client using two codewords A and B in parallel, two entries are used: ",
                                "An 802.3ck 100GE client uses entries 0 and 2 in the submodule for A and B respectively. ",
                                "An 8-lane client uses entry 0 in the even submodule for A and entry 0 in the odd submodule for B. ",
                                "A 16-lane client uses entry 0 in submodule 0 for A and entry 0 in submodule 2 for B. ",
                                "Fire code: ",
                                "Same function."
                            ]
                        }
                    }
                },
                "rsfec_uncorr_cw_cnt_lo": {
                    "name": "RSFEC_UNCORR_CW_CNT_LO",
                    "addressOffset": "0x18c",
                    "desc": [
                        "RS-FEC number of FEC Codewords that cannot be corrected due to too many errors, bits [31:0]"
                    ],
                    "fields": {
                        "stat_2": {
                            "name": "STAT_2",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics value. ",
                                "For an N lane client the entry for the 1st lane assigned to the client is used. ",
                                "For a client using two codewords A and B in parallel, two entries are used: ",
                                "An 802.3ck 100GE client uses entries 0 and 2 in the submodule for A and B respectively. ",
                                "An 8-lane client uses entry 0 in the even submodule for A and entry 0 in the odd submodule for B. ",
                                "A 16-lane client uses entry 0 in submodule 0 for A and entry 0 in submodule 2 for B. ",
                                "Fire code: ",
                                "Same function."
                            ]
                        }
                    }
                },
                "rsfec_uncorr_cw_cnt_hi": {
                    "name": "RSFEC_UNCORR_CW_CNT_HI",
                    "addressOffset": "0x190",
                    "desc": [
                        "RS-FEC number of FEC Codewords that cannot be corrected due to too many errors, bits [63:32]"
                    ],
                    "fields": {
                        "stat_3": {
                            "name": "STAT_3",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Statistics value. ",
                                "For an N lane client the entry for the 1st lane assigned to the client is used. ",
                                "For a client using two codewords A and B in parallel, two entries are used: ",
                                "An 802.3ck 100GE client uses entries 0 and 2 in the submodule for A and B respectively. ",
                                "An 8-lane client uses entry 0 in the even submodule for A and entry 0 in the odd submodule for B. ",
                                "A 16-lane client uses entry 0 in submodule 0 for A and entry 0 in submodule 2 for B. ",
                                "Fire code: ",
                                "Same function."
                            ]
                        }
                    }
                },
                "rsfec_corr_syms_cnt_lo": {
                    "name": "RSFEC_CORR_SYMS_CNT_LO",
                    "addressOffset": "0x194",
                    "desc": [
                        "RS-FEC number of 10b symbols corrected for the FEC lane, bits [31:0]."
                    ],
                    "fields": {
                        "stat_4": {
                            "name": "STAT_4",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "If correction is bypassed, then this counter still counts the number of error'ed 10b symbols detected."
                            ]
                        }
                    }
                },
                "rsfec_corr_syms_cnt_hi": {
                    "name": "RSFEC_CORR_SYMS_CNT_HI",
                    "addressOffset": "0x198",
                    "desc": [
                        "RS-FEC number of 10b symbols corrected for the FEC lane, bits [63:32]."
                    ],
                    "fields": {
                        "stat_5": {
                            "name": "STAT_5",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "If correction is bypassed, then this counter still counts the number of error'ed 10b symbols detected."
                            ]
                        }
                    }
                },
                "rsfec_corr_0s_cnt_lo": {
                    "name": "RSFEC_CORR_0S_CNT_LO",
                    "addressOffset": "0x19c",
                    "desc": [
                        "RS-FEC number of bits corrected 0->1 for the FEC lane, bits [31:0]"
                    ],
                    "fields": {
                        "stat_6": {
                            "name": "STAT_6",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "If correction is bypassed, then this counter counts the total number of bit errors detected regardless of polarity."
                            ]
                        }
                    }
                },
                "rsfec_corr_0s_cnt_hi": {
                    "name": "RSFEC_CORR_0S_CNT_HI",
                    "addressOffset": "0x1a0",
                    "desc": [
                        "RS-FEC number of bits corrected 0->1 for the FEC lane, bits [63:32]"
                    ],
                    "fields": {
                        "stat_7": {
                            "name": "STAT_7",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "If correction is bypassed, then this counter counts the total number of bit errors detected regardless of polarity."
                            ]
                        }
                    }
                },
                "rsfec_corr_1s_cnt_lo": {
                    "name": "RSFEC_CORR_1S_CNT_LO",
                    "addressOffset": "0x1a4",
                    "desc": [
                        "RS-FEC number of bits corrected 1->0 for the FEC lane, bits [31:0]"
                    ],
                    "fields": {
                        "stat_8": {
                            "name": "STAT_8",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "If correction is bypassed, then this counter counts the total number of bit errors detected regardless of polarity."
                            ]
                        }
                    }
                },
                "rsfec_corr_1s_cnt_hi": {
                    "name": "RSFEC_CORR_1S_CNT_HI",
                    "addressOffset": "0x1a8",
                    "desc": [
                        "RS-FEC number of bits corrected 1->0 for the FEC lane, bits [63:32]"
                    ],
                    "fields": {
                        "stat_9": {
                            "name": "STAT_9",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "If correction is bypassed, then this counter counts the total number of bit errors detected regardless of polarity."
                            ]
                        }
                    }
                },
                "rsfec_corr_cwbin_cnt_0_3": {
                    "name": "RSFEC_CORR_CWBIN_CNT_0_3",
                    "addressOffset": "0x1d0",
                    "desc": [
                        "RS-FEC number of corrected codewords having Errs=0,1,..,15 errored symbols"
                    ],
                    "fields": {
                        "cwbin0_stat": {
                            "name": "CWBIN0_STAT",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin1_stat": {
                            "name": "CWBIN1_STAT",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin2_stat": {
                            "name": "CWBIN2_STAT",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin3_stat": {
                            "name": "CWBIN3_STAT",
                            "bitOffset": 24,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        }
                    }
                },
                "rsfec_corr_cwbin_cnt_4_7": {
                    "name": "RSFEC_CORR_CWBIN_CNT_4_7",
                    "addressOffset": "0x1d4",
                    "desc": [
                        "RS-FEC number of corrected codewords having Errs=0,1,..,15 errored symbols"
                    ],
                    "fields": {
                        "cwbin4_stat": {
                            "name": "CWBIN4_STAT",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin5_stat": {
                            "name": "CWBIN5_STAT",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin6_stat": {
                            "name": "CWBIN6_STAT",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin7_stat": {
                            "name": "CWBIN7_STAT",
                            "bitOffset": 24,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        }
                    }
                },
                "rsfec_corr_cwbin_cnt_8_11": {
                    "name": "RSFEC_CORR_CWBIN_CNT_8_11",
                    "addressOffset": "0x1d8",
                    "desc": [
                        "RS-FEC number of corrected codewords having Errs=0,1,..,15 errored symbols"
                    ],
                    "fields": {
                        "cwbin8_stat": {
                            "name": "CWBIN8_STAT",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin9_stat": {
                            "name": "CWBIN9_STAT",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin10_stat": {
                            "name": "CWBIN10_STAT",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin11_stat": {
                            "name": "CWBIN11_STAT",
                            "bitOffset": 24,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        }
                    }
                },
                "rsfec_corr_cwbin_cnt_12_15": {
                    "name": "RSFEC_CORR_CWBIN_CNT_12_15",
                    "addressOffset": "0x1dc",
                    "desc": [
                        "RS-FEC number of corrected codewords having Errs=0,1,..,15 errored symbols"
                    ],
                    "fields": {
                        "cwbin12_stat": {
                            "name": "CWBIN12_STAT",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin13_stat": {
                            "name": "CWBIN13_STAT",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin14_stat": {
                            "name": "CWBIN14_STAT",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        },
                        "cwbin15_stat": {
                            "name": "CWBIN15_STAT",
                            "bitOffset": 24,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "",
                                "",
                                "-Firecode: Number of CWs with error burst length N, N=0,1..11.",
                                "- For an N lane client the 16 counters for the 1st lane assigned to the client is used.",
                                "- For a client using two codewords in parallel, two sets are used:",
                                "- An 802.3ck 100GE client uses the 16 counters for lane 0 and the 16 counters for lane 2 in the submodule.",
                                "- An 8-lane client uses the 16 counters for lane 0 in each of the two participating submodules.",
                                "- A 16-lane client uses the 16 counters for lane 0 in each of submodules 0 and 2.",
                                "-Fire code:",
                                "- Error burst length is 0 if no error, else pos(last corrected bit) - pos(first corrected bit) + 1.",
                                ""
                            ]
                        }
                    }
                },
                "rsfec_debug_cfg": {
                    "name": "RSFEC_DEBUG_CFG",
                    "addressOffset": "0x1e0",
                    "desc": [
                        "Extra Configuration and Debug Register for fec_clock"
                    ],
                    "fields": {
                        "shadow_req": {
                            "name": "SHADOW_REQ",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Snapshot or Shadow Request ",
                                "Freeze rsfec counter CSRs so that all counter values read from the registers will be from the same moment. Note that the actual collection counters are not frozen, but because they are all 'read' at the time of the freeze, they are cleared."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "shadow_clear": {
                            "name": "SHADOW_CLEAR",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Clear RS-FEC Counters. ",
                                "Clear the collection and shadow counters so that the next shadow request or snapshot will start from 0. If the counters are not cleared, they will continue counting and rollover."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "rsfec_lane_tx_stat": {
                    "name": "RSFEC_LANE_TX_STAT",
                    "addressOffset": "0x148",
                    "desc": [
                        "RS-FEC Status per TX Lane"
                    ],
                    "fields": {
                        "hdr_inv_0": {
                            "name": "HDR_INV_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "PCS Tx 66b invalid synchronization header. ",
                                "Fire code: ",
                                "Same function."
                            ],
                            "ftype": "boolean"
                        },
                        "blk_inv_0": {
                            "name": "BLK_INV_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "",
                                "PCS TX 66b Invalid Block Type. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "resync_0": {
                            "name": "RESYNC_0",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "PCS TX Alignment/Codeword Marker Resync. ",
                                "When markers are used it is set when the distance between sync inputs does not match. When transcoding is active it is also checked if the width of the sync pulse matches. ",
                                "If markers are not used, then the bit is set if the distance between two syncs is not a multiple of 640 transfers"
                            ],
                            "ftype": "boolean"
                        },
                        "pace_inv_0": {
                            "name": "PACE_INV_0",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "PCS TX Pacing Violation: ",
                                "",
                                "-For RS(528,514): .pace_inv is never set.",
                                "-For RS(544, 514) or RS(272,258): .pace_inv is set when the layer above presents valid TX data in more than 33 consecutive cycles. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "am_sf_tx_in_0": {
                            "name": "AM_SF_TX_IN_0",
                            "bitOffset": 4,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "am_sf presented on TX by upper layer ",
                                "Only valid with 8- and 16-lane clients and only in entry 0 in the first RS-FEC submodule for the client. ",
                                "Order is {RD bit (Remote Degraded), LD bit (Local Degraded), reserved bit}. ",
                                "Firecode: Not applicable."
                            ]
                        }
                    }
                },
                "rsfec_lane_tx_hold": {
                    "name": "RSFEC_LANE_TX_HOLD",
                    "addressOffset": "0x14c",
                    "desc": [
                        "RS-FEC per TX Lane Hold Status ",
                        "Write 1 to clear."
                    ],
                    "fields": {
                        "hdr_inv_1": {
                            "name": "HDR_INV_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "PCS TX 66b invalid synchronization header. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "blk_inv_1": {
                            "name": "BLK_INV_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "PCS TX 66b Invalid Block Type"
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "resync_1": {
                            "name": "RESYNC_1",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "PCS TX Alignment/Codeword Marker Resync ",
                                "When markers are used it is set when the distance between sync inputs does not match. When transcoding is active it is also checked if the width of the sync pulse matches. ",
                                "If markers are not used, then the bit is set if the distance between two syncs is not a multiple of 640 transfers."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "pace_inv_1": {
                            "name": "PACE_INV_1",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "PCS TX Pacing Violation: ",
                                "",
                                "-For RS(528,514): .pace_inv is never set.",
                                "-For RS(544,514) or RS(272,258): .pace_inv is set when the layer above presents valid Tx data in more than 33 consecutive cycles.",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "am_sf_tx_in_1": {
                            "name": "AM_SF_TX_IN_1",
                            "bitOffset": 4,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "am_sf presented on Tx by upper layer ",
                                "Only valid with 8- and 16-lane clients and only in entry 0 in the first RS-FEC submodule for the client. ",
                                "Order is {RD bit (Remote Degraded), LD bit (Local Degraded), reserved bit}."
                            ],
                            "reset": 0
                        }
                    }
                },
                "rsfec_err_val_tx": {
                    "name": "RSFEC_ERR_VAL_TX",
                    "addressOffset": "0x17c",
                    "desc": [
                        "RS-FEC per Lane Error Injection Status"
                    ],
                    "fields": {
                        "inj0s": {
                            "name": "INJ0S",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "Number of bits (modulo 256) that were changed from 1 to 0 on each PMA interface lane. ",
                                "Cleared when the corresponding RSFEC_ERR_INJ_TX.rate is written with a non-zero value after being all zero, i.e. when a test is initiated. A value read from this register is not reliable while injecting. A value read is reliable when the test is completed, i.e. after the lane's RSFEC_ERR_INJ_TX.rate or RSFEC_ERR_INJ_TX.pat has been cleared. ",
                                "One entry per PMA interface lane, regardless of RSFEC_CORE_CFG.frac. ",
                                "Fire code: ",
                                "Same function."
                            ]
                        },
                        "inj1s": {
                            "name": "INJ1S",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "Same for bits changed from 0 to 1 on each PMA interface lane."
                            ]
                        }
                    }
                }
            }
        },
        "ftile_ethernet.ftile_ethernet_base_reg_pkg": {
            "name": "Intel Agilex F-Tile 400GbE (base)",
            "mnemonic": "ftile_ethernet_base",
            "version": "24.2.0",
            "desc": [
                "For full documentation refer to the Intel Documentation for the IP core."
            ],
            "registers": {
                "phy_tx_pll_locked": {
                    "name": "PHY_TX_PLL_LOCKED",
                    "addressOffset": "0x110",
                    "desc": [
                        "TX PLL locked ",
                        "TX PLL used by the corresponding physical lane is locked"
                    ],
                    "fields": {
                        "tx_pll_locked": {
                            "name": "TX_PLL_LOCKED",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "TX PLL Locked ",
                                "1:TX PLL used by this lane physical lane is locked"
                            ]
                        }
                    }
                },
                "phy_eiofreq_locked": {
                    "name": "PHY_EIOFREQ_LOCKED",
                    "addressOffset": "0x114",
                    "desc": [
                        "RX CDR PLL locked ",
                        "One field per physical lane to indicate whether or not each CDR successfully locks to the incoming data stream. FHT and FGT PMAs share the same register bits."
                    ],
                    "fields": {
                        "eio_freq_lock": {
                            "name": "EIO_FREQ_LOCK",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "CDR PLL locked ",
                                "1:Corresponding physical lane's CDR has locked to reference"
                            ]
                        }
                    }
                },
                "pcs_status": {
                    "name": "PCS_STATUS",
                    "addressOffset": "0x118",
                    "desc": [
                        "PCS status Includes the following fields: ",
                        "",
                        "- dskew_status",
                        "- dskew_chng",
                        "- tx_lanes_stable",
                        "- rx_pcs_ready",
                        "- kr_mode",
                        "- kr_fec_mode",
                        ""
                    ],
                    "fields": {
                        "dskew_status": {
                            "name": "DSKEW_STATUS",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Deskewed status ",
                                "1:RX EMIB is deskewed ",
                                "0:RX EMIB is not currently deskewed. Note: There is some latency between this status bit and the actual state ",
                                "",
                                "- Not valid for single lane channels (10G/25G) without PTP",
                                "- Note: This bit is not a sticky bit. Intel recommends using a soft logic replacement for this bit that can be made sticky based on the deskew_done port. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "dskew_chng_0": {
                            "name": "DSKEW_CHNG_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Change in deskewed status ",
                                "1:RX EMIB went from deskewed to not deskewed, or from not deskewed to deskewed ",
                                "",
                                "- Not valid for single lane channels (10G/25G) without PTP",
                                "- This bit is sticky - use pcs_control.clr_dskew_chng to set this bit back to 0",
                                "- Resetting the RX datapath, or the entire core will also clear the bit.",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "tx_lanes_stable": {
                            "name": "TX_LANES_STABLE",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX Lanes Stable ",
                                "1:TX datapath is ready"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_pcs_ready": {
                            "name": "RX_PCS_READY",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX PCS Ready ",
                                "1:RX datapath is ready"
                            ],
                            "ftype": "boolean"
                        },
                        "kr_mode": {
                            "name": "KR_MODE",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "AN/LT mode ",
                                "1:Port is currently executing in AN/LT mode"
                            ],
                            "ftype": "boolean"
                        },
                        "kr_fec_mode": {
                            "name": "KR_FEC_MODE",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "AN/LT FEC mode ",
                                "1:AN has negotiated FEC enable mode"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "pcs_control": {
                    "name": "PCS_CONTROL",
                    "addressOffset": "0x11C",
                    "desc": [
                        "PCS Control Includes the following field: ",
                        "- clr_dskew_chng",
                        ""
                    ],
                    "fields": {
                        "clr_dskew_chng": {
                            "name": "CLR_DSKEW_CHNG",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Clear EMIB deskew ",
                                "Not a self clearing bit. You must write 1'b1 and then 1'b0 to clear this bit."
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "clk_tx_khz": {
                    "name": "CLK_TX_KHZ",
                    "addressOffset": "0x128",
                    "desc": [
                        "i_clk_tx Clock Frequency (in kHz)"
                    ],
                    "fields": {
                        "clk_tx_khz": {
                            "name": "CLK_TX_KHZ",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "i_clk_tx clock frequency in KHz"
                            ]
                        }
                    }
                },
                "clk_rx_khz": {
                    "name": "CLK_RX_KHZ",
                    "addressOffset": "0x12C",
                    "desc": [
                        "i_clk_rx Clock Frequency (in kHz)"
                    ],
                    "fields": {
                        "clk_rx_khz": {
                            "name": "CLK_RX_KHZ",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "i_clk_rx clock frequency in KHz"
                            ]
                        }
                    }
                },
                "clk_pll_khz": {
                    "name": "CLK_PLL_KHZ",
                    "addressOffset": "0x130",
                    "desc": [
                        "o_clk_pll Clock Frequency (in kHz)"
                    ],
                    "fields": {
                        "clk_pll_khz": {
                            "name": "CLK_PLL_KHZ",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "o_clk_pll clock frequency in KHz"
                            ]
                        }
                    }
                },
                "clk_tx_div_khz": {
                    "name": "CLK_TX_DIV_KHZ",
                    "addressOffset": "0x134",
                    "desc": [
                        "o_clk_tx_div Clock Frequency (in kHz)"
                    ],
                    "fields": {
                        "clk_tx_div_khz": {
                            "name": "CLK_TX_DIV_KHZ",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "o_clk_tx_div clock frequency in KHz"
                            ]
                        }
                    }
                },
                "clk_rec_div64_khz": {
                    "name": "CLK_REC_DIV64_KHZ",
                    "addressOffset": "0x138",
                    "desc": [
                        "o_clk_rec_div64 Clock Frequency (in kHz)"
                    ],
                    "fields": {
                        "clk_rec_div64_khz": {
                            "name": "CLK_REC_DIV64_KHZ",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "o_clk_rec_div64 clock frequency in KHz"
                            ]
                        }
                    }
                },
                "clk_rec_div_khz": {
                    "name": "CLK_REC_DIV_KHZ",
                    "addressOffset": "0x13C",
                    "desc": [
                        "o_clk_rec_div Clock Frequency (in kHz)"
                    ],
                    "fields": {
                        "clk_rec_div_khz": {
                            "name": "CLK_REC_DIV_KHZ",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "o_clk_rec_div clock frequency in KHz"
                            ]
                        }
                    }
                },
                "ptp_tx_tam_adjust": {
                    "name": "PTP_TX_TAM_ADJUST",
                    "addressOffset": "0x800",
                    "desc": [
                        "Calculated TX TAM Adjustment Value"
                    ],
                    "fields": {
                        "tam_adjust_0": {
                            "name": "TAM_ADJUST_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32 bit of TAM adjustment value in 2's complement format for specific physical lane."
                            ],
                            "reset": 0
                        }
                    }
                },
                "ptp_rx_tam_adjust": {
                    "name": "PTP_RX_TAM_ADJUST",
                    "addressOffset": "0x804",
                    "desc": [
                        "Calculated RX TAM Adjustment Value"
                    ],
                    "fields": {
                        "tam_adjust_1": {
                            "name": "TAM_ADJUST_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32 bit of TAM adjustment value in 2's complement format for specific physical lane."
                            ],
                            "reset": 0
                        }
                    }
                },
                "ptp_ref_lane": {
                    "name": "PTP_REF_LANE",
                    "addressOffset": "0x80C",
                    "desc": [
                        "Physical lane that TAM associates with ",
                        "Only applicable to multi-lane designs."
                    ],
                    "fields": {
                        "tx_ref_lane": {
                            "name": "TX_REF_LANE",
                            "bitOffset": 0,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "TX Reference Lane ",
                                "3 bit number of TX physical lane (any can be reference). ",
                                "",
                                "",
                                "- Resetting TX datapath, or the entire core will clear this bit to 0.",
                                "",
                                "See User Guide for calculation details. ",
                                ""
                            ],
                            "reset": "0b000"
                        },
                        "rx_ref_lane": {
                            "name": "RX_REF_LANE",
                            "bitOffset": 3,
                            "bitWidth": 3,
                            "access": "rw",
                            "desc": [
                                "RX Reference Lane ",
                                "3 bit number of RX physical lane which packet last arrives at. ",
                                "",
                                "",
                                "- rx_pcs_fully_aligned deassertion will clear the bits to 0.",
                                "- Resetting RX datapath or the entire core will also clear the bits to 0.",
                                "",
                                "See User Guide for calculation details. ",
                                ""
                            ],
                            "reset": "0b000"
                        }
                    }
                },
                "ptp_dr_cfg": {
                    "name": "PTP_DR_CFG",
                    "addressOffset": "0x810",
                    "desc": [
                        "TX User Configuration Status"
                    ],
                    "fields": {
                        "tx_ehip_preamble_passthrough": {
                            "name": "TX_EHIP_PREAMBLE_PASSTHROUGH",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Identical to Ethernet Hard IP TX Preamble Passthrough setting value. ",
                                "-1: Ethernet Hard IP Preamble Passthrough enabled",
                                "- 0: Ethernet Hard IP Preamble Passthrough disabled.",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_tx_user_cfg_status": {
                    "name": "PTP_TX_USER_CFG_STATUS",
                    "addressOffset": "0x814",
                    "desc": [
                        "TX User Configuration Status"
                    ],
                    "fields": {
                        "tx_user_cfg_done": {
                            "name": "TX_USER_CFG_DONE",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Indicates user has completed all necessary TX configuration: ",
                                "1: Configured ",
                                "0: Not configured yet ",
                                "TX configuration has programmed TX TAM adjustment to Soft IP. ",
                                "TX configuration is completed when user has: ",
                                "- programmed TX reference lane (multi-lane variant only) and TX TAM adjustment to Soft IP ",
                                "- programmed TX extra latency to Hard IP",
                                "- programmed TX VL offset to Hard IP (multi-lane variant only)",
                                "",
                                "Register value is automatically cleared in the following condition: ",
                                "- tx_lanes_stable deassertion",
                                "- Resetting TX datapath or the entire core",
                                ""
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_rx_user_cfg_status": {
                    "name": "PTP_RX_USER_CFG_STATUS",
                    "addressOffset": "0x818",
                    "desc": [
                        "RX User Configuration Status"
                    ],
                    "fields": {
                        "rx_user_cfg_done": {
                            "name": "RX_USER_CFG_DONE",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Indicates user has completed all necessary RX configuration: ",
                                "1: Configured 0: Not configured yet ",
                                "RX configuration has programmed RX TAM adjustment to Soft IP ",
                                "RX configuration is completed when user has: ",
                                "- programmed RX reference lane (multi-lane variant only) and RX TAM adjustment to Soft IP ",
                                "- programmed RX extra latency to Hard IP",
                                "- programmed RX VL offset to Hard IP (multi-lane variant only)",
                                "",
                                "Register value is automatically cleared in the following condition: ",
                                "- tx_lanes_stable deassertion",
                                "- Resetting RX datapath or the entire core",
                                ""
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "rx_fec_cw_pos_cfg_done": {
                            "name": "RX_FEC_CW_POS_CFG_DONE",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Indicates user has configured Hard IP's RX FEC codeword position register: ",
                                "1: Configured 0: Not configured yet ",
                                "",
                                "Register value will be automatically cleared in the following condition: ",
                                "- rx_pcs_fully_aligned deassertion",
                                "- Resetting RX datapath or the entire core",
                                ""
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_uim_tam_snapshot": {
                    "name": "PTP_UIM_TAM_SNAPSHOT",
                    "addressOffset": "0x81C",
                    "desc": [
                        "Request TAM snapshot to calculate unit interval (UI) ",
                        "TX and RX TAM snapshot are independent."
                    ],
                    "fields": {
                        "tx_tam_snapshot": {
                            "name": "TX_TAM_SNAPSHOT",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Set this bit to 1'b1 to request TX TAM snapshot ",
                                "Asserting this bit generates a single pulse to hardware"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "rx_tam_snapshot": {
                            "name": "RX_TAM_SNAPSHOT",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Set this bit to 1'b1 to request RX TAM snapshot ",
                                "Asserting this bit generates a single pulse to hardware"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_tx_uim_tam_info0": {
                    "name": "PTP_TX_UIM_TAM_INFO0",
                    "addressOffset": "0x820",
                    "desc": [
                        "Result returned upon TAM snapshot request ",
                        "Consists of TAM partial bits."
                    ],
                    "fields": {
                        "tam_31_0_0": {
                            "name": "TAM_31_0_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "TAM lower bits ",
                                "bit 31-0 of TAM"
                            ]
                        }
                    }
                },
                "ptp_tx_uim_tam_info1": {
                    "name": "PTP_TX_UIM_TAM_INFO1",
                    "addressOffset": "0x824",
                    "desc": [
                        "Result returned upon TAM snapshot request ",
                        "Consists of TAM partial bits, TAM ID, and TAM valid bit."
                    ],
                    "fields": {
                        "tam_47_32_0": {
                            "name": "TAM_47_32_0",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "TAM upper bits ",
                                "bit 47-32 of TAM"
                            ]
                        },
                        "tam_cnt_0": {
                            "name": "TAM_CNT_0",
                            "bitOffset": 16,
                            "bitWidth": 15,
                            "access": "ro",
                            "desc": [
                                "TAM counter ",
                                "15 bits of TAM counter"
                            ]
                        },
                        "tam_valid_0": {
                            "name": "TAM_VALID_0",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TAM valid ",
                                "1 bits of TAM valid"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_rx_uim_tam_info0": {
                    "name": "PTP_RX_UIM_TAM_INFO0",
                    "addressOffset": "0x828",
                    "desc": [
                        "Result returned upon TAM snapshot request ",
                        "Consists of TAM partial bits."
                    ],
                    "fields": {
                        "tam_31_0_1": {
                            "name": "TAM_31_0_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "TAM lower bits ",
                                "bit 31-0 of TAM"
                            ]
                        }
                    }
                },
                "ptp_rx_uim_tam_info1": {
                    "name": "PTP_RX_UIM_TAM_INFO1",
                    "addressOffset": "0x82C",
                    "desc": [
                        "Result returned upon TAM snapshot request ",
                        "Consists of TAM partial bits, TAM ID, and TAM valid bit."
                    ],
                    "fields": {
                        "tam_47_32_1": {
                            "name": "TAM_47_32_1",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro",
                            "desc": [
                                "TAM upper bits ",
                                "bit 47-32 of TAM"
                            ]
                        },
                        "tam_cnt_1": {
                            "name": "TAM_CNT_1",
                            "bitOffset": 16,
                            "bitWidth": 15,
                            "access": "ro",
                            "desc": [
                                "TAM counter ",
                                "15 bits of TAM counter"
                            ]
                        },
                        "tam_valid_1": {
                            "name": "TAM_VALID_1",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TAM valid ",
                                "1 bits of TAM valid"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_status": {
                    "name": "PTP_STATUS",
                    "addressOffset": "0x830",
                    "desc": [
                        "PTP Status Register"
                    ],
                    "fields": {
                        "tx_ptp_offset_data_valid": {
                            "name": "TX_PTP_OFFSET_DATA_VALID",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX calculation data valid/ready to read ",
                                "1: valid"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_ptp_offset_data_valid": {
                            "name": "RX_PTP_OFFSET_DATA_VALID",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX calculation data valid/ready to read ",
                                "1: valid"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_ptp_ready": {
                            "name": "TX_PTP_READY",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX PTP is ready ",
                                "1: ready"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_ptp_ready": {
                            "name": "RX_PTP_READY",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX PTP is ready ",
                                "1: ready"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_status2": {
                    "name": "PTP_STATUS2",
                    "addressOffset": "0x840",
                    "desc": [
                        "PTP Status2 Register (Internal Use)"
                    ],
                    "fields": {
                        "tx_calc_data_time_valid": {
                            "name": "TX_CALC_DATA_TIME_VALID",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX calculation data 'time' is valid/ready to read ",
                                "1: valid"
                            ],
                            "ftype": "boolean"
                        },
                        "tx_calc_data_wiredelay_valid": {
                            "name": "TX_CALC_DATA_WIREDELAY_VALID",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX calculation data 'wire delay' is valid/ready to read ",
                                "1: valid"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_calc_data_offset_valid": {
                            "name": "RX_CALC_DATA_OFFSET_VALID",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX calculation data 'time offset' is valid/ready to read ",
                                "1: valid"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_calc_data_time_valid": {
                            "name": "RX_CALC_DATA_TIME_VALID",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX calculation data 'time' is valid/ready to read ",
                                "1: valid"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_calc_data_wiredelay_valid": {
                            "name": "RX_CALC_DATA_WIREDELAY_VALID",
                            "bitOffset": 5,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX calculation data 'wire delay' is valid/ready to read ",
                                "1: valid"
                            ],
                            "ftype": "boolean"
                        },
                        "rx_vl_offset_data_ready": {
                            "name": "RX_VL_OFFSET_DATA_READY",
                            "bitOffset": 6,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "(For multilane non-fec variant only)RX VL raw data in EHIP is ready to read ",
                                "1: ready"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "ptp_tx_lane_calc_data_constdelay": {
                    "name": "PTP_TX_LANE_CALC_DATA_CONSTDELAY",
                    "addressOffset": "0x8F0",
                    "desc": [
                        "Constant delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_constdelay_0": {
                            "name": "DATA_CONSTDELAY_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Constant delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane_calc_data_constdelay": {
                    "name": "PTP_RX_LANE_CALC_DATA_CONSTDELAY",
                    "addressOffset": "0x8F4",
                    "desc": [
                        "Constant delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_constdelay_1": {
                            "name": "DATA_CONSTDELAY_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Constant delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane0_calc_data_offset": {
                    "name": "PTP_TX_LANE0_CALC_DATA_OFFSET",
                    "addressOffset": "0x900",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_0": {
                            "name": "DATA_OFFSET_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane0_calc_data_offset": {
                    "name": "PTP_RX_LANE0_CALC_DATA_OFFSET",
                    "addressOffset": "0x904",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_1": {
                            "name": "DATA_OFFSET_1",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane0_calc_data_time": {
                    "name": "PTP_TX_LANE0_CALC_DATA_TIME",
                    "addressOffset": "0x908",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_0": {
                            "name": "DATA_TIME_0",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane0_calc_data_time": {
                    "name": "PTP_RX_LANE0_CALC_DATA_TIME",
                    "addressOffset": "0x90C",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_1": {
                            "name": "DATA_TIME_1",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane0_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE0_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x910",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_0": {
                            "name": "DATA_WIREDELAY_0",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane0_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE0_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x914",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_1": {
                            "name": "DATA_WIREDELAY_1",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane1_calc_data_offset": {
                    "name": "PTP_TX_LANE1_CALC_DATA_OFFSET",
                    "addressOffset": "0x920",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_2": {
                            "name": "DATA_OFFSET_2",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane1_calc_data_offset": {
                    "name": "PTP_RX_LANE1_CALC_DATA_OFFSET",
                    "addressOffset": "0x924",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_3": {
                            "name": "DATA_OFFSET_3",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane1_calc_data_time": {
                    "name": "PTP_TX_LANE1_CALC_DATA_TIME",
                    "addressOffset": "0x928",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_2": {
                            "name": "DATA_TIME_2",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane1_calc_data_time": {
                    "name": "PTP_RX_LANE1_CALC_DATA_TIME",
                    "addressOffset": "0x92C",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_3": {
                            "name": "DATA_TIME_3",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane1_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE1_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x930",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_2": {
                            "name": "DATA_WIREDELAY_2",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane1_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE1_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x934",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_3": {
                            "name": "DATA_WIREDELAY_3",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane2_calc_data_offset": {
                    "name": "PTP_TX_LANE2_CALC_DATA_OFFSET",
                    "addressOffset": "0x940",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_4": {
                            "name": "DATA_OFFSET_4",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane2_calc_data_offset": {
                    "name": "PTP_RX_LANE2_CALC_DATA_OFFSET",
                    "addressOffset": "0x944",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_5": {
                            "name": "DATA_OFFSET_5",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane2_calc_data_time": {
                    "name": "PTP_TX_LANE2_CALC_DATA_TIME",
                    "addressOffset": "0x948",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_4": {
                            "name": "DATA_TIME_4",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane2_calc_data_time": {
                    "name": "PTP_RX_LANE2_CALC_DATA_TIME",
                    "addressOffset": "0x94C",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_5": {
                            "name": "DATA_TIME_5",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane2_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE2_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x950",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_4": {
                            "name": "DATA_WIREDELAY_4",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane2_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE2_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x954",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_5": {
                            "name": "DATA_WIREDELAY_5",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane3_calc_data_offset": {
                    "name": "PTP_TX_LANE3_CALC_DATA_OFFSET",
                    "addressOffset": "0x960",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_6": {
                            "name": "DATA_OFFSET_6",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane3_calc_data_offset": {
                    "name": "PTP_RX_LANE3_CALC_DATA_OFFSET",
                    "addressOffset": "0x964",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_7": {
                            "name": "DATA_OFFSET_7",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane3_calc_data_time": {
                    "name": "PTP_TX_LANE3_CALC_DATA_TIME",
                    "addressOffset": "0x968",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_6": {
                            "name": "DATA_TIME_6",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane3_calc_data_time": {
                    "name": "PTP_RX_LANE3_CALC_DATA_TIME",
                    "addressOffset": "0x96C",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_7": {
                            "name": "DATA_TIME_7",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane3_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE3_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x970",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_6": {
                            "name": "DATA_WIREDELAY_6",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane3_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE3_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x974",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_7": {
                            "name": "DATA_WIREDELAY_7",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane4_calc_data_offset": {
                    "name": "PTP_TX_LANE4_CALC_DATA_OFFSET",
                    "addressOffset": "0x980",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_8": {
                            "name": "DATA_OFFSET_8",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lan0.e"
                            ]
                        }
                    }
                },
                "ptp_rx_lane4_calc_data_offset": {
                    "name": "PTP_RX_LANE4_CALC_DATA_OFFSET",
                    "addressOffset": "0x984",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_9": {
                            "name": "DATA_OFFSET_9",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane4_calc_data_time": {
                    "name": "PTP_TX_LANE4_CALC_DATA_TIME",
                    "addressOffset": "0x988",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_8": {
                            "name": "DATA_TIME_8",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane4_calc_data_time": {
                    "name": "PTP_RX_LANE4_CALC_DATA_TIME",
                    "addressOffset": "0x98C",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_9": {
                            "name": "DATA_TIME_9",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane4_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE4_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x990",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_8": {
                            "name": "DATA_WIREDELAY_8",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "> ",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane4_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE4_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x994",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_9": {
                            "name": "DATA_WIREDELAY_9",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane5_calc_data_offset": {
                    "name": "PTP_TX_LANE5_CALC_DATA_OFFSET",
                    "addressOffset": "0x9A0",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_10": {
                            "name": "DATA_OFFSET_10",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane5_calc_data_offset": {
                    "name": "PTP_RX_LANE5_CALC_DATA_OFFSET",
                    "addressOffset": "0x9A4",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_11": {
                            "name": "DATA_OFFSET_11",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane5_calc_data_time": {
                    "name": "PTP_TX_LANE5_CALC_DATA_TIME",
                    "addressOffset": "0x9A8",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_10": {
                            "name": "DATA_TIME_10",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane5_calc_data_time": {
                    "name": "PTP_RX_LANE5_CALC_DATA_TIME",
                    "addressOffset": "0x9AC",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_11": {
                            "name": "DATA_TIME_11",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane5_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE5_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x9B0",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_10": {
                            "name": "DATA_WIREDELAY_10",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane5_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE5_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x9B4",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_11": {
                            "name": "DATA_WIREDELAY_11",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane6_calc_data_offset": {
                    "name": "PTP_TX_LANE6_CALC_DATA_OFFSET",
                    "addressOffset": "0x9C0",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_12": {
                            "name": "DATA_OFFSET_12",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane6_calc_data_offset": {
                    "name": "PTP_RX_LANE6_CALC_DATA_OFFSET",
                    "addressOffset": "0x9C4",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_13": {
                            "name": "DATA_OFFSET_13",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane6_calc_data_time": {
                    "name": "PTP_TX_LANE6_CALC_DATA_TIME",
                    "addressOffset": "0x9C8",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_12": {
                            "name": "DATA_TIME_12",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane6_calc_data_time": {
                    "name": "PTP_RX_LANE6_CALC_DATA_TIME",
                    "addressOffset": "0x9CC",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_13": {
                            "name": "DATA_TIME_13",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane6_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE6_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x9D0",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_12": {
                            "name": "DATA_WIREDELAY_12",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane6_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE6_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x9D4",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_13": {
                            "name": "DATA_WIREDELAY_13",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane7_calc_data_offset": {
                    "name": "PTP_TX_LANE7_CALC_DATA_OFFSET",
                    "addressOffset": "0x9E0",
                    "desc": [
                        "Time offset value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_14": {
                            "name": "DATA_OFFSET_14",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane7_calc_data_offset": {
                    "name": "PTP_RX_LANE7_CALC_DATA_OFFSET",
                    "addressOffset": "0x9E4",
                    "desc": [
                        "Time offset value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_offset_15": {
                            "name": "DATA_OFFSET_15",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Time offset for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane7_calc_data_time": {
                    "name": "PTP_TX_LANE7_CALC_DATA_TIME",
                    "addressOffset": "0x9E8",
                    "desc": [
                        "Time value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_14": {
                            "name": "DATA_TIME_14",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane7_calc_data_time": {
                    "name": "PTP_RX_LANE7_CALC_DATA_TIME",
                    "addressOffset": "0x9EC",
                    "desc": [
                        "Time value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_time_15": {
                            "name": "DATA_TIME_15",
                            "bitOffset": 0,
                            "bitWidth": 28,
                            "access": "ro",
                            "desc": [
                                "",
                                "Marker time for specific RX physical lane."
                            ]
                        }
                    }
                },
                "ptp_tx_lane7_calc_data_wiredelay": {
                    "name": "PTP_TX_LANE7_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x9F0",
                    "desc": [
                        "Wire delay value used in TX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_14": {
                            "name": "DATA_WIREDELAY_14",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific TX physical lane."
                            ]
                        }
                    }
                },
                "ptp_rx_lane7_calc_data_wiredelay": {
                    "name": "PTP_RX_LANE7_CALC_DATA_WIREDELAY",
                    "addressOffset": "0x9F4",
                    "desc": [
                        "Wire delay value used in RX TAM adjustment calculation"
                    ],
                    "fields": {
                        "data_wiredelay_15": {
                            "name": "DATA_WIREDELAY_15",
                            "bitOffset": 0,
                            "bitWidth": 20,
                            "access": "ro",
                            "desc": [
                                "",
                                "Wire delay for specific RX physical lane."
                            ]
                        }
                    }
                },
                "rxmac_adapt_dropped_31_0": {
                    "name": "RXMAC_ADAPT_DROPPED_31_0",
                    "addressOffset": "0x140",
                    "desc": [
                        "RX MAC adapter dropped frame counter lower bits"
                    ],
                    "fields": {
                        "rxmac_adapt_dropped_31_0": {
                            "name": "RXMAC_ADAPT_DROPPED_31_0",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Bits [31:0] of RX MAC adapter dropped frame counter."
                            ]
                        }
                    }
                },
                "rxmac_adapt_dropped_63_32": {
                    "name": "RXMAC_ADAPT_DROPPED_63_32",
                    "addressOffset": "0x144",
                    "desc": [
                        "RX MAC adapter dropped frame counter upper bits"
                    ],
                    "fields": {
                        "rxmac_adapt_dropped_63_32": {
                            "name": "RXMAC_ADAPT_DROPPED_63_32",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "",
                                "Bits [63:32] of RXMAC adapter dropped frame counter."
                            ]
                        }
                    }
                },
                "rxmac_adapt_dropped_control": {
                    "name": "RXMAC_ADAPT_DROPPED_CONTROL",
                    "addressOffset": "0x148",
                    "desc": [
                        "RX MAC Adapter Control"
                    ],
                    "fields": {
                        "rxmac_adapt_dropped_snapshot": {
                            "name": "RXMAC_ADAPT_DROPPED_SNAPSHOT",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Snapshot RXMAC adapter dropped counter."
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "rxmac_adapt_dropped_clear": {
                            "name": "RXMAC_ADAPT_DROPPED_CLEAR",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "",
                                "Clear RXMAC adapter dropped counter."
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "cwbin_control_register": {
                    "name": "CWBIN_CONTROL_REGISTER",
                    "addressOffset": "0x400",
                    "desc": [
                        "Soft cwbin control register ",
                        "1 : resets the cwbin module"
                    ],
                    "fields": {
                        "cwbin_control_register": {
                            "name": "CWBIN_CONTROL_REGISTER",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Soft cwbin control register ",
                                "1 : resets the cwbin module"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        }
                    }
                },
                "cwbin0_A": {
                    "name": "CWBIN0_A",
                    "addressOffset": "0x404",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 0 Errors are accumulated to 32 bit counter Block A"
                    ],
                    "fields": {
                        "cwbin0_a": {
                            "name": "CWBIN0_A",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 0 Errors are accumulated to 32 bit counter Block A"
                            ]
                        }
                    }
                },
                "cwbin1_A": {
                    "name": "CWBIN1_A",
                    "addressOffset": "0x408",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 1 Errors are accumulated to 32 bit counter Block A"
                    ],
                    "fields": {
                        "cwbin1_a": {
                            "name": "CWBIN1_A",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 1 Errors are accumulated to 32 bit counter Block A"
                            ]
                        }
                    }
                },
                "cwbin2_A": {
                    "name": "CWBIN2_A",
                    "addressOffset": "0x40C",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 2 Errors are accumulated to 32 bit counter Block A"
                    ],
                    "fields": {
                        "cwbin2_a": {
                            "name": "CWBIN2_A",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 2 Errors are accumulated to 32 bit counter Block A"
                            ]
                        }
                    }
                },
                "cwbin3_A": {
                    "name": "CWBIN3_A",
                    "addressOffset": "0x410",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 3 Errors are accumulated to 32 bit counter Block A"
                    ],
                    "fields": {
                        "cwbin3_a": {
                            "name": "CWBIN3_A",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 3 Errors are accumulated to 32 bit counter Block A"
                            ]
                        }
                    }
                },
                "cwbin0_B": {
                    "name": "CWBIN0_B",
                    "addressOffset": "0x414",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 0 Errors are accumulated to 32 bit counter BlockB"
                    ],
                    "fields": {
                        "cwbin0_b": {
                            "name": "CWBIN0_B",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 0 Errors are accumulated to 32 bit counter BlockB"
                            ]
                        }
                    }
                },
                "cwbin1_B": {
                    "name": "CWBIN1_B",
                    "addressOffset": "0x418",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 1 Errors are accumulated to 32 bit counter Block B"
                    ],
                    "fields": {
                        "cwbin1_b": {
                            "name": "CWBIN1_B",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 1 Errors are accumulated to 32 bit counter Block B"
                            ]
                        }
                    }
                },
                "cwbin2_B": {
                    "name": "CWBIN2_B",
                    "addressOffset": "0x41C",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 2 Errors are accumulated to 32 bit counter Block B"
                    ],
                    "fields": {
                        "cwbin2_b": {
                            "name": "CWBIN2_B",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 2 Errors are accumulated to 32 bit counter Block B"
                            ]
                        }
                    }
                },
                "cwbin3_B": {
                    "name": "CWBIN3_B",
                    "addressOffset": "0x420",
                    "desc": [
                        "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 3 Errors are accumulated to 32 bit counter Block B"
                    ],
                    "fields": {
                        "cwbin3_b": {
                            "name": "CWBIN3_B",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Hard IP rsfec_corr_cwbin_cnt_0_3 - cwbin 3 Errors are accumulated to 32 bit counter Block B"
                            ]
                        }
                    }
                },
                "eth_reset": {
                    "name": "ETH_RESET",
                    "addressOffset": "0x108",
                    "desc": [
                        "IP Soft Reset Register ",
                        "Includes the following: ",
                        "- eio_sys_rst (Soft Global Reset)",
                        "- soft_tx_rst (Soft TX Reset)",
                        "- soft_rx_rst (Soft RX Reset)",
                        "- tx_clear_alarm (Clear TX Reset Alarm)",
                        "- rx_clear_alarm (Clear RX Reset Alarm)",
                        ""
                    ],
                    "fields": {
                        "eio_sys_rst": {
                            "name": "EIO_SYS_RST",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Soft Global Reset ",
                                "1: Global Reset (Reset datapath and all CSR registers) ",
                                ""
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "soft_tx_rst": {
                            "name": "SOFT_TX_RST",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Soft TX Reset ",
                                "1:Reset the TX datapath"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "soft_rx_rst": {
                            "name": "SOFT_RX_RST",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Soft RX Reset ",
                                "1:Reset the RX datapath"
                            ],
                            "reset": "0b0",
                            "ftype": "boolean"
                        },
                        "tx_clear_alarm": {
                            "name": "TX_CLEAR_ALARM",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "Clear TX Reset Alarm ",
                                "1:Clear TX Reset Alarm indication for transceiver lane"
                            ],
                            "reset": "0x00"
                        },
                        "rx_clear_alarm": {
                            "name": "RX_CLEAR_ALARM",
                            "bitOffset": 24,
                            "bitWidth": 8,
                            "access": "rw",
                            "desc": [
                                "Clear RX reset alarm ",
                                "1:Clear RX reset alarm indication for transceiver lane"
                            ],
                            "reset": "0x00"
                        }
                    }
                },
                "eth_reset_status": {
                    "name": "ETH_RESET_STATUS",
                    "addressOffset": "0x10C",
                    "desc": [
                        "IP Reset Status Register. Not sticky bit. Includes the following fields: ",
                        "",
                        "- rst_ack_n",
                        "- tx_rst_ack_n",
                        "- rx_rst_ack_n",
                        "- tx_lane_current_state",
                        "- rx_lane_current_state",
                        "- tx_alarm",
                        "- rx_alarm",
                        ""
                    ],
                    "fields": {
                        "rst_ack_n": {
                            "name": "RST_ACK_N",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Global reset acknowledge. Active low (hard reset or the global soft reset) ",
                                "1:Acknowledge the reset completed."
                            ],
                            "ftype": "boolean"
                        },
                        "tx_rst_ack_n": {
                            "name": "TX_RST_ACK_N",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "TX Reset acknowledge. Active low (either the hard tx reset or the soft_tx_rst ) ",
                                "1:Acknowledge the reset completed."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_rst_ack_n": {
                            "name": "RX_RST_ACK_N",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "RX Reset acknowledge. Active high (either the hard rx reset or the soft_rx_rst ) ",
                                "1:acknowledge the reset completed."
                            ],
                            "ftype": "boolean"
                        },
                        "tx_lane_current_state": {
                            "name": "TX_LANE_CURRENT_STATE",
                            "bitOffset": 8,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "TX Lane Current State ",
                                "Current reset state for TX PMA and datapath: ",
                                "- [0]: Fully in reset state",
                                "- [1]: Fully out of reset state (operational)",
                                "- Reset control initialized (system clock stable)",
                                "",
                                "If not fully in reset or out of reset, TX reset is currently transitioning."
                            ]
                        },
                        "rx_lane_current_state": {
                            "name": "RX_LANE_CURRENT_STATE",
                            "bitOffset": 12,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "RX Lane Current State ",
                                "Current reset state for RX PMAs and datapath: ",
                                "- [0]: Fully in reset state",
                                "- [1]: Fully out of reset state (operational)",
                                "- Reset control initialized (system clock stable)",
                                "",
                                "If not fully in reset or out of reset, RX reset is currently transitioning."
                            ]
                        },
                        "tx_alarm": {
                            "name": "TX_ALARM",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "TX Reset Alarm ",
                                "Indicates an unexpected loss-off-PLL lock caused a change in the TX reset state."
                            ]
                        },
                        "rx_alarm": {
                            "name": "RX_ALARM",
                            "bitOffset": 24,
                            "bitWidth": 8,
                            "access": "ro",
                            "desc": [
                                "RX Reset Alarm ",
                                "Indicates an unexpected loss-off-PLL lock caused a change in the RX reset state."
                            ]
                        }
                    }
                },
                "gui_option": {
                    "name": "GUI_OPTION",
                    "addressOffset": "0x100",
                    "desc": [
                        "Device and IP variant. Includes the following fields: ",
                        "",
                        "- device_name",
                        "- tile_name",
                        "- eth_rate",
                        "- anlt_enable",
                        "- modulation_type",
                        "- rsfec_type",
                        "- ptp_enable",
                        "- flow_control_mode",
                        "- client_intf",
                        "- xcvr_type",
                        "- num_lanes",
                        ""
                    ],
                    "fields": {
                        "device_name": {
                            "name": "DEVICE_NAME",
                            "bitOffset": 0,
                            "bitWidth": 2,
                            "access": "ro",
                            "desc": [
                                "Device name ",
                                "0:Reserved, 1:Intel Agilex."
                            ]
                        },
                        "tile_name": {
                            "name": "TILE_NAME",
                            "bitOffset": 2,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Tile name ",
                                "0-2:Reserved,3:F-tile, 4-7:Reserved"
                            ]
                        },
                        "eth_rate": {
                            "name": "ETH_RATE",
                            "bitOffset": 5,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Ethernet rate ",
                                "0:10G, 1:25G, 2:40G, 3:50G, 4:100G, 5:200G, 6:400G, 7:Reserved"
                            ]
                        },
                        "anlt_enable": {
                            "name": "ANLT_ENABLE",
                            "bitOffset": 8,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Enable AN/LT ",
                                "0:AN/LT is disabled, 1:AN/LT is enabled"
                            ],
                            "ftype": "boolean"
                        },
                        "modulation_type": {
                            "name": "MODULATION_TYPE",
                            "bitOffset": 9,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Modulation type ",
                                "0:NRZ, 1:PAM-4"
                            ],
                            "ftype": "boolean"
                        },
                        "rsfec_type": {
                            "name": "RSFEC_TYPE",
                            "bitOffset": 10,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "FEC mode ",
                                "0:None 1:Firecode (Clause 74), 2:RS(528,514) (Clause 91), 3:RS(544,514) (Clause 134), 4:Ethernet Technology Consortium RS(272,258), 5-7:Reserved"
                            ]
                        },
                        "ptp_enable": {
                            "name": "PTP_ENABLE",
                            "bitOffset": 13,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "1588 PTP Enabled? ",
                                "0:1588 PTP is disabled, 1:1588 PTP is enabled"
                            ],
                            "ftype": "boolean"
                        },
                        "flow_control_mode": {
                            "name": "FLOW_CONTROL_MODE",
                            "bitOffset": 14,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Flow control mode ",
                                "0:Disabled, 1:SFC, 2:SFC with no XOFF, 3:PFC, 4:PFC with no XOFF, 5:Both SFC and PFC, 6:Both SFC and PFC wit no XOFF, 7:RX SFC Disabled"
                            ]
                        },
                        "client_intf": {
                            "name": "CLIENT_INTF",
                            "bitOffset": 17,
                            "bitWidth": 3,
                            "access": "ro",
                            "desc": [
                                "Client interface ",
                                "0: MAC segemented interface, 1: MAC Avalon Streaming interface, 2: PCS interface, 3: OTN interface, 4: FlexE interface, 5-7:Reserved"
                            ]
                        },
                        "xcvr_type": {
                            "name": "XCVR_TYPE",
                            "bitOffset": 20,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "PMA type ",
                                "0: FGT, 1: FHT"
                            ],
                            "ftype": "boolean"
                        },
                        "num_lanes": {
                            "name": "NUM_LANES",
                            "bitOffset": 21,
                            "bitWidth": 4,
                            "access": "ro",
                            "desc": [
                                "Number of lanes ",
                                "1: 1 lane, 2: 2 lanes, 4: 4 lanes, 8: 8 lanes"
                            ]
                        }
                    }
                },
                "qhip_scratch": {
                    "name": "QHIP_SCRATCH",
                    "addressOffset": "0x104",
                    "desc": [
                        "Scratch Register"
                    ],
                    "fields": {
                        "scratch": {
                            "name": "SCRATCH",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "rw",
                            "desc": [
                                "",
                                "32 bits of scratch register space for testing"
                            ],
                            "reset": "0x00000000"
                        }
                    }
                },
                "link_fault_status": {
                    "name": "LINK_FAULT_STATUS",
                    "addressOffset": "0x120",
                    "desc": [
                        "Link Fault Status ",
                        "Status registers to report Local and Remote Link Faults"
                    ],
                    "fields": {
                        "lfault": {
                            "name": "LFAULT",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Local Fault detected ",
                                "1:Ethernet Hard IP detected a local fault"
                            ],
                            "ftype": "boolean"
                        },
                        "rfault": {
                            "name": "RFAULT",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Remote Fault detected ",
                                "1:Ethernet Hard IP detected a remote fault"
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_1L": {
                    "name": "TX_SYNC_COUNTER_1L",
                    "addressOffset": "0x300",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_1l": {
                            "name": "TX_SYNC_COUNTER_1L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_1L": {
                    "name": "TX_ASYNC_COUNTER_1L",
                    "addressOffset": "0x304",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_1l": {
                            "name": "TX_ASYNC_COUNTER_1L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_1L": {
                    "name": "RX_SYNC_COUNTER_1L",
                    "addressOffset": "0x308",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_1l": {
                            "name": "RX_SYNC_COUNTER_1L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_1L": {
                    "name": "RX_ASYNC_COUNTER_1L",
                    "addressOffset": "0x30C",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_1l": {
                            "name": "RX_ASYNC_COUNTER_1L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_1L": {
                    "name": "DL_CFG_1L",
                    "addressOffset": "0x310",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_dl_restart_0": {
                            "name": "TX_DL_RESTART_0",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_0": {
                            "name": "RX_DL_RESTART_0",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_0": {
                            "name": "TX_MEASURE_VALID_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_0": {
                            "name": "RX_MEASURE_VALID_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_1L": {
                    "name": "TX_DL_DELAY_1L",
                    "addressOffset": "0x314",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        ""
                    ],
                    "fields": {
                        "tx_dl_delay_1l": {
                            "name": "TX_DL_DELAY_1L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "rx_dl_delay_1L": {
                    "name": "RX_DL_DELAY_1L",
                    "addressOffset": "0x318",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        ""
                    ],
                    "fields": {
                        "rx_dl_delay_1l": {
                            "name": "RX_DL_DELAY_1L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "dl_status_1L": {
                    "name": "DL_STATUS_1L",
                    "addressOffset": "0x31C",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        ""
                    ],
                    "fields": {
                        "tx_sync_valid_0": {
                            "name": "TX_SYNC_VALID_0",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_0": {
                            "name": "TX_ASYNC_VALID_0",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_0": {
                            "name": "RX_SYNC_VALID_0",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_0": {
                            "name": "RX_ASYNC_VALID_0",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_2L": {
                    "name": "TX_SYNC_COUNTER_2L",
                    "addressOffset": "0x320",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_2l": {
                            "name": "TX_SYNC_COUNTER_2L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_2L": {
                    "name": "TX_ASYNC_COUNTER_2L",
                    "addressOffset": "0x324",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_2l": {
                            "name": "TX_ASYNC_COUNTER_2L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_2L": {
                    "name": "RX_SYNC_COUNTER_2L",
                    "addressOffset": "0x328",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_2l": {
                            "name": "RX_SYNC_COUNTER_2L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_2L": {
                    "name": "RX_ASYNC_COUNTER_2L",
                    "addressOffset": "0x32C",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_2l": {
                            "name": "RX_ASYNC_COUNTER_2L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_2L": {
                    "name": "DL_CFG_2L",
                    "addressOffset": "0x330",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_dl_restart_1": {
                            "name": "TX_DL_RESTART_1",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_1": {
                            "name": "RX_DL_RESTART_1",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_1": {
                            "name": "TX_MEASURE_VALID_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_1": {
                            "name": "RX_MEASURE_VALID_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_2L": {
                    "name": "TX_DL_DELAY_2L",
                    "addressOffset": "0x334",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        ""
                    ],
                    "fields": {
                        "tx_dl_delay_2l": {
                            "name": "TX_DL_DELAY_2L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "rx_dl_delay_2L": {
                    "name": "RX_DL_DELAY_2L",
                    "addressOffset": "0x338",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        ""
                    ],
                    "fields": {
                        "rx_dl_delay_2l": {
                            "name": "RX_DL_DELAY_2L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "dl_status_2L": {
                    "name": "DL_STATUS_2L",
                    "addressOffset": "0x33C",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "."
                    ],
                    "fields": {
                        "tx_sync_valid_1": {
                            "name": "TX_SYNC_VALID_1",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_1": {
                            "name": "TX_ASYNC_VALID_1",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_1": {
                            "name": "RX_SYNC_VALID_1",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_1": {
                            "name": "RX_ASYNC_VALID_1",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_3L": {
                    "name": "TX_SYNC_COUNTER_3L",
                    "addressOffset": "0x340",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_3l": {
                            "name": "TX_SYNC_COUNTER_3L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_3L": {
                    "name": "TX_ASYNC_COUNTER_3L",
                    "addressOffset": "0x344",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_3l": {
                            "name": "TX_ASYNC_COUNTER_3L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_3L": {
                    "name": "RX_SYNC_COUNTER_3L",
                    "addressOffset": "0x348",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_3l": {
                            "name": "RX_SYNC_COUNTER_3L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_3L": {
                    "name": "RX_ASYNC_COUNTER_3L",
                    "addressOffset": "0x34C",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_3l": {
                            "name": "RX_ASYNC_COUNTER_3L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_3L": {
                    "name": "DL_CFG_3L",
                    "addressOffset": "0x350",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        ""
                    ],
                    "fields": {
                        "tx_dl_restart_2": {
                            "name": "TX_DL_RESTART_2",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_2": {
                            "name": "RX_DL_RESTART_2",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_2": {
                            "name": "TX_MEASURE_VALID_2",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_2": {
                            "name": "RX_MEASURE_VALID_2",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_3L": {
                    "name": "TX_DL_DELAY_3L",
                    "addressOffset": "0x354",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        ""
                    ],
                    "fields": {
                        "tx_dl_delay_3l": {
                            "name": "TX_DL_DELAY_3L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "rx_dl_delay_3L": {
                    "name": "RX_DL_DELAY_3L",
                    "addressOffset": "0x358",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        ""
                    ],
                    "fields": {
                        "rx_dl_delay_3l": {
                            "name": "RX_DL_DELAY_3L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "dl_status_3L": {
                    "name": "DL_STATUS_3L",
                    "addressOffset": "0x35C",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        ""
                    ],
                    "fields": {
                        "tx_sync_valid_2": {
                            "name": "TX_SYNC_VALID_2",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "."
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_2": {
                            "name": "TX_ASYNC_VALID_2",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_2": {
                            "name": "RX_SYNC_VALID_2",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_2": {
                            "name": "RX_ASYNC_VALID_2",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_4L": {
                    "name": "TX_SYNC_COUNTER_4L",
                    "addressOffset": "0x360",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_4l": {
                            "name": "TX_SYNC_COUNTER_4L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_4L": {
                    "name": "TX_ASYNC_COUNTER_4L",
                    "addressOffset": "0x364",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_4l": {
                            "name": "TX_ASYNC_COUNTER_4L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_4L": {
                    "name": "RX_SYNC_COUNTER_4L",
                    "addressOffset": "0x368",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_4l": {
                            "name": "RX_SYNC_COUNTER_4L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_4L": {
                    "name": "RX_ASYNC_COUNTER_4L",
                    "addressOffset": "0x36C",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_4l": {
                            "name": "RX_ASYNC_COUNTER_4L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_4L": {
                    "name": "DL_CFG_4L",
                    "addressOffset": "0x370",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_dl_restart_3": {
                            "name": "TX_DL_RESTART_3",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_3": {
                            "name": "RX_DL_RESTART_3",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_3": {
                            "name": "TX_MEASURE_VALID_3",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_3": {
                            "name": "RX_MEASURE_VALID_3",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_4L": {
                    "name": "TX_DL_DELAY_4L",
                    "addressOffset": "0x374",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "tx_dl_delay_4l": {
                            "name": "TX_DL_DELAY_4L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "rx_dl_delay_4L": {
                    "name": "RX_DL_DELAY_4L",
                    "addressOffset": "0x378",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "rx_dl_delay_4l": {
                            "name": "RX_DL_DELAY_4L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "dl_status_4L": {
                    "name": "DL_STATUS_4L",
                    "addressOffset": "0x37C",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_sync_valid_3": {
                            "name": "TX_SYNC_VALID_3",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_3": {
                            "name": "TX_ASYNC_VALID_3",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_3": {
                            "name": "RX_SYNC_VALID_3",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_3": {
                            "name": "RX_ASYNC_VALID_3",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_5L": {
                    "name": "TX_SYNC_COUNTER_5L",
                    "addressOffset": "0x380",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_5l": {
                            "name": "TX_SYNC_COUNTER_5L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_5L": {
                    "name": "TX_ASYNC_COUNTER_5L",
                    "addressOffset": "0x384",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_5l": {
                            "name": "TX_ASYNC_COUNTER_5L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_5L": {
                    "name": "RX_SYNC_COUNTER_5L",
                    "addressOffset": "0x388",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_5l": {
                            "name": "RX_SYNC_COUNTER_5L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_5L": {
                    "name": "RX_ASYNC_COUNTER_5L",
                    "addressOffset": "0x38C",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_5l": {
                            "name": "RX_ASYNC_COUNTER_5L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_5L": {
                    "name": "DL_CFG_5L",
                    "addressOffset": "0x390",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_dl_restart_4": {
                            "name": "TX_DL_RESTART_4",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_4": {
                            "name": "RX_DL_RESTART_4",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_4": {
                            "name": "TX_MEASURE_VALID_4",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_4": {
                            "name": "RX_MEASURE_VALID_4",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_5L": {
                    "name": "TX_DL_DELAY_5L",
                    "addressOffset": "0x394",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "tx_dl_delay_5l": {
                            "name": "TX_DL_DELAY_5L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                            ]
                        }
                    }
                },
                "rx_dl_delay_5L": {
                    "name": "RX_DL_DELAY_5L",
                    "addressOffset": "0x398",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "rx_dl_delay_5l": {
                            "name": "RX_DL_DELAY_5L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                            ]
                        }
                    }
                },
                "dl_status_5L": {
                    "name": "DL_STATUS_5L",
                    "addressOffset": "0x39C",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_sync_valid_4": {
                            "name": "TX_SYNC_VALID_4",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_4": {
                            "name": "TX_ASYNC_VALID_4",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_4": {
                            "name": "RX_SYNC_VALID_4",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_4": {
                            "name": "RX_ASYNC_VALID_4",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_6L": {
                    "name": "TX_SYNC_COUNTER_6L",
                    "addressOffset": "0x3A0",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_6l": {
                            "name": "TX_SYNC_COUNTER_6L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_6L": {
                    "name": "TX_ASYNC_COUNTER_6L",
                    "addressOffset": "0x3A4",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_6l": {
                            "name": "TX_ASYNC_COUNTER_6L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_6L": {
                    "name": "RX_SYNC_COUNTER_6L",
                    "addressOffset": "0x3A8",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_6l": {
                            "name": "RX_SYNC_COUNTER_6L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_6L": {
                    "name": "RX_ASYNC_COUNTER_6L",
                    "addressOffset": "0x3AC",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_6l": {
                            "name": "RX_ASYNC_COUNTER_6L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_6L": {
                    "name": "DL_CFG_6L",
                    "addressOffset": "0x3B0",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_dl_restart_5": {
                            "name": "TX_DL_RESTART_5",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_5": {
                            "name": "RX_DL_RESTART_5",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_5": {
                            "name": "TX_MEASURE_VALID_5",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_5": {
                            "name": "RX_MEASURE_VALID_5",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_6L": {
                    "name": "TX_DL_DELAY_6L",
                    "addressOffset": "0x3B4",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "tx_dl_delay_6l": {
                            "name": "TX_DL_DELAY_6L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                            ]
                        }
                    }
                },
                "rx_dl_delay_6L": {
                    "name": "RX_DL_DELAY_6L",
                    "addressOffset": "0x3B8",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "rx_dl_delay_6l": {
                            "name": "RX_DL_DELAY_6L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                            ]
                        }
                    }
                },
                "dl_status_6L": {
                    "name": "DL_STATUS_6L",
                    "addressOffset": "0x3BC",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_sync_valid_5": {
                            "name": "TX_SYNC_VALID_5",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_5": {
                            "name": "TX_ASYNC_VALID_5",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_5": {
                            "name": "RX_SYNC_VALID_5",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_5": {
                            "name": "RX_ASYNC_VALID_5",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_7L": {
                    "name": "TX_SYNC_COUNTER_7L",
                    "addressOffset": "0x3C0",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_7l": {
                            "name": "TX_SYNC_COUNTER_7L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_7L": {
                    "name": "TX_ASYNC_COUNTER_7L",
                    "addressOffset": "0x3C4",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_7l": {
                            "name": "TX_ASYNC_COUNTER_7L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_7L": {
                    "name": "RX_SYNC_COUNTER_7L",
                    "addressOffset": "0x3C8",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_7l": {
                            "name": "RX_SYNC_COUNTER_7L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_7L": {
                    "name": "RX_ASYNC_COUNTER_7L",
                    "addressOffset": "0x3CC",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_7l": {
                            "name": "RX_ASYNC_COUNTER_7L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_7L": {
                    "name": "DL_CFG_7L",
                    "addressOffset": "0x3D0",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_dl_restart_6": {
                            "name": "TX_DL_RESTART_6",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_6": {
                            "name": "RX_DL_RESTART_6",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_6": {
                            "name": "TX_MEASURE_VALID_6",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_6": {
                            "name": "RX_MEASURE_VALID_6",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_7L": {
                    "name": "TX_DL_DELAY_7L",
                    "addressOffset": "0x3D4",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "tx_dl_delay_7l": {
                            "name": "TX_DL_DELAY_7L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "rx_dl_delay_7L": {
                    "name": "RX_DL_DELAY_7L",
                    "addressOffset": "0x3D8",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "rx_dl_delay_7l": {
                            "name": "RX_DL_DELAY_7L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "dl_status_7L": {
                    "name": "DL_STATUS_7L",
                    "addressOffset": "0x3DC",
                    "desc": [
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                        "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                    ],
                    "fields": {
                        "tx_sync_valid_6": {
                            "name": "TX_SYNC_VALID_6",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_6": {
                            "name": "TX_ASYNC_VALID_6",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_6": {
                            "name": "RX_SYNC_VALID_6",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                ""
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_6": {
                            "name": "RX_ASYNC_VALID_6",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                "."
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_sync_counter_8L": {
                    "name": "TX_SYNC_COUNTER_8L",
                    "addressOffset": "0x3E0",
                    "desc": [
                        "tx_sync_counter_1L ",
                        "TX synchronous counter value. Must be qualified with tx_sync_valid."
                    ],
                    "fields": {
                        "tx_sync_counter_8l": {
                            "name": "TX_SYNC_COUNTER_8L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_sync_counter_1L ",
                                "TX synchronous counter value. Must be qualified with tx_sync_valid."
                            ]
                        }
                    }
                },
                "tx_async_counter_8L": {
                    "name": "TX_ASYNC_COUNTER_8L",
                    "addressOffset": "0x3E4",
                    "desc": [
                        "tx_async_counter_1L ",
                        "TX asynchronous counter value. Must be qualified with tx_async_valid."
                    ],
                    "fields": {
                        "tx_async_counter_8l": {
                            "name": "TX_ASYNC_COUNTER_8L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "tx_async_counter_1L ",
                                "TX asynchronous counter value. Must be qualified with tx_async_valid."
                            ]
                        }
                    }
                },
                "rx_sync_counter_8L": {
                    "name": "RX_SYNC_COUNTER_8L",
                    "addressOffset": "0x3E8",
                    "desc": [
                        "rx_sync_counter_1L ",
                        "RX synchronous counter value. Must be qualified with rx_sync_valid."
                    ],
                    "fields": {
                        "rx_sync_counter_8l": {
                            "name": "RX_SYNC_COUNTER_8L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_sync_counter_1L ",
                                "RX synchronous counter value. Must be qualified with rx_sync_valid."
                            ]
                        }
                    }
                },
                "rx_async_counter_8L": {
                    "name": "RX_ASYNC_COUNTER_8L",
                    "addressOffset": "0x3EC",
                    "desc": [
                        "rx_async_counter_1L ",
                        "RX asynchronous counter value. Must be qualified with rx_async_valid."
                    ],
                    "fields": {
                        "rx_async_counter_8l": {
                            "name": "RX_ASYNC_COUNTER_8L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "rx_async_counter_1L ",
                                "RX asynchronous counter value. Must be qualified with rx_async_valid."
                            ]
                        }
                    }
                },
                "dl_cfg_8L": {
                    "name": "DL_CFG_8L",
                    "addressOffset": "0x3F0",
                    "desc": [
                        "Deterministic Latency Configuration ",
                        "Deterministic Latency Configuration"
                    ],
                    "fields": {
                        "tx_dl_restart_7": {
                            "name": "TX_DL_RESTART_7",
                            "bitOffset": 31,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "rx_dl_restart_7": {
                            "name": "RX_DL_RESTART_7",
                            "bitOffset": 30,
                            "bitWidth": 1,
                            "access": "rw",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                ""
                            ],
                            "reset": 0,
                            "ftype": "boolean"
                        },
                        "tx_measure_valid_7": {
                            "name": "TX_MEASURE_VALID_7",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                "."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_measure_valid_7": {
                            "name": "RX_MEASURE_VALID_7",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted. ",
                                ""
                            ],
                            "ftype": "boolean"
                        }
                    }
                },
                "tx_dl_delay_8L": {
                    "name": "TX_DL_DELAY_8L",
                    "addressOffset": "0x3F4",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "tx_dl_delay_8l": {
                            "name": "TX_DL_DELAY_8L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                ""
                            ]
                        }
                    }
                },
                "rx_dl_delay_8L": {
                    "name": "RX_DL_DELAY_8L",
                    "addressOffset": "0x3F8",
                    "desc": [
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                        "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                    ],
                    "fields": {
                        "rx_dl_delay_8l": {
                            "name": "RX_DL_DELAY_8L",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "desc": [
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid. ",
                                "Indicates DL measurement values in fixed-point format for TX datapath latency (in sampling_clk cycle). Must be qualified with tx_measure_valid."
                            ]
                        }
                    }
                },
                "dl_status_8L": {
                    "name": "DL_STATUS_8L",
                    "addressOffset": "0x3FC",
                    "desc": [
                        "Deterministic Latency Configuration ",
                        "Deterministic Latency Configuration"
                    ],
                    "fields": {
                        "tx_sync_valid_7": {
                            "name": "TX_SYNC_VALID_7",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow TX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "ftype": "boolean"
                        },
                        "tx_async_valid_7": {
                            "name": "TX_ASYNC_VALID_7",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled. ",
                                "Issues a reset to allow RX deterministic latency (DL) measurements to be retaken. - 0: Reset disabled - 1: Reset enabled."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_sync_valid_7": {
                            "name": "RX_SYNC_VALID_7",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. ",
                                "Indicates whether the TX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid."
                            ],
                            "ftype": "boolean"
                        },
                        "rx_async_valid_7": {
                            "name": "RX_ASYNC_VALID_7",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "desc": [
                                "Indicates whether RX asynchronous counter values are valid: - 0: Invalid - 1: Valid ",
                                "Indicates whether the RX deterministic latency (DL) measurement values are valid - 0: Invalid ; 1: Valid. Note: If block_lock is deasserted, this register is deasserted."
                            ],
                            "ftype": "boolean"
                        }
                    }
                }
            }
        },
        "ftile_ethernet.ftile_xcvr_cpi_reg_pkg": {
            "name": "ftile_xcvr_cpi",
            "desc": "F-Tile Transceiver Attribute Access",
            "version": "1.0.0",
            "registers": {
                "cfg_link_mng_cpi": {
                    "name": "cfg_link_mng_cpi",
                    "addressOffset": "0x3C",
                    "desc": "See F-Tile PHY User Guide, FGT Attribute Access Method, for usage examples. This register maps to 0x9003C in the transceiver.",
                    "fields": {
                        "cfg_link_mng_cpi_opcode": {
                            "name": "cfg_link_mng_cpi_opcode",
                            "desc": "Opcode field. See F-Tile PHY User Guide for values.",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_link_mng_cpi_lane_number": {
                            "name": "cfg_link_mng_cpi_lane_number",
                            "desc": "Physical lane number (0-3). Read fgt_lane_number to discover this value.",
                            "bitOffset": 8,
                            "bitWidth": 4,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_link_mng_cpi_set_get": {
                            "name": "cfg_link_mng_cpi_set_get",
                            "desc": [
                                "Logic 0 - Get parameters",
                                "Logic 1 - Set parameters"
                            ],
                            "bitOffset": 13,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_link_mng_cpi_reset": {
                            "name": "cfg_link_mng_cpi_reset",
                            "desc": [
                                "Logic 0 - Not in reset.",
                                "Logic 1 - In reset."
                            ],
                            "bitOffset": 14,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_link_mng_cpi_service_req": {
                            "name": "cfg_link_mng_cpi_service_req",
                            "desc": [
                                "Logic 0 - No request.",
                                "Logic 1 - Service requested."
                            ],
                            "bitOffset": 15,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_link_mng_cpi_data": {
                            "name": "cfg_link_mng_cpi_data",
                            "desc": "Data field. See F-Tile PHY User Guide for values.",
                            "bitOffset": 16,
                            "bitWidth": 16,
                            "reset": 0,
                            "access": "rw"
                        }
                    }
                },
                "cfg_phy_cpi": {
                    "name": "cfg_phy_cpi",
                    "addressOffset": "0x40",
                    "desc": "See F-Tile PHY User Guide, FGT Attribute Access Method, for usage examples. This register maps to 0x90040 in the transceiver.",
                    "fields": {
                        "cfg_phy_cpi_opcode": {
                            "name": "cfg_phy_cpi_opcode",
                            "desc": "Opcode field. See F-Tile PHY User Guide for values.",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_phy_cpi_lane_number": {
                            "name": "cfg_phy_cpi_lane_number",
                            "desc": "Physical lane number (0-3). Read fgt_lane_number to discover this value.",
                            "bitOffset": 8,
                            "bitWidth": 4,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_phy_cpi_set_get": {
                            "name": "cfg_phy_cpi_set_get",
                            "desc": [
                                "Logic 0 - Get parameters",
                                "Logic 1 - Set parameters"
                            ],
                            "bitOffset": 13,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_phy_cpi_reset": {
                            "name": "cfg_phy_cpi_reset",
                            "desc": [
                                "Logic 0 - Not in reset.",
                                "Logic 1 - In reset."
                            ],
                            "bitOffset": 14,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_phy_cpi_service_req": {
                            "name": "cfg_phy_cpi_service_req",
                            "desc": [
                                "Logic 0 - No request.",
                                "Logic 1 - Service requested."
                            ],
                            "bitOffset": 15,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "rw"
                        },
                        "cfg_phy_cpi_data": {
                            "name": "cfg_phy_cpi_data",
                            "desc": "Data field. See F-Tile PHY User Guide for values.",
                            "bitOffset": 16,
                            "bitWidth": 16,
                            "reset": 0,
                            "access": "rw"
                        }
                    }
                },
                "fgt_quad_lane_number": {
                    "name": "fgt_quad_lane_number",
                    "addressOffset": "0x7C",
                    "desc": "See F-Tile PHY User Guide, FGT Attribute Access Method, for usage examples. This register maps to 0xFFFFC in the transceiver.",
                    "fields": {
                        "fgt_lane_number": {
                            "name": "fgt_lane_number",
                            "desc": "FGT Lane Number (0-3)",
                            "bitOffset": 0,
                            "bitWidth": 2,
                            "access": "ro"
                        },
                        "fgt_quad_number": {
                            "name": "fgt_quad_number",
                            "desc": "FGT Quad Number (0-3)",
                            "bitOffset": 2,
                            "bitWidth": 2,
                            "access": "ro"
                        }
                    }
                }
            }
        },
        "sys_id.sys_id_reg_pkg": {
            "name": "System Identifier",
            "mnemonic": "sys_id",
            "desc": [
                "FPGA bitstream system identification information.",
                "The information in this register set is populated by a Memory Initialisation File (mif). This file is generated by the script `generate_sys_id_register_file`.",
                "This allows the information to be updated after the bitstream is successfully placed and routed using the Quartus ECO process `tcl:update_mif_files` ."
            ],
            "version": "1.0.0",
            "registers": {
                "bitstream": {
                    "name": "Bitstream",
                    "desc": [],
                    "fields": {
                        "bitstream": {
                            "name": "Bitstream Identifier",
                            "desc": [
                                "Identification number that uniquely identifies this bitstream.",
                                "Calculated as the least significant 32 bits of the md5 checksum of the bitsream name.",
                                "For example: 'ska-mid-cbf-tdc-correlator' => `$ echo -n ska-mid-cbf-tdc-correlator | md5sum | cut -c 25-32` returns: `f3923f36`.",
                                "If the bitstream is a base bitstream with partially reconfigurable regions then the revision string doesn't include the PR region. e.g. 'talon_dx-tdc-base'."
                            ],
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "ftype": "natural",
                            "access": "ro"
                        }
                    }
                },
                "version": {
                    "name": "Bitstream Version",
                    "desc": [
                        "The semantic version of the bitstream. See https://semver.org/",
                        "Given a version number MAJOR.MINOR.PATCH, increment the:",
                        " * MAJOR version when you make incompatible API changes,",
                        " * MINOR version when you add functionality in a backwards compatible manner, and",
                        " * PATCH version when you make backwards compatible bug fixes.",
                        "Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format."
                    ],
                    "width": 32,
                    "fields": {
                        "major": {
                            "name": "Major Version",
                            "desc": "The major version. Incremented when incompatible API changes are made.",
                            "ftype": "natural",
                            "bitOffset": 24,
                            "bitWidth": 8,
                            "access": "ro",
                            "reset": 0,
                            "repeat": 1
                        },
                        "minor": {
                            "name": "Minor Version",
                            "desc": "The minor version. Incremented when functionality is added in a backwards compatible manner.",
                            "ftype": "natural",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro",
                            "reset": 0
                        },
                        "patch": {
                            "name": "Patch Version",
                            "desc": "The patch version. Incremented when backwards compatible bug fixes are made.",
                            "ftype": "natural",
                            "bitOffset": 8,
                            "bitWidth": 8,
                            "access": "ro",
                            "reset": 0
                        },
                        "prerelease": {
                            "name": "Pre-release Version",
                            "desc": "The prerelease version. Incremented when a testing image is made. For published bitstreams this should be zero.",
                            "ftype": "natural",
                            "bitOffset": 0,
                            "bitWidth": 8,
                            "access": "ro",
                            "reset": 0
                        }
                    }
                },
                "commit": {
                    "name": "Git Commit Hash",
                    "desc": "",
                    "fields": {
                        "commit": {
                            "name": "Git Commit Hash",
                            "desc": "Least significant 32b of the git commit hash for the bitstream base or persona.",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "ftype": "natural",
                            "access": "ro"
                        }
                    }
                },
                "scratch": {
                    "name": "Scratch",
                    "desc": "A register that you can write and read-back to test basic register bus access.",
                    "fields": {
                        "scratch": {
                            "name": "Scratch",
                            "desc": "Write-readback field.",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "ftype": "natural",
                            "access": "rw"
                        }
                    }
                }
            }
        },
        "seu_detection.seu_detection_reg_pkg": {
            "name": "seu_detection",
            "desc": "Wrapper for the Advanced SEU Detection (Agilex 7) IP, with off-chip (software-based) sensitivity lookup.",
            "version": "1.0.0",
            "registers": {
                "status": {
                    "name": "status",
                    "addressOffset": "0x0",
                    "fields": {
                        "sys_error": {
                            "name": "sys_error",
                            "desc": "Logic 1 indicates that there is an error in the system while retrieving the SEU error.",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "access": "ro",
                            "ftype": "boolean"
                        },
                        "seu_error": {
                            "name": "seu_error",
                            "desc": [
                                "Logic 1 indicates that there is a pending message in the SEU message queue.",
                                "Write logic 1 to dequeue the message after reading seu_sector_address and seu_error_data.",
                                "Logic 0 indicates there are no pending messages."
                            ],
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "access": "scl",
                            "ftype": "boolean"
                        },
                        "sdm_error": {
                            "name": "sdm_error",
                            "desc": [
                                "Logic 1 indicates that there is a pending message in the SDM message queue.",
                                "Write logic 1 to dequeue the message after reading sdm_sector_address and sdm_error_data.",
                                "Logic 0 indicates there are no pending messages."
                            ],
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "access": "scl",
                            "ftype": "boolean"
                        },
                        "sdm_queue_full": {
                            "name": "sdm_queue_full",
                            "desc": [
                                "Logic 1 indicates that the SDM error message queue is full."
                            ],
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "access": "ro",
                            "ftype": "boolean"
                        }
                    }
                },
                "seu_sector_address": {
                    "name": "seu_sector_address",
                    "addressOffset": "0x8",
                    "fields": {
                        "seu_sector_address": {
                            "name": "seu_sector_address",
                            "desc": "Sector address of the SEU error.",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro"
                        },
                        "seu_error_type": {
                            "name": "seu_error_type",
                            "desc": [
                                "Error Type:",
                                " - 0000   : SEU Error.",
                                " - 0001   : SDM and Subsystem ECC Error.",
                                " - 0010   : Misc CNT Error. Contact Intel Customer Support for further assistance when you see this error.",
                                " - 0011   : SmartVID Error.",
                                " - 0100   : Misc SDM Error.",
                                " - Others : Reserved."
                            ],
                            "bitOffset": 4,
                            "bitWidth": 4,
                            "access": "ro"
                        }
                    }
                },
                "seu_error_data": {
                    "name": "seu_error_data",
                    "addressOffset": "0xC",
                    "fields": {
                        "location_error_type": {
                            "name": "location_error_type",
                            "desc": [
                                "Error Type:",
                                " - 001    : Single bit error.",
                                " - 010    : Double adjacent bit error.",
                                " - 011    : Uncorrectable multiple bit error.",
                                " - Others : Reserved."
                            ],
                            "bitOffset": 29,
                            "bitWidth": 3,
                            "access": "ro"
                        },
                        "correction_status": {
                            "name": "correction_status",
                            "desc": [
                                "Correction Status:",
                                " - 0 : Not Corrected.",
                                " - 1 : Corrected."
                            ],
                            "bitOffset": 28,
                            "bitWidth": 1,
                            "access": "ro",
                            "ftype": "boolean"
                        },
                        "bit_position": {
                            "name": "bit_position",
                            "desc": "Bit position within frame.",
                            "bitOffset": 12,
                            "bitWidth": 13,
                            "access": "ro"
                        },
                        "row_frame_index": {
                            "name": "row_frame_index",
                            "desc": "Combination of row and frame index.",
                            "bitOffset": 0,
                            "bitWidth": 12,
                            "access": "ro"
                        }
                    }
                },
                "sdm_sector_address": {
                    "name": "sdm_sector_address",
                    "addressOffset": "0x10",
                    "fields": {
                        "sdm_sector_address": {
                            "name": "sdm_sector_address",
                            "desc": "Sector address of the SDM error.",
                            "bitOffset": 16,
                            "bitWidth": 8,
                            "access": "ro"
                        },
                        "sdm_error_type": {
                            "name": "sdm_error_type",
                            "desc": [
                                "Error Type:",
                                " - 0000   : SEU Error.",
                                " - 0001   : SDM and Subsystem ECC Error.",
                                " - 0010   : Misc CNT Error. Contact Intel Customer Support for further assistance when you see this error.",
                                " - 0011   : SmartVID Error.",
                                " - 0100   : Misc SDM Error.",
                                " - Others : Reserved."
                            ],
                            "bitOffset": 4,
                            "bitWidth": 4,
                            "access": "ro"
                        }
                    }
                },
                "sdm_error_data": {
                    "name": "sdm_error_data",
                    "addressOffset": "0x14",
                    "fields": {
                        "sdm_error_data": {
                            "name": "sdm_error_data",
                            "desc": [
                                "SDM Error Data. Decode depends on the sdm_error_type field.",
                                "Refer to the Intel Agilex 7 SEU Mitigation User Guide."
                            ],
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro"
                        }
                    }
                }
            }
        },
        "hbm_status.hbm_status_register_reg_pkg": {
            "name": "hbm_status_register",
            "desc": "HBM Status Registers",
            "version": "0.1.0",
            "registers": {
                "hbm_cal_status": {
                    "name": "hbm_cal_status",
                    "desc": "HBM calibration status",
                    "addressOffset": "0x0",
                    "fields": {
                        "hbm_reset_in_progress": {
                            "name": "hbm_reset_in_progress",
                            "desc": "'1' indicates HBM reset is in progress",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "ftype": "boolean",
                            "access": "ro"
                        },
                        "hbm_calibration_success": {
                            "name": "hbm_calibration_success",
                            "desc": "'1' indicates HBM calibration is successful",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "ftype": "boolean",
                            "access": "ro"
                        },
                        "hbm_calibration_fail": {
                            "name": "hbm_calibration_fail",
                            "desc": "'1' indicates HBM calibration is failed",
                            "bitOffset": 2,
                            "bitWidth": 1,
                            "ftype": "boolean",
                            "access": "ro"
                        },
                        "noc_pll_locked": {
                            "name": "noc_pll_locked",
                            "desc": "'1' indicates NOC clock PLL is locked",
                            "bitOffset": 3,
                            "bitWidth": 1,
                            "ftype": "boolean",
                            "access": "ro"
                        },
                        "hbm_cattrip": {
                            "name": "hbm_cattrip",
                            "desc": "indicates HBM2E catastrophic trip",
                            "bitOffset": 4,
                            "bitWidth": 1,
                            "ftype": "boolean",
                            "access": "ro"
                        },
                        "hbm_temp": {
                            "name": "hbm_temp",
                            "desc": "HBM Temperature Compensated Refresh Value",
                            "bitOffset": 8,
                            "bitWidth": 3,
                            "access": "ro"
                        }
                    }
                },
                "hbm_interrupt": {
                    "name": "hbm_interrupt",
                    "desc": "HBM level sensitive interrupt signals",
                    "addressOffset": "0x4",
                    "fields": {
                        "hbm_interrupt": {
                            "name": "hbm_interrupt",
                            "desc": "level sensitive interrupt",
                            "bitOffset": 0,
                            "bitWidth": 16,
                            "access": "ro"
                        }
                    }
                }
            }
        },
        "alma_fsp_eng_test.alma_fsp_eng_test_reg_pkg": {
            "name": "alma_fsp_eng_test",
            "desc": "FW IP Template",
            "version": "1.0.0",
            "registers": {
                "magic": {
                    "name": "magic",
                    "addressOffset": "0x0",
                    "fields": {
                        "magic": {
                            "name": "magic",
                            "desc": "Magic Word Register",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro"
                        }
                    }
                },
                "scratch": {
                    "name": "scratch",
                    "addressOffset": "0x4",
                    "fields": {
                        "scratch": {
                            "name": "stratch",
                            "desc": "Scratch Data Register",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "reset": 0,
                            "access": "rw"
                        }
                    }
                },
                "config": {
                    "name": "config",
                    "addressOffset": "0x8",
                    "fields": {
                        "tpg_en": {
                            "name": "tpg_en",
                            "desc": "Arkville Test Pattern Generator Enable",
                            "bitOffset": 0,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "rw",
                            "ftype": "boolean"
                        },
                        "ark_stop": {
                            "name": "ark_stop",
                            "desc": "Arkville interface write stop",
                            "bitOffset": 1,
                            "bitWidth": 1,
                            "reset": 0,
                            "access": "ro",
                            "ftype": "boolean"
                        },
                        "pkt_en": {
                            "name": "pkt_en",
                            "desc": "Ethernet Test Pattern Generator Enable",
                            "bitOffset": 8,
                            "bitWidth": 12,
                            "reset": 0,
                            "access": "rw",
                            "ftype": "natural"
                        }
                    }
                },
                "ark_pkt_count": {
                    "name": "ark_pkt_count",
                    "addressOffset": "0xC",
                    "fields": {
                        "ark_pkt_count": {
                            "name": "ark_pkt_count",
                            "desc": "Arkville packet count.",
                            "bitOffset": 0,
                            "bitWidth": 32,
                            "access": "ro",
                            "ftype": "natural"
                        }
                    }
                }
            }
        }
    },
    "DeTrI": {
        "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_DM|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 64,
            "firmware_offset": 128,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_DM|E_REG_BANK",
            "regdef": {
                "mnemonic": "dm_tester",
                "version": "1.0.0"
            }
        },
        "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_DM|E_TRAFFIC_GEN|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 80,
            "firmware_offset": 256,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_DM|E_TRAFFIC_GEN|E_REG_BANK",
            "regdef": {
                "mnemonic": "prbs_generator",
                "version": "1.0.0"
            }
        },
        "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_HBMCT|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 88,
            "firmware_offset": 512,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_HBMCT|E_REG_BANK",
            "regdef": {
                "mnemonic": "noc_tester",
                "version": "1.0.0"
            }
        },
        "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_HBMCT|E_TRAFFIC_GEN|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 80,
            "firmware_offset": 384,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_NOC_TESTER|E_NOC_TESTER_HBMCT|E_TRAFFIC_GEN|E_REG_BANK",
            "regdef": {
                "mnemonic": "prbs_generator",
                "version": "1.0.0"
            }
        },
        "TOP|E_BASE|E_PERSONA|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 16,
            "firmware_offset": 0,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_REG_BANK",
            "regdef": {
                "mnemonic": "alma_fsp_eng_test",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/alma_fsp_eng_test.alma_fsp_eng_test_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|E_PERSONA|E_SYS_ID|E_CSR": {
            "bridge_address": 4177526784,
            "firmware_depth": 16,
            "firmware_offset": 16,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_SYS_ID|E_CSR",
            "regdef": {
                "mnemonic": "sys_id",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/sys_id.sys_id_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|E_PERSONA|E_VF_TESTER|G_TESTER[0]|E_VF|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 20,
            "firmware_offset": 32,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_VF_TESTER|G_TESTER[0]|E_VF|E_REG_BANK",
            "regdef": {
                "mnemonic": "visibility_framer",
                "version": "1.0.0"
            }
        },
        "TOP|E_BASE|E_PERSONA|E_VF_TESTER|G_TESTER[1]|E_VF|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 20,
            "firmware_offset": 64,
            "fpga_hierarchy": "TOP|E_BASE|E_PERSONA|E_VF_TESTER|G_TESTER[1]|E_VF|E_REG_BANK",
            "regdef": {
                "mnemonic": "visibility_framer",
                "version": "1.0.0"
            }
        },
        "TOP|E_BASE|E_SEU_DETECTION|E_REG_BANK": {
            "bridge_address": 4177526784,
            "firmware_depth": 24,
            "firmware_offset": 1056,
            "fpga_hierarchy": "TOP|E_BASE|E_SEU_DETECTION|E_REG_BANK",
            "regdef": {
                "mnemonic": "seu_detection",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/seu_detection.seu_detection_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|E_SYS_ID|E_CSR": {
            "bridge_address": 4177526784,
            "firmware_depth": 16,
            "firmware_offset": 1040,
            "fpga_hierarchy": "TOP|E_BASE|E_SYS_ID|E_CSR",
            "regdef": {
                "mnemonic": "sys_id",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/sys_id.sys_id_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 32768,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 36864,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 4608,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 5120,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 5632,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 6144,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 1152,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 1280,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 40960,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 45056,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 6656,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 7168,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 7680,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 8192,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 1408,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 1536,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 49152,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 53248,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 8704,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 9216,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 9728,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 10240,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 1664,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 1792,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 57344,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 61440,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 10752,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 11264,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 11776,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 12288,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 1920,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2048,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[0]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 65536,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 69632,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 12800,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 13312,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 13824,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 14336,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2176,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2304,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 73728,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 77824,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 14848,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 15360,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 15872,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 16384,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2432,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2560,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 81920,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 86016,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 16896,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 17408,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 17920,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 18432,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2688,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2816,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 90112,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 94208,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 18944,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 19456,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 19968,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 20480,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 2944,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3072,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[1]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 98304,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 102400,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 20992,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 21504,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 22016,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 22528,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3200,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3328,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[0]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 106496,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 110592,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 23040,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 23552,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 24064,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 24576,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3456,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3584,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[1]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 114688,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 118784,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 25088,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 25600,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 26112,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 26624,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3712,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3840,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[2]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 122880,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_BASE_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_base",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_base_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 4096,
            "firmware_offset": 126976,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|E_ETH_EHIP_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_ehip",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_ehip_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 27136,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[0]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 27648,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[1]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 28160,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[2]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 512,
            "firmware_offset": 28672,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_FEC_BRIDGE[3]|E_ETH_FEC_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_ethernet_fec",
                "version": "24.2.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_ethernet_fec_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 3968,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[0]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE": {
            "bridge_address": 4177526784,
            "firmware_depth": 128,
            "firmware_offset": 4096,
            "fpga_hierarchy": "TOP|E_BASE|G_ETHERNET_TILE[2]|G_ETHERNET_100G_R2[3]|E_ETHERNET_100G_R2|E_FTILE_ETHERNET|G_XCVR_BRIDGE[1]|E_PHY_BRIDGE",
            "regdef": {
                "mnemonic": "ftile_xcvr_cpi",
                "version": "1.0.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/ftile_ethernet.ftile_xcvr_cpi_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_HBM[0]|E_HBM_STATUS|E_HBM_STATUS_REG": {
            "bridge_address": 4177526784,
            "firmware_depth": 8,
            "firmware_offset": 1024,
            "fpga_hierarchy": "TOP|E_BASE|G_HBM[0]|E_HBM_STATUS|E_HBM_STATUS_REG",
            "regdef": {
                "mnemonic": "hbm_status_register",
                "version": "0.1.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/hbm_status.hbm_status_register_reg_pkg"
                }
            }
        },
        "TOP|E_BASE|G_HBM[1]|E_HBM_STATUS|E_HBM_STATUS_REG": {
            "bridge_address": 4177526784,
            "firmware_depth": 8,
            "firmware_offset": 1032,
            "fpga_hierarchy": "TOP|E_BASE|G_HBM[1]|E_HBM_STATUS|E_HBM_STATUS_REG",
            "regdef": {
                "mnemonic": "hbm_status_register",
                "version": "0.1.0",
                "regset": {
                    "$ref": "#/RegisterSetDefinitions/hbm_status.hbm_status_register_reg_pkg"
                }
            }
        }
    }
}